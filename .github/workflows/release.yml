name: "Release"
on:
  workflow_call:
    # inputs:
    #   RELEASE_VERSION:
    #     description: "Release version number"
    #     type: string
defaults:
  run:
    shell: bash


jobs:

  release-binary:
    name: "Release binaries"
    runs-on: ubuntu-latest
    permissions:
      contents: write
    # env:
    #   RELEASE_VERSION: ${{ inputs.RELEASE_VERSION }}
    
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Required to fetch version

      - uses: actions/setup-go@v3
        with:
          go-version-file: ./go.mod

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v3
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-docker:
    name: "Release Docker images"
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      # RELEASE_VERSION: ${{ inputs.RELEASE_VERSION }}
    
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Required to fetch version

      - uses: actions/setup-go@v3
        with:
          go-version-file: ./go.mod

      - name: Generate golang code
        run: make proto-gen

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        id: buildx
        with:
          version: latest

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Configure Docker image metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository}}
          flavor: |
            latest=auto
          tags: |
            type=semver,pattern={{version}},value=${{ needs.release-binary.outputs.VERSION }}
          labels: |
            org.opencontainers.image.title="cheqd Node Docker Image"
            org.opencontainers.image.description="Node for cheqd network"
            org.opencontainers.image.source="https://github.com/cheqd/cheqd-node"
            org.opencontainers.image.vendor="Cheqd Foundation Limited"
            org.opencontainers.image.created={{date 'dddd, MMMM Do YYYY, h:mm:ss a'}}
            org.opencontainers.image.documentation="https://docs.cheqd.io/node"

      - name: Build and push image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: docker/Dockerfile
          platforms: linux/amd64, linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

name: "Build"
on:
  workflow_call:
    # outputs:
    #   VERSION:
    #     description: "Build version number"
    #     value: ${{ jobs.build-binary.outputs.VERSION }}
defaults:
  run:
    shell: bash


jobs:

  build-binary:
    name: "Build node binary"
    runs-on: ubuntu-latest
    # outputs:
    #   VERSION: ${{ steps.set-version.outputs.VERSION }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Required to fetch version
      
      - uses: actions/setup-go@v3
        with:
          go-version-file: ./go.mod

      # # Calls a section in Makefile > Makefile > make/proto.mk > protocgen.sh
      # - name: Generate Protobufs
      #   run: make proto-gen

      - name: Set build environment variables
        id: set-env-variables
        run: |
          TM_VERSION=$(go list -m github.com/tendermint/tendermint | sed 's:.* ::')
          echo ::set-output name=TM_VERSION::"$TM_VERSION"
          DB_BACKEND="goleveldb"
          echo ::set-output name=DB_BACKEND::"$DB_BACKEND"
          BUILD_TAGS="netgo,ledger,goleveldb"
          echo ::set-output name=BUILD_TAGS::"$BUILD_TAGS"

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v3
        with:
          distribution: goreleaser
          version: latest
          args: build --single-target --skip-validate
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TM_VERSION: ${{ steps.set-env-variables.outputs.TM_VERSION }}
          DB_BACKEND: ${{ steps.set-env-variables.outputs.DB_BACKEND }}
          BUILD_TAGS: ${{ steps.set-env-variables.outputs.BUILD_TAGS }}

      - name: Store artifact
        uses: actions/upload-artifact@v3
        with:
          name: cheqd-noded
          path: dist/cheqd-noded

      - name: Run Golang unit tests
        run: go test -v ./...

      # - name: Set version number
      #   id: set-version
      #   run: |
      #     VERSION=$(build/cheqd-noded version 2>&1)
      #     echo ::set-output name=VERSION::"$VERSION"

  build-docker:
    name: "Build Docker image"
    runs-on: ubuntu-latest
    env:
      DOCKER_TEST_IMAGE: ${{ github.repository }}:test

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v3
        with:
          go-version-file: ./go.mod

      - name: Generate Protobufs
        run: make proto-gen

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        id: buildx
        with:
          install: true
          version: latest

      - name: Build image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: docker/Dockerfile
          platforms: linux/amd64
          load: true
          target: runner
          tags: ${{ env.DOCKER_TEST_IMAGE }}
          outputs: type=docker,dest=/tmp/cheqd-node-image.tar

      - name: Store Docker test image artifact
        uses: actions/upload-artifact@v3
        with:
          name: cheqd-node-image.tar
          path: /tmp/cheqd-node-image.tar

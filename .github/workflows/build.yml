name: "Build"
on:
  workflow_call:
    outputs:
      VERSION:
        description: "Build version number"
        value: ${{ jobs.build-binary.outputs.VERSION }}
defaults:
  run:
    shell: bash


jobs:
  
  unit-tests:
    name: "Unit Tests"
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '1.17'
      
      - name: Run Golang unit tests
        run: go test -v ./...

  build-binary:
    name: "Build node binary"
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.set-version.outputs.VERSION }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Required to fetch version
      
      - uses: actions/setup-go@v3
        with:
          go-version: '1.17'
      
      - uses: bufbuild/buf-setup-action@v1.7.0
        env:
          BUF_TOKEN: ${{ secrets.BUF_TOKEN }}

      # Calls a section in Makefile > Makefile > make/proto.mk > protocgen.sh
      - name: Generate golang code
        run: make proto-gen

      - name: Build node binary
        run: |
          make build
        
      - name: Store artifact
        uses: actions/upload-artifact@v3
        with:
          name: cheqd-noded
          path: build-tools/cheqd-noded

      - name: Set version number
        id: set-version
        run: |
          VERSION=$(build-tools/cheqd-noded version 2>&1)
          echo ::set-output name=VERSION::"$VERSION"

  build-docker-images:
    name: "Docker images"
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Required to fetch version

      - name: Generate golang code
        run: make proto-gen
      
      - name: Build cheqd-cli Docker image 'cheqd-noded' as entrypoint
        # TODO: Get rid of UID and GID
        run: docker build --target base -t cheqd-cli -f docker/Dockerfile --build-arg UID="$(id -u)" --build-arg GID="$(id -g)" .

      - name: Build cheqd-node Docker image with 'node-start' as entrypoint
        run: docker build --target node -t cheqd-node -f docker/Dockerfile --build-arg UID="$(id -u)" --build-arg GID="$(id -g)" .

      - name: Save cheqd-cli Docker image
        run: docker save -o cheqd-cli-image.tar cheqd-cli

      - name: Store cheqd-cli artifact
        uses: actions/upload-artifact@v3
        with:
          name: cheqd-cli-image.tar
          path: cheqd-cli-image.tar

      - name: Save cheqd-node Docker image
        run: docker save -o cheqd-node-image.tar cheqd-node

      - name: Store cheqd-node artifact
        uses: actions/upload-artifact@v3
        with:
          name: cheqd-node-image.tar
          path: cheqd-node-image.tar

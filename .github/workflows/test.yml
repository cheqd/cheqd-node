name: "Test"
on:
  workflow_call:
defaults:
  run:
    shell: bash
env:
  RUNNER_BIN_DIR: /home/runner/.local/bin
permissions:
  contents: write
  packages: read

jobs:

  # unit-tests:
  #   name: "Unit Tests"
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v3

  #     - uses: actions/setup-go@v3
  #       with:
  #         go-version-file: ./go.mod
  #         cache: true

  #     - name: Install ginkgo
  #       run: |
  #         go get github.com/onsi/ginkgo/v2/ginkgo
  #         go get github.com/onsi/gomega/...

  #     # - name: Run Ginkgo tests
  #     #   run: ginkgo -r --race --randomize-all --randomize-suites --junit-report report.xml

  #     # - uses: mikepenz/action-junit-report@v3
  #     #   if: success() || failure()        # run this step even if previous step failed
  #     #   with:
  #     #     report_paths: 'report.xml'

  integration-tests:
    name: "Integration tests"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Download binary artifact
        uses: actions/download-artifact@v3
        id: download
        with:
          name: cheqd-noded
          path: ${{ env.RUNNER_BIN_DIR }}

      - name: Restore binary permissions
        run: sudo chmod +x ${{ env.RUNNER_BIN_DIR }}/cheqd-noded

      - name: Download node Docker image
        uses: actions/download-artifact@v3
        with:
          name: cheqd-node-build.tar

      - name: Load node Docker image
        run: docker load -i cheqd-node-build.tar

      - name: Generate localnet configs
        working-directory: ./docker/localnet
        run: |
          bash gen-network-config.sh
          sudo chown -R 1000:1000 network-config

      - name: Set up Docker localnet
        working-directory: ./docker/localnet
        run: |
          docker compose --env-file docker-compose.env up --detach --no-build

      - name: Import keys
        working-directory: ./docker/localnet
        run: |
          bash import-keys.sh

      - uses: actions/setup-go@v3
        with:
          go-version-file: ./go.mod
          cache: true

      - name: Install ginkgo
        working-directory: ./..
        run: go install github.com/onsi/ginkgo/v2/ginkgo@latest

      - name: Run tests
        working-directory: ./tests/integration
        run: ginkgo -r --tags integration --race --randomize-suites --keep-going --trace --junit-report report.xml

      # - name: Test Report
      #   uses: dorny/test-reporter@v1
      #   if: always()
      #   with:
      #     name: JEST Tests
      #     path: ./report.xml
      #     reporter: jest-junit 

name: "Unit"
on:
  workflow_call:
defaults:
  run:
    shell: bash
env:
  RUNNER_BIN_DIR: /home/runner/.local/bin
permissions:
  contents: write
  packages: read
  checks: write

jobs:

  unit-tests:
    name: "Unit Tests"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v3
        with:
          go-version-file: ./go.mod
          cache: true

      - name: Install ginkgo
        working-directory: ./..
        run: |
          go install github.com/onsi/ginkgo/v2/ginkgo@latest

      - name: Run Ginkgo tests
        run: ginkgo -r --race --randomize-all --randomize-suites --keep-going --trace --junit-report report-unit.xml

      - name: Upload unit tests result
        uses: actions/upload-artifact@v3
        with:
          name: report-unit.xml
          path: report-unit.xml

  integration-tests:
    name: "Integration Test"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Download binary artifact
        uses: actions/download-artifact@v3
        id: download
        with:
          name: cheqd-noded
          path: ${{ env.RUNNER_BIN_DIR }}

      - name: Restore binary permissions
        run: sudo chmod +x ${{ env.RUNNER_BIN_DIR }}/cheqd-noded

      - name: Download node Docker image
        uses: actions/download-artifact@v3
        with:
          name: cheqd-node-build.tar

      - name: Load node Docker image
        run: docker load -i cheqd-node-build.tar

      - name: Generate localnet configs
        working-directory: ./docker/localnet
        run: |
          bash gen-network-config.sh
          sudo chown -R 1000:1000 network-config

      - name: Set up Docker localnet
        working-directory: ./docker/localnet
        run: |
          docker compose --env-file docker-compose.env up --detach --no-build

      - name: Import keys
        working-directory: ./docker/localnet
        run: |
          bash import-keys.sh

      - uses: actions/setup-go@v3
        with:
          go-version-file: ./go.mod
          cache: true

      - name: Install ginkgo
        working-directory: ./..
        run: go install github.com/onsi/ginkgo/v2/ginkgo@latest

      - name: Run tests
        working-directory: ./tests/integration
        run: ginkgo -r --tags integration --race --randomize-suites --keep-going --trace --junit-report ../../report-integration.xml
      
      - name: Upload integration tests result
        uses: actions/upload-artifact@v3
        with:
          name: report-integration.xml
          path: report-integration.xml

  report-results:
    name: "Report"
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests]
    if: always()

    steps:
      - uses: actions/checkout@v3

      - name: Download unit tests report
        uses: actions/download-artifact@v3
        with:
          name: report-unit.xml

      - name: Download integration tests report
        uses: actions/download-artifact@v3
        with:
          name: report-integration.xml

      - name: Combine test results
        run: |
          python .github/scripts/xml_combine.py report-integration.xml report-unit.xml > report.xml

      - uses: mikepenz/action-junit-report@v3
        with:
          report_paths: 'report.xml'
          token: ${{ secrets.GITHUB_TOKEN }}
          check_name: ""
          suite_regex: '*'
          include_passed: true
          detailed_summary: true

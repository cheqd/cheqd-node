{
  "swagger": "2.0",
  "info": {
    "title": "cheqd/resource/v2/query.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/cheqd/resource/v2/{collectionId}/metadata": {
      "get": {
        "summary": "Fetch metadata for all resources in a collection",
        "operationId": "CollectionResources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cheqd.resource.v2.QueryCollectionResourcesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "collectionId",
            "description": "collection_id is an identifier of the DidDocument the resource belongs to.\nFormat: \u003cunique-identifier\u003e\n\nExamples:\n- c82f2b02-bdab-4dd7-b833-3e143745d612\n- wGHEXrZvJxR8vw5P3UWH1j",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.countTotal",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "cheqd.resource.v2.Query"
        ]
      }
    },
    "/cheqd/resource/v2/{collectionId}/resources/{id}": {
      "get": {
        "summary": "Fetch data/payload for a specific resource (without metadata)",
        "operationId": "Resource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cheqd.resource.v2.QueryResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "collectionId",
            "description": "collection_id is an identifier of the DidDocument the resource belongs to.\nFormat: \u003cunique-identifier\u003e\n\nExamples:\n- c82f2b02-bdab-4dd7-b833-3e143745d612\n- wGHEXrZvJxR8vw5P3UWH1j",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "id is a unique id of the resource.\nFormat: \u003cuuid\u003e",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "cheqd.resource.v2.Query"
        ]
      }
    },
    "/cheqd/resource/v2/{collectionId}/resources/{id}/metadata": {
      "get": {
        "summary": "Fetch only metadata for a specific resource",
        "operationId": "ResourceMetadata",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/cheqd.resource.v2.QueryResourceMetadataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        },
        "parameters": [
          {
            "name": "collectionId",
            "description": "collection_id is an identifier of the DidDocument the resource belongs to.\nFormat: \u003cunique-identifier\u003e\n\nExamples:\n- c82f2b02-bdab-4dd7-b833-3e143745d612\n- wGHEXrZvJxR8vw5P3UWH1j",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "id is a unique id of the resource.\nFormat: \u003cuuid\u003e",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "cheqd.resource.v2.Query"
        ]
      }
    }
  },
  "definitions": {
    "cheqd.resource.v2.AlternativeUri": {
      "type": "object",
      "properties": {
        "uri": {
          "type": "string",
          "title": "uri is the URI of the Resource.\nExamples:\n- did:cheqd:testnet:MjYxNzYKMjYxNzYK/resources/4600ea35-8916-4ac4-b412-55b8f49dd94e\n- https://resolver..cheqd.net/1.0/identifiers/did:cheqd:testnet:MjYxNzYKMjYxNzYK/resources/4600ea35-8916-4ac4-b412-55b8f49dd94e\n- https://example.com/example.json\n- https://gateway.ipfs.io/ipfs/bafybeihetj2ng3d74k7t754atv2s5dk76pcqtvxls6dntef3xa6rax25xe\n- ipfs://bafybeihetj2ng3d74k7t754atv2s5dk76pcqtvxls6dntef3xa6rax25xe"
        },
        "description": {
          "type": "string",
          "title": "description is a human-readable description of the URI. Defined client-side.\nExamples:\n- did-uri\n- http-uri\n- ipfs-uri"
        }
      },
      "description": "AlternativeUri are alternative URIs that can be used to access the Resource.\nBy default, at least the DID URI equivalent of the Resource is populated."
    },
    "cheqd.resource.v2.Metadata": {
      "type": "object",
      "properties": {
        "collectionId": {
          "type": "string",
          "title": "collection_id is the ID of the collection that the Resource belongs to. Defined client-side.\nThis field is the unique identifier of the DID linked to this Resource"
        },
        "id": {
          "type": "string",
          "title": "id is the ID of the Resource. Defined client-side.\nThis field is a unique identifier for this specific version of the Resource.\nFormat: \u003cuuid\u003e"
        },
        "name": {
          "type": "string",
          "title": "name is a human-readable name for the Resource. Defined client-side.\nDoes not change between different versions.\nExample: PassportSchema, EducationTrustRegistry"
        },
        "version": {
          "type": "string",
          "title": "version is a human-readable semantic version for the Resource. Defined client-side.\nStored as a string. OPTIONAL.\nExample: 1.0.0, v2.1.0"
        },
        "resourceType": {
          "type": "string",
          "title": "resource_type is a Resource type that identifies what the Resource is. Defined client-side.\nThis is NOT the same as the resource's media type.\nExample: AnonCredsSchema, StatusList2021"
        },
        "alsoKnownAs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cheqd.resource.v2.AlternativeUri"
          },
          "description": "List of alternative URIs for the SAME Resource."
        },
        "mediaType": {
          "type": "string",
          "title": "media_type is IANA media type of the Resource. Defined ledger-side.\nExample: application/json, image/png"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "title": "created is the time at which the Resource was created. Defined ledger-side.\nFormat: RFC3339\nExample: 2021-01-01T00:00:00Z"
        },
        "checksum": {
          "type": "string",
          "title": "checksum is a SHA-256 checksum hash of the Resource. Defined ledger-side.\nExample: d14a028c2a3a2bc9476102bb288234c415a2b01f828ea62ac5b3e42f"
        },
        "previousVersionId": {
          "type": "string",
          "title": "previous_version_id is the ID of the previous version of the Resource. Defined ledger-side.\nThis is based on the Resource's name and Resource type to determine whether it's the same Resource.\nFormat: \u003cuuid\u003e"
        },
        "nextVersionId": {
          "type": "string",
          "title": "next_version_id is the ID of the next version of the Resource. Defined ledger-side.\nThis is based on the Resource's name and Resource type to determine whether it's the same Resource.\nFormat: \u003cuuid\u003e"
        }
      },
      "title": "Metadata stores the metadata of a DID-Linked Resource"
    },
    "cheqd.resource.v2.QueryCollectionResourcesResponse": {
      "type": "object",
      "properties": {
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cheqd.resource.v2.Metadata"
          },
          "title": "resources is the requested collection of resource metadata"
        },
        "pagination": {
          "$ref": "#/definitions/cosmos.base.query.v1beta1.PageResponse",
          "description": "pagination defines the pagination in the response."
        }
      },
      "title": "QueryCollectionResourcesResponse is the response type for the Query/CollectionResources RPC method"
    },
    "cheqd.resource.v2.QueryResourceMetadataResponse": {
      "type": "object",
      "properties": {
        "resource": {
          "$ref": "#/definitions/cheqd.resource.v2.Metadata",
          "title": "resource is the requested resource metadata"
        }
      },
      "title": "QueryResourceMetadataResponse is the response type for the Query/ResourceMetadata RPC method"
    },
    "cheqd.resource.v2.QueryResourceResponse": {
      "type": "object",
      "properties": {
        "resource": {
          "$ref": "#/definitions/cheqd.resource.v2.ResourceWithMetadata",
          "title": "Successful resolution of the resource returns the following:\n- resource is the requested resource\n- metadata is the resource metadata associated with the requested resource"
        }
      },
      "title": "QueryResourceResponse is the response type for the Query/Resource RPC method"
    },
    "cheqd.resource.v2.Resource": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "format": "byte",
          "title": "bytes is the raw data of the Resource"
        }
      },
      "title": "Resource stores the contents of a DID-Linked Resource"
    },
    "cheqd.resource.v2.ResourceWithMetadata": {
      "type": "object",
      "properties": {
        "resource": {
          "$ref": "#/definitions/cheqd.resource.v2.Resource"
        },
        "metadata": {
          "$ref": "#/definitions/cheqd.resource.v2.Metadata"
        }
      },
      "title": "ResourceWithMetadata describes the overall structure of a DID-Linked Resource"
    },
    "cosmos.base.query.v1beta1.PageRequest": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "format": "byte",
          "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set."
        },
        "offset": {
          "type": "string",
          "format": "uint64",
          "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set."
        },
        "limit": {
          "type": "string",
          "format": "uint64",
          "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app."
        },
        "countTotal": {
          "type": "boolean",
          "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set."
        },
        "reverse": {
          "type": "boolean",
          "description": "reverse is set to true if results are to be returned in the descending order.\n\nSince: cosmos-sdk 0.43"
        }
      },
      "description": "message SomeRequest {\n         Foo some_parameter = 1;\n         PageRequest pagination = 2;\n }",
      "title": "PageRequest is to be embedded in gRPC request messages for efficient\npagination. Ex:"
    },
    "cosmos.base.query.v1beta1.PageResponse": {
      "type": "object",
      "properties": {
        "nextKey": {
          "type": "string",
          "format": "byte",
          "description": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently. It will be empty if\nthere are no more results."
        },
        "total": {
          "type": "string",
          "format": "uint64",
          "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise"
        }
      },
      "description": "PageResponse is to be embedded in gRPC response messages where the\ncorresponding request message has used PageRequest.\n\n message SomeResponse {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n }"
    },
    "google.protobuf.Any": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "grpc.gateway.runtime.Error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/google.protobuf.Any"
          }
        }
      }
    }
  }
}

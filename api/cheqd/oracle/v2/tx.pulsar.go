// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package oraclev2

import (
	_ "cosmossdk.io/api/cosmos/msg/v1"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_MsgAggregateExchangeRatePrevote           protoreflect.MessageDescriptor
	fd_MsgAggregateExchangeRatePrevote_hash      protoreflect.FieldDescriptor
	fd_MsgAggregateExchangeRatePrevote_feeder    protoreflect.FieldDescriptor
	fd_MsgAggregateExchangeRatePrevote_validator protoreflect.FieldDescriptor
)

func init() {
	file_cheqd_oracle_v2_tx_proto_init()
	md_MsgAggregateExchangeRatePrevote = File_cheqd_oracle_v2_tx_proto.Messages().ByName("MsgAggregateExchangeRatePrevote")
	fd_MsgAggregateExchangeRatePrevote_hash = md_MsgAggregateExchangeRatePrevote.Fields().ByName("hash")
	fd_MsgAggregateExchangeRatePrevote_feeder = md_MsgAggregateExchangeRatePrevote.Fields().ByName("feeder")
	fd_MsgAggregateExchangeRatePrevote_validator = md_MsgAggregateExchangeRatePrevote.Fields().ByName("validator")
}

var _ protoreflect.Message = (*fastReflection_MsgAggregateExchangeRatePrevote)(nil)

type fastReflection_MsgAggregateExchangeRatePrevote MsgAggregateExchangeRatePrevote

func (x *MsgAggregateExchangeRatePrevote) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgAggregateExchangeRatePrevote)(x)
}

func (x *MsgAggregateExchangeRatePrevote) slowProtoReflect() protoreflect.Message {
	mi := &file_cheqd_oracle_v2_tx_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgAggregateExchangeRatePrevote_messageType fastReflection_MsgAggregateExchangeRatePrevote_messageType
var _ protoreflect.MessageType = fastReflection_MsgAggregateExchangeRatePrevote_messageType{}

type fastReflection_MsgAggregateExchangeRatePrevote_messageType struct{}

func (x fastReflection_MsgAggregateExchangeRatePrevote_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgAggregateExchangeRatePrevote)(nil)
}
func (x fastReflection_MsgAggregateExchangeRatePrevote_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgAggregateExchangeRatePrevote)
}
func (x fastReflection_MsgAggregateExchangeRatePrevote_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgAggregateExchangeRatePrevote
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgAggregateExchangeRatePrevote) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgAggregateExchangeRatePrevote
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgAggregateExchangeRatePrevote) Type() protoreflect.MessageType {
	return _fastReflection_MsgAggregateExchangeRatePrevote_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgAggregateExchangeRatePrevote) New() protoreflect.Message {
	return new(fastReflection_MsgAggregateExchangeRatePrevote)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgAggregateExchangeRatePrevote) Interface() protoreflect.ProtoMessage {
	return (*MsgAggregateExchangeRatePrevote)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgAggregateExchangeRatePrevote) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Hash != "" {
		value := protoreflect.ValueOfString(x.Hash)
		if !f(fd_MsgAggregateExchangeRatePrevote_hash, value) {
			return
		}
	}
	if x.Feeder != "" {
		value := protoreflect.ValueOfString(x.Feeder)
		if !f(fd_MsgAggregateExchangeRatePrevote_feeder, value) {
			return
		}
	}
	if x.Validator != "" {
		value := protoreflect.ValueOfString(x.Validator)
		if !f(fd_MsgAggregateExchangeRatePrevote_validator, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgAggregateExchangeRatePrevote) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "cheqd.oracle.v2.MsgAggregateExchangeRatePrevote.hash":
		return x.Hash != ""
	case "cheqd.oracle.v2.MsgAggregateExchangeRatePrevote.feeder":
		return x.Feeder != ""
	case "cheqd.oracle.v2.MsgAggregateExchangeRatePrevote.validator":
		return x.Validator != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgAggregateExchangeRatePrevote"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgAggregateExchangeRatePrevote does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAggregateExchangeRatePrevote) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "cheqd.oracle.v2.MsgAggregateExchangeRatePrevote.hash":
		x.Hash = ""
	case "cheqd.oracle.v2.MsgAggregateExchangeRatePrevote.feeder":
		x.Feeder = ""
	case "cheqd.oracle.v2.MsgAggregateExchangeRatePrevote.validator":
		x.Validator = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgAggregateExchangeRatePrevote"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgAggregateExchangeRatePrevote does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgAggregateExchangeRatePrevote) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "cheqd.oracle.v2.MsgAggregateExchangeRatePrevote.hash":
		value := x.Hash
		return protoreflect.ValueOfString(value)
	case "cheqd.oracle.v2.MsgAggregateExchangeRatePrevote.feeder":
		value := x.Feeder
		return protoreflect.ValueOfString(value)
	case "cheqd.oracle.v2.MsgAggregateExchangeRatePrevote.validator":
		value := x.Validator
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgAggregateExchangeRatePrevote"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgAggregateExchangeRatePrevote does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAggregateExchangeRatePrevote) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "cheqd.oracle.v2.MsgAggregateExchangeRatePrevote.hash":
		x.Hash = value.Interface().(string)
	case "cheqd.oracle.v2.MsgAggregateExchangeRatePrevote.feeder":
		x.Feeder = value.Interface().(string)
	case "cheqd.oracle.v2.MsgAggregateExchangeRatePrevote.validator":
		x.Validator = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgAggregateExchangeRatePrevote"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgAggregateExchangeRatePrevote does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAggregateExchangeRatePrevote) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cheqd.oracle.v2.MsgAggregateExchangeRatePrevote.hash":
		panic(fmt.Errorf("field hash of message cheqd.oracle.v2.MsgAggregateExchangeRatePrevote is not mutable"))
	case "cheqd.oracle.v2.MsgAggregateExchangeRatePrevote.feeder":
		panic(fmt.Errorf("field feeder of message cheqd.oracle.v2.MsgAggregateExchangeRatePrevote is not mutable"))
	case "cheqd.oracle.v2.MsgAggregateExchangeRatePrevote.validator":
		panic(fmt.Errorf("field validator of message cheqd.oracle.v2.MsgAggregateExchangeRatePrevote is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgAggregateExchangeRatePrevote"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgAggregateExchangeRatePrevote does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgAggregateExchangeRatePrevote) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cheqd.oracle.v2.MsgAggregateExchangeRatePrevote.hash":
		return protoreflect.ValueOfString("")
	case "cheqd.oracle.v2.MsgAggregateExchangeRatePrevote.feeder":
		return protoreflect.ValueOfString("")
	case "cheqd.oracle.v2.MsgAggregateExchangeRatePrevote.validator":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgAggregateExchangeRatePrevote"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgAggregateExchangeRatePrevote does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgAggregateExchangeRatePrevote) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in cheqd.oracle.v2.MsgAggregateExchangeRatePrevote", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgAggregateExchangeRatePrevote) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAggregateExchangeRatePrevote) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgAggregateExchangeRatePrevote) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgAggregateExchangeRatePrevote) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgAggregateExchangeRatePrevote)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Hash)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Feeder)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Validator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgAggregateExchangeRatePrevote)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Validator) > 0 {
			i -= len(x.Validator)
			copy(dAtA[i:], x.Validator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Validator)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Feeder) > 0 {
			i -= len(x.Feeder)
			copy(dAtA[i:], x.Feeder)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Feeder)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Hash) > 0 {
			i -= len(x.Hash)
			copy(dAtA[i:], x.Hash)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Hash)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgAggregateExchangeRatePrevote)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgAggregateExchangeRatePrevote: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgAggregateExchangeRatePrevote: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Hash = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Feeder", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Feeder = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Validator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Validator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgAggregateExchangeRatePrevoteResponse protoreflect.MessageDescriptor
)

func init() {
	file_cheqd_oracle_v2_tx_proto_init()
	md_MsgAggregateExchangeRatePrevoteResponse = File_cheqd_oracle_v2_tx_proto.Messages().ByName("MsgAggregateExchangeRatePrevoteResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgAggregateExchangeRatePrevoteResponse)(nil)

type fastReflection_MsgAggregateExchangeRatePrevoteResponse MsgAggregateExchangeRatePrevoteResponse

func (x *MsgAggregateExchangeRatePrevoteResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgAggregateExchangeRatePrevoteResponse)(x)
}

func (x *MsgAggregateExchangeRatePrevoteResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_cheqd_oracle_v2_tx_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgAggregateExchangeRatePrevoteResponse_messageType fastReflection_MsgAggregateExchangeRatePrevoteResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgAggregateExchangeRatePrevoteResponse_messageType{}

type fastReflection_MsgAggregateExchangeRatePrevoteResponse_messageType struct{}

func (x fastReflection_MsgAggregateExchangeRatePrevoteResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgAggregateExchangeRatePrevoteResponse)(nil)
}
func (x fastReflection_MsgAggregateExchangeRatePrevoteResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgAggregateExchangeRatePrevoteResponse)
}
func (x fastReflection_MsgAggregateExchangeRatePrevoteResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgAggregateExchangeRatePrevoteResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgAggregateExchangeRatePrevoteResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgAggregateExchangeRatePrevoteResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgAggregateExchangeRatePrevoteResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgAggregateExchangeRatePrevoteResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgAggregateExchangeRatePrevoteResponse) New() protoreflect.Message {
	return new(fastReflection_MsgAggregateExchangeRatePrevoteResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgAggregateExchangeRatePrevoteResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgAggregateExchangeRatePrevoteResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgAggregateExchangeRatePrevoteResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgAggregateExchangeRatePrevoteResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgAggregateExchangeRatePrevoteResponse"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgAggregateExchangeRatePrevoteResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAggregateExchangeRatePrevoteResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgAggregateExchangeRatePrevoteResponse"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgAggregateExchangeRatePrevoteResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgAggregateExchangeRatePrevoteResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgAggregateExchangeRatePrevoteResponse"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgAggregateExchangeRatePrevoteResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAggregateExchangeRatePrevoteResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgAggregateExchangeRatePrevoteResponse"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgAggregateExchangeRatePrevoteResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAggregateExchangeRatePrevoteResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgAggregateExchangeRatePrevoteResponse"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgAggregateExchangeRatePrevoteResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgAggregateExchangeRatePrevoteResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgAggregateExchangeRatePrevoteResponse"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgAggregateExchangeRatePrevoteResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgAggregateExchangeRatePrevoteResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in cheqd.oracle.v2.MsgAggregateExchangeRatePrevoteResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgAggregateExchangeRatePrevoteResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAggregateExchangeRatePrevoteResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgAggregateExchangeRatePrevoteResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgAggregateExchangeRatePrevoteResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgAggregateExchangeRatePrevoteResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgAggregateExchangeRatePrevoteResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgAggregateExchangeRatePrevoteResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgAggregateExchangeRatePrevoteResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgAggregateExchangeRatePrevoteResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgAggregateExchangeRateVote                protoreflect.MessageDescriptor
	fd_MsgAggregateExchangeRateVote_salt           protoreflect.FieldDescriptor
	fd_MsgAggregateExchangeRateVote_exchange_rates protoreflect.FieldDescriptor
	fd_MsgAggregateExchangeRateVote_feeder         protoreflect.FieldDescriptor
	fd_MsgAggregateExchangeRateVote_validator      protoreflect.FieldDescriptor
)

func init() {
	file_cheqd_oracle_v2_tx_proto_init()
	md_MsgAggregateExchangeRateVote = File_cheqd_oracle_v2_tx_proto.Messages().ByName("MsgAggregateExchangeRateVote")
	fd_MsgAggregateExchangeRateVote_salt = md_MsgAggregateExchangeRateVote.Fields().ByName("salt")
	fd_MsgAggregateExchangeRateVote_exchange_rates = md_MsgAggregateExchangeRateVote.Fields().ByName("exchange_rates")
	fd_MsgAggregateExchangeRateVote_feeder = md_MsgAggregateExchangeRateVote.Fields().ByName("feeder")
	fd_MsgAggregateExchangeRateVote_validator = md_MsgAggregateExchangeRateVote.Fields().ByName("validator")
}

var _ protoreflect.Message = (*fastReflection_MsgAggregateExchangeRateVote)(nil)

type fastReflection_MsgAggregateExchangeRateVote MsgAggregateExchangeRateVote

func (x *MsgAggregateExchangeRateVote) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgAggregateExchangeRateVote)(x)
}

func (x *MsgAggregateExchangeRateVote) slowProtoReflect() protoreflect.Message {
	mi := &file_cheqd_oracle_v2_tx_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgAggregateExchangeRateVote_messageType fastReflection_MsgAggregateExchangeRateVote_messageType
var _ protoreflect.MessageType = fastReflection_MsgAggregateExchangeRateVote_messageType{}

type fastReflection_MsgAggregateExchangeRateVote_messageType struct{}

func (x fastReflection_MsgAggregateExchangeRateVote_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgAggregateExchangeRateVote)(nil)
}
func (x fastReflection_MsgAggregateExchangeRateVote_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgAggregateExchangeRateVote)
}
func (x fastReflection_MsgAggregateExchangeRateVote_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgAggregateExchangeRateVote
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgAggregateExchangeRateVote) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgAggregateExchangeRateVote
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgAggregateExchangeRateVote) Type() protoreflect.MessageType {
	return _fastReflection_MsgAggregateExchangeRateVote_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgAggregateExchangeRateVote) New() protoreflect.Message {
	return new(fastReflection_MsgAggregateExchangeRateVote)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgAggregateExchangeRateVote) Interface() protoreflect.ProtoMessage {
	return (*MsgAggregateExchangeRateVote)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgAggregateExchangeRateVote) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Salt != "" {
		value := protoreflect.ValueOfString(x.Salt)
		if !f(fd_MsgAggregateExchangeRateVote_salt, value) {
			return
		}
	}
	if x.ExchangeRates != "" {
		value := protoreflect.ValueOfString(x.ExchangeRates)
		if !f(fd_MsgAggregateExchangeRateVote_exchange_rates, value) {
			return
		}
	}
	if x.Feeder != "" {
		value := protoreflect.ValueOfString(x.Feeder)
		if !f(fd_MsgAggregateExchangeRateVote_feeder, value) {
			return
		}
	}
	if x.Validator != "" {
		value := protoreflect.ValueOfString(x.Validator)
		if !f(fd_MsgAggregateExchangeRateVote_validator, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgAggregateExchangeRateVote) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "cheqd.oracle.v2.MsgAggregateExchangeRateVote.salt":
		return x.Salt != ""
	case "cheqd.oracle.v2.MsgAggregateExchangeRateVote.exchange_rates":
		return x.ExchangeRates != ""
	case "cheqd.oracle.v2.MsgAggregateExchangeRateVote.feeder":
		return x.Feeder != ""
	case "cheqd.oracle.v2.MsgAggregateExchangeRateVote.validator":
		return x.Validator != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgAggregateExchangeRateVote"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgAggregateExchangeRateVote does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAggregateExchangeRateVote) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "cheqd.oracle.v2.MsgAggregateExchangeRateVote.salt":
		x.Salt = ""
	case "cheqd.oracle.v2.MsgAggregateExchangeRateVote.exchange_rates":
		x.ExchangeRates = ""
	case "cheqd.oracle.v2.MsgAggregateExchangeRateVote.feeder":
		x.Feeder = ""
	case "cheqd.oracle.v2.MsgAggregateExchangeRateVote.validator":
		x.Validator = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgAggregateExchangeRateVote"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgAggregateExchangeRateVote does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgAggregateExchangeRateVote) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "cheqd.oracle.v2.MsgAggregateExchangeRateVote.salt":
		value := x.Salt
		return protoreflect.ValueOfString(value)
	case "cheqd.oracle.v2.MsgAggregateExchangeRateVote.exchange_rates":
		value := x.ExchangeRates
		return protoreflect.ValueOfString(value)
	case "cheqd.oracle.v2.MsgAggregateExchangeRateVote.feeder":
		value := x.Feeder
		return protoreflect.ValueOfString(value)
	case "cheqd.oracle.v2.MsgAggregateExchangeRateVote.validator":
		value := x.Validator
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgAggregateExchangeRateVote"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgAggregateExchangeRateVote does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAggregateExchangeRateVote) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "cheqd.oracle.v2.MsgAggregateExchangeRateVote.salt":
		x.Salt = value.Interface().(string)
	case "cheqd.oracle.v2.MsgAggregateExchangeRateVote.exchange_rates":
		x.ExchangeRates = value.Interface().(string)
	case "cheqd.oracle.v2.MsgAggregateExchangeRateVote.feeder":
		x.Feeder = value.Interface().(string)
	case "cheqd.oracle.v2.MsgAggregateExchangeRateVote.validator":
		x.Validator = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgAggregateExchangeRateVote"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgAggregateExchangeRateVote does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAggregateExchangeRateVote) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cheqd.oracle.v2.MsgAggregateExchangeRateVote.salt":
		panic(fmt.Errorf("field salt of message cheqd.oracle.v2.MsgAggregateExchangeRateVote is not mutable"))
	case "cheqd.oracle.v2.MsgAggregateExchangeRateVote.exchange_rates":
		panic(fmt.Errorf("field exchange_rates of message cheqd.oracle.v2.MsgAggregateExchangeRateVote is not mutable"))
	case "cheqd.oracle.v2.MsgAggregateExchangeRateVote.feeder":
		panic(fmt.Errorf("field feeder of message cheqd.oracle.v2.MsgAggregateExchangeRateVote is not mutable"))
	case "cheqd.oracle.v2.MsgAggregateExchangeRateVote.validator":
		panic(fmt.Errorf("field validator of message cheqd.oracle.v2.MsgAggregateExchangeRateVote is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgAggregateExchangeRateVote"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgAggregateExchangeRateVote does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgAggregateExchangeRateVote) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cheqd.oracle.v2.MsgAggregateExchangeRateVote.salt":
		return protoreflect.ValueOfString("")
	case "cheqd.oracle.v2.MsgAggregateExchangeRateVote.exchange_rates":
		return protoreflect.ValueOfString("")
	case "cheqd.oracle.v2.MsgAggregateExchangeRateVote.feeder":
		return protoreflect.ValueOfString("")
	case "cheqd.oracle.v2.MsgAggregateExchangeRateVote.validator":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgAggregateExchangeRateVote"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgAggregateExchangeRateVote does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgAggregateExchangeRateVote) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in cheqd.oracle.v2.MsgAggregateExchangeRateVote", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgAggregateExchangeRateVote) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAggregateExchangeRateVote) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgAggregateExchangeRateVote) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgAggregateExchangeRateVote) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgAggregateExchangeRateVote)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Salt)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ExchangeRates)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Feeder)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Validator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgAggregateExchangeRateVote)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Validator) > 0 {
			i -= len(x.Validator)
			copy(dAtA[i:], x.Validator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Validator)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Feeder) > 0 {
			i -= len(x.Feeder)
			copy(dAtA[i:], x.Feeder)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Feeder)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.ExchangeRates) > 0 {
			i -= len(x.ExchangeRates)
			copy(dAtA[i:], x.ExchangeRates)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ExchangeRates)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Salt) > 0 {
			i -= len(x.Salt)
			copy(dAtA[i:], x.Salt)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Salt)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgAggregateExchangeRateVote)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgAggregateExchangeRateVote: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgAggregateExchangeRateVote: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Salt", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Salt = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ExchangeRates", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ExchangeRates = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Feeder", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Feeder = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Validator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Validator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgAggregateExchangeRateVoteResponse protoreflect.MessageDescriptor
)

func init() {
	file_cheqd_oracle_v2_tx_proto_init()
	md_MsgAggregateExchangeRateVoteResponse = File_cheqd_oracle_v2_tx_proto.Messages().ByName("MsgAggregateExchangeRateVoteResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgAggregateExchangeRateVoteResponse)(nil)

type fastReflection_MsgAggregateExchangeRateVoteResponse MsgAggregateExchangeRateVoteResponse

func (x *MsgAggregateExchangeRateVoteResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgAggregateExchangeRateVoteResponse)(x)
}

func (x *MsgAggregateExchangeRateVoteResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_cheqd_oracle_v2_tx_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgAggregateExchangeRateVoteResponse_messageType fastReflection_MsgAggregateExchangeRateVoteResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgAggregateExchangeRateVoteResponse_messageType{}

type fastReflection_MsgAggregateExchangeRateVoteResponse_messageType struct{}

func (x fastReflection_MsgAggregateExchangeRateVoteResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgAggregateExchangeRateVoteResponse)(nil)
}
func (x fastReflection_MsgAggregateExchangeRateVoteResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgAggregateExchangeRateVoteResponse)
}
func (x fastReflection_MsgAggregateExchangeRateVoteResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgAggregateExchangeRateVoteResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgAggregateExchangeRateVoteResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgAggregateExchangeRateVoteResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgAggregateExchangeRateVoteResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgAggregateExchangeRateVoteResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgAggregateExchangeRateVoteResponse) New() protoreflect.Message {
	return new(fastReflection_MsgAggregateExchangeRateVoteResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgAggregateExchangeRateVoteResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgAggregateExchangeRateVoteResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgAggregateExchangeRateVoteResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgAggregateExchangeRateVoteResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgAggregateExchangeRateVoteResponse"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgAggregateExchangeRateVoteResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAggregateExchangeRateVoteResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgAggregateExchangeRateVoteResponse"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgAggregateExchangeRateVoteResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgAggregateExchangeRateVoteResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgAggregateExchangeRateVoteResponse"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgAggregateExchangeRateVoteResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAggregateExchangeRateVoteResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgAggregateExchangeRateVoteResponse"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgAggregateExchangeRateVoteResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAggregateExchangeRateVoteResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgAggregateExchangeRateVoteResponse"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgAggregateExchangeRateVoteResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgAggregateExchangeRateVoteResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgAggregateExchangeRateVoteResponse"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgAggregateExchangeRateVoteResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgAggregateExchangeRateVoteResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in cheqd.oracle.v2.MsgAggregateExchangeRateVoteResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgAggregateExchangeRateVoteResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgAggregateExchangeRateVoteResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgAggregateExchangeRateVoteResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgAggregateExchangeRateVoteResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgAggregateExchangeRateVoteResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgAggregateExchangeRateVoteResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgAggregateExchangeRateVoteResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgAggregateExchangeRateVoteResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgAggregateExchangeRateVoteResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgDelegateFeedConsent          protoreflect.MessageDescriptor
	fd_MsgDelegateFeedConsent_operator protoreflect.FieldDescriptor
	fd_MsgDelegateFeedConsent_delegate protoreflect.FieldDescriptor
)

func init() {
	file_cheqd_oracle_v2_tx_proto_init()
	md_MsgDelegateFeedConsent = File_cheqd_oracle_v2_tx_proto.Messages().ByName("MsgDelegateFeedConsent")
	fd_MsgDelegateFeedConsent_operator = md_MsgDelegateFeedConsent.Fields().ByName("operator")
	fd_MsgDelegateFeedConsent_delegate = md_MsgDelegateFeedConsent.Fields().ByName("delegate")
}

var _ protoreflect.Message = (*fastReflection_MsgDelegateFeedConsent)(nil)

type fastReflection_MsgDelegateFeedConsent MsgDelegateFeedConsent

func (x *MsgDelegateFeedConsent) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgDelegateFeedConsent)(x)
}

func (x *MsgDelegateFeedConsent) slowProtoReflect() protoreflect.Message {
	mi := &file_cheqd_oracle_v2_tx_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgDelegateFeedConsent_messageType fastReflection_MsgDelegateFeedConsent_messageType
var _ protoreflect.MessageType = fastReflection_MsgDelegateFeedConsent_messageType{}

type fastReflection_MsgDelegateFeedConsent_messageType struct{}

func (x fastReflection_MsgDelegateFeedConsent_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgDelegateFeedConsent)(nil)
}
func (x fastReflection_MsgDelegateFeedConsent_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgDelegateFeedConsent)
}
func (x fastReflection_MsgDelegateFeedConsent_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgDelegateFeedConsent
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgDelegateFeedConsent) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgDelegateFeedConsent
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgDelegateFeedConsent) Type() protoreflect.MessageType {
	return _fastReflection_MsgDelegateFeedConsent_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgDelegateFeedConsent) New() protoreflect.Message {
	return new(fastReflection_MsgDelegateFeedConsent)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgDelegateFeedConsent) Interface() protoreflect.ProtoMessage {
	return (*MsgDelegateFeedConsent)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgDelegateFeedConsent) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Operator != "" {
		value := protoreflect.ValueOfString(x.Operator)
		if !f(fd_MsgDelegateFeedConsent_operator, value) {
			return
		}
	}
	if x.Delegate != "" {
		value := protoreflect.ValueOfString(x.Delegate)
		if !f(fd_MsgDelegateFeedConsent_delegate, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgDelegateFeedConsent) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "cheqd.oracle.v2.MsgDelegateFeedConsent.operator":
		return x.Operator != ""
	case "cheqd.oracle.v2.MsgDelegateFeedConsent.delegate":
		return x.Delegate != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgDelegateFeedConsent"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgDelegateFeedConsent does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgDelegateFeedConsent) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "cheqd.oracle.v2.MsgDelegateFeedConsent.operator":
		x.Operator = ""
	case "cheqd.oracle.v2.MsgDelegateFeedConsent.delegate":
		x.Delegate = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgDelegateFeedConsent"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgDelegateFeedConsent does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgDelegateFeedConsent) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "cheqd.oracle.v2.MsgDelegateFeedConsent.operator":
		value := x.Operator
		return protoreflect.ValueOfString(value)
	case "cheqd.oracle.v2.MsgDelegateFeedConsent.delegate":
		value := x.Delegate
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgDelegateFeedConsent"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgDelegateFeedConsent does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgDelegateFeedConsent) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "cheqd.oracle.v2.MsgDelegateFeedConsent.operator":
		x.Operator = value.Interface().(string)
	case "cheqd.oracle.v2.MsgDelegateFeedConsent.delegate":
		x.Delegate = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgDelegateFeedConsent"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgDelegateFeedConsent does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgDelegateFeedConsent) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cheqd.oracle.v2.MsgDelegateFeedConsent.operator":
		panic(fmt.Errorf("field operator of message cheqd.oracle.v2.MsgDelegateFeedConsent is not mutable"))
	case "cheqd.oracle.v2.MsgDelegateFeedConsent.delegate":
		panic(fmt.Errorf("field delegate of message cheqd.oracle.v2.MsgDelegateFeedConsent is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgDelegateFeedConsent"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgDelegateFeedConsent does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgDelegateFeedConsent) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cheqd.oracle.v2.MsgDelegateFeedConsent.operator":
		return protoreflect.ValueOfString("")
	case "cheqd.oracle.v2.MsgDelegateFeedConsent.delegate":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgDelegateFeedConsent"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgDelegateFeedConsent does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgDelegateFeedConsent) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in cheqd.oracle.v2.MsgDelegateFeedConsent", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgDelegateFeedConsent) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgDelegateFeedConsent) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgDelegateFeedConsent) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgDelegateFeedConsent) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgDelegateFeedConsent)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Operator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Delegate)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgDelegateFeedConsent)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Delegate) > 0 {
			i -= len(x.Delegate)
			copy(dAtA[i:], x.Delegate)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Delegate)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Operator) > 0 {
			i -= len(x.Operator)
			copy(dAtA[i:], x.Operator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Operator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgDelegateFeedConsent)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgDelegateFeedConsent: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgDelegateFeedConsent: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Operator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Operator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Delegate", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Delegate = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgDelegateFeedConsentResponse protoreflect.MessageDescriptor
)

func init() {
	file_cheqd_oracle_v2_tx_proto_init()
	md_MsgDelegateFeedConsentResponse = File_cheqd_oracle_v2_tx_proto.Messages().ByName("MsgDelegateFeedConsentResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgDelegateFeedConsentResponse)(nil)

type fastReflection_MsgDelegateFeedConsentResponse MsgDelegateFeedConsentResponse

func (x *MsgDelegateFeedConsentResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgDelegateFeedConsentResponse)(x)
}

func (x *MsgDelegateFeedConsentResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_cheqd_oracle_v2_tx_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgDelegateFeedConsentResponse_messageType fastReflection_MsgDelegateFeedConsentResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgDelegateFeedConsentResponse_messageType{}

type fastReflection_MsgDelegateFeedConsentResponse_messageType struct{}

func (x fastReflection_MsgDelegateFeedConsentResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgDelegateFeedConsentResponse)(nil)
}
func (x fastReflection_MsgDelegateFeedConsentResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgDelegateFeedConsentResponse)
}
func (x fastReflection_MsgDelegateFeedConsentResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgDelegateFeedConsentResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgDelegateFeedConsentResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgDelegateFeedConsentResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgDelegateFeedConsentResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgDelegateFeedConsentResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgDelegateFeedConsentResponse) New() protoreflect.Message {
	return new(fastReflection_MsgDelegateFeedConsentResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgDelegateFeedConsentResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgDelegateFeedConsentResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgDelegateFeedConsentResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgDelegateFeedConsentResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgDelegateFeedConsentResponse"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgDelegateFeedConsentResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgDelegateFeedConsentResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgDelegateFeedConsentResponse"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgDelegateFeedConsentResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgDelegateFeedConsentResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgDelegateFeedConsentResponse"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgDelegateFeedConsentResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgDelegateFeedConsentResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgDelegateFeedConsentResponse"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgDelegateFeedConsentResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgDelegateFeedConsentResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgDelegateFeedConsentResponse"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgDelegateFeedConsentResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgDelegateFeedConsentResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgDelegateFeedConsentResponse"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgDelegateFeedConsentResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgDelegateFeedConsentResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in cheqd.oracle.v2.MsgDelegateFeedConsentResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgDelegateFeedConsentResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgDelegateFeedConsentResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgDelegateFeedConsentResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgDelegateFeedConsentResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgDelegateFeedConsentResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgDelegateFeedConsentResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgDelegateFeedConsentResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgDelegateFeedConsentResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgDelegateFeedConsentResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgLegacyGovUpdateParams_4_list)(nil)

type _MsgLegacyGovUpdateParams_4_list struct {
	list *[]string
}

func (x *_MsgLegacyGovUpdateParams_4_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgLegacyGovUpdateParams_4_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_MsgLegacyGovUpdateParams_4_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_MsgLegacyGovUpdateParams_4_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgLegacyGovUpdateParams_4_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message MsgLegacyGovUpdateParams at list field Keys as it is not of Message kind"))
}

func (x *_MsgLegacyGovUpdateParams_4_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_MsgLegacyGovUpdateParams_4_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_MsgLegacyGovUpdateParams_4_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgLegacyGovUpdateParams             protoreflect.MessageDescriptor
	fd_MsgLegacyGovUpdateParams_authority   protoreflect.FieldDescriptor
	fd_MsgLegacyGovUpdateParams_title       protoreflect.FieldDescriptor
	fd_MsgLegacyGovUpdateParams_description protoreflect.FieldDescriptor
	fd_MsgLegacyGovUpdateParams_keys        protoreflect.FieldDescriptor
	fd_MsgLegacyGovUpdateParams_changes     protoreflect.FieldDescriptor
)

func init() {
	file_cheqd_oracle_v2_tx_proto_init()
	md_MsgLegacyGovUpdateParams = File_cheqd_oracle_v2_tx_proto.Messages().ByName("MsgLegacyGovUpdateParams")
	fd_MsgLegacyGovUpdateParams_authority = md_MsgLegacyGovUpdateParams.Fields().ByName("authority")
	fd_MsgLegacyGovUpdateParams_title = md_MsgLegacyGovUpdateParams.Fields().ByName("title")
	fd_MsgLegacyGovUpdateParams_description = md_MsgLegacyGovUpdateParams.Fields().ByName("description")
	fd_MsgLegacyGovUpdateParams_keys = md_MsgLegacyGovUpdateParams.Fields().ByName("keys")
	fd_MsgLegacyGovUpdateParams_changes = md_MsgLegacyGovUpdateParams.Fields().ByName("changes")
}

var _ protoreflect.Message = (*fastReflection_MsgLegacyGovUpdateParams)(nil)

type fastReflection_MsgLegacyGovUpdateParams MsgLegacyGovUpdateParams

func (x *MsgLegacyGovUpdateParams) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgLegacyGovUpdateParams)(x)
}

func (x *MsgLegacyGovUpdateParams) slowProtoReflect() protoreflect.Message {
	mi := &file_cheqd_oracle_v2_tx_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgLegacyGovUpdateParams_messageType fastReflection_MsgLegacyGovUpdateParams_messageType
var _ protoreflect.MessageType = fastReflection_MsgLegacyGovUpdateParams_messageType{}

type fastReflection_MsgLegacyGovUpdateParams_messageType struct{}

func (x fastReflection_MsgLegacyGovUpdateParams_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgLegacyGovUpdateParams)(nil)
}
func (x fastReflection_MsgLegacyGovUpdateParams_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgLegacyGovUpdateParams)
}
func (x fastReflection_MsgLegacyGovUpdateParams_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgLegacyGovUpdateParams
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgLegacyGovUpdateParams) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgLegacyGovUpdateParams
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgLegacyGovUpdateParams) Type() protoreflect.MessageType {
	return _fastReflection_MsgLegacyGovUpdateParams_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgLegacyGovUpdateParams) New() protoreflect.Message {
	return new(fastReflection_MsgLegacyGovUpdateParams)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgLegacyGovUpdateParams) Interface() protoreflect.ProtoMessage {
	return (*MsgLegacyGovUpdateParams)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgLegacyGovUpdateParams) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Authority != "" {
		value := protoreflect.ValueOfString(x.Authority)
		if !f(fd_MsgLegacyGovUpdateParams_authority, value) {
			return
		}
	}
	if x.Title != "" {
		value := protoreflect.ValueOfString(x.Title)
		if !f(fd_MsgLegacyGovUpdateParams_title, value) {
			return
		}
	}
	if x.Description != "" {
		value := protoreflect.ValueOfString(x.Description)
		if !f(fd_MsgLegacyGovUpdateParams_description, value) {
			return
		}
	}
	if len(x.Keys) != 0 {
		value := protoreflect.ValueOfList(&_MsgLegacyGovUpdateParams_4_list{list: &x.Keys})
		if !f(fd_MsgLegacyGovUpdateParams_keys, value) {
			return
		}
	}
	if x.Changes != nil {
		value := protoreflect.ValueOfMessage(x.Changes.ProtoReflect())
		if !f(fd_MsgLegacyGovUpdateParams_changes, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgLegacyGovUpdateParams) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "cheqd.oracle.v2.MsgLegacyGovUpdateParams.authority":
		return x.Authority != ""
	case "cheqd.oracle.v2.MsgLegacyGovUpdateParams.title":
		return x.Title != ""
	case "cheqd.oracle.v2.MsgLegacyGovUpdateParams.description":
		return x.Description != ""
	case "cheqd.oracle.v2.MsgLegacyGovUpdateParams.keys":
		return len(x.Keys) != 0
	case "cheqd.oracle.v2.MsgLegacyGovUpdateParams.changes":
		return x.Changes != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgLegacyGovUpdateParams"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgLegacyGovUpdateParams does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgLegacyGovUpdateParams) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "cheqd.oracle.v2.MsgLegacyGovUpdateParams.authority":
		x.Authority = ""
	case "cheqd.oracle.v2.MsgLegacyGovUpdateParams.title":
		x.Title = ""
	case "cheqd.oracle.v2.MsgLegacyGovUpdateParams.description":
		x.Description = ""
	case "cheqd.oracle.v2.MsgLegacyGovUpdateParams.keys":
		x.Keys = nil
	case "cheqd.oracle.v2.MsgLegacyGovUpdateParams.changes":
		x.Changes = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgLegacyGovUpdateParams"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgLegacyGovUpdateParams does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgLegacyGovUpdateParams) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "cheqd.oracle.v2.MsgLegacyGovUpdateParams.authority":
		value := x.Authority
		return protoreflect.ValueOfString(value)
	case "cheqd.oracle.v2.MsgLegacyGovUpdateParams.title":
		value := x.Title
		return protoreflect.ValueOfString(value)
	case "cheqd.oracle.v2.MsgLegacyGovUpdateParams.description":
		value := x.Description
		return protoreflect.ValueOfString(value)
	case "cheqd.oracle.v2.MsgLegacyGovUpdateParams.keys":
		if len(x.Keys) == 0 {
			return protoreflect.ValueOfList(&_MsgLegacyGovUpdateParams_4_list{})
		}
		listValue := &_MsgLegacyGovUpdateParams_4_list{list: &x.Keys}
		return protoreflect.ValueOfList(listValue)
	case "cheqd.oracle.v2.MsgLegacyGovUpdateParams.changes":
		value := x.Changes
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgLegacyGovUpdateParams"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgLegacyGovUpdateParams does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgLegacyGovUpdateParams) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "cheqd.oracle.v2.MsgLegacyGovUpdateParams.authority":
		x.Authority = value.Interface().(string)
	case "cheqd.oracle.v2.MsgLegacyGovUpdateParams.title":
		x.Title = value.Interface().(string)
	case "cheqd.oracle.v2.MsgLegacyGovUpdateParams.description":
		x.Description = value.Interface().(string)
	case "cheqd.oracle.v2.MsgLegacyGovUpdateParams.keys":
		lv := value.List()
		clv := lv.(*_MsgLegacyGovUpdateParams_4_list)
		x.Keys = *clv.list
	case "cheqd.oracle.v2.MsgLegacyGovUpdateParams.changes":
		x.Changes = value.Message().Interface().(*Params)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgLegacyGovUpdateParams"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgLegacyGovUpdateParams does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgLegacyGovUpdateParams) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cheqd.oracle.v2.MsgLegacyGovUpdateParams.keys":
		if x.Keys == nil {
			x.Keys = []string{}
		}
		value := &_MsgLegacyGovUpdateParams_4_list{list: &x.Keys}
		return protoreflect.ValueOfList(value)
	case "cheqd.oracle.v2.MsgLegacyGovUpdateParams.changes":
		if x.Changes == nil {
			x.Changes = new(Params)
		}
		return protoreflect.ValueOfMessage(x.Changes.ProtoReflect())
	case "cheqd.oracle.v2.MsgLegacyGovUpdateParams.authority":
		panic(fmt.Errorf("field authority of message cheqd.oracle.v2.MsgLegacyGovUpdateParams is not mutable"))
	case "cheqd.oracle.v2.MsgLegacyGovUpdateParams.title":
		panic(fmt.Errorf("field title of message cheqd.oracle.v2.MsgLegacyGovUpdateParams is not mutable"))
	case "cheqd.oracle.v2.MsgLegacyGovUpdateParams.description":
		panic(fmt.Errorf("field description of message cheqd.oracle.v2.MsgLegacyGovUpdateParams is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgLegacyGovUpdateParams"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgLegacyGovUpdateParams does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgLegacyGovUpdateParams) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cheqd.oracle.v2.MsgLegacyGovUpdateParams.authority":
		return protoreflect.ValueOfString("")
	case "cheqd.oracle.v2.MsgLegacyGovUpdateParams.title":
		return protoreflect.ValueOfString("")
	case "cheqd.oracle.v2.MsgLegacyGovUpdateParams.description":
		return protoreflect.ValueOfString("")
	case "cheqd.oracle.v2.MsgLegacyGovUpdateParams.keys":
		list := []string{}
		return protoreflect.ValueOfList(&_MsgLegacyGovUpdateParams_4_list{list: &list})
	case "cheqd.oracle.v2.MsgLegacyGovUpdateParams.changes":
		m := new(Params)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgLegacyGovUpdateParams"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgLegacyGovUpdateParams does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgLegacyGovUpdateParams) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in cheqd.oracle.v2.MsgLegacyGovUpdateParams", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgLegacyGovUpdateParams) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgLegacyGovUpdateParams) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgLegacyGovUpdateParams) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgLegacyGovUpdateParams) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgLegacyGovUpdateParams)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Authority)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Title)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Description)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.Keys) > 0 {
			for _, s := range x.Keys {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.Changes != nil {
			l = options.Size(x.Changes)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgLegacyGovUpdateParams)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Changes != nil {
			encoded, err := options.Marshal(x.Changes)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.Keys) > 0 {
			for iNdEx := len(x.Keys) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Keys[iNdEx])
				copy(dAtA[i:], x.Keys[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Keys[iNdEx])))
				i--
				dAtA[i] = 0x22
			}
		}
		if len(x.Description) > 0 {
			i -= len(x.Description)
			copy(dAtA[i:], x.Description)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Description)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Title) > 0 {
			i -= len(x.Title)
			copy(dAtA[i:], x.Title)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Title)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Authority) > 0 {
			i -= len(x.Authority)
			copy(dAtA[i:], x.Authority)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Authority)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgLegacyGovUpdateParams)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgLegacyGovUpdateParams: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgLegacyGovUpdateParams: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Authority = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Title = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Description = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Keys", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Keys = append(x.Keys, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Changes", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Changes == nil {
					x.Changes = &Params{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Changes); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgLegacyGovUpdateParamsResponse protoreflect.MessageDescriptor
)

func init() {
	file_cheqd_oracle_v2_tx_proto_init()
	md_MsgLegacyGovUpdateParamsResponse = File_cheqd_oracle_v2_tx_proto.Messages().ByName("MsgLegacyGovUpdateParamsResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgLegacyGovUpdateParamsResponse)(nil)

type fastReflection_MsgLegacyGovUpdateParamsResponse MsgLegacyGovUpdateParamsResponse

func (x *MsgLegacyGovUpdateParamsResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgLegacyGovUpdateParamsResponse)(x)
}

func (x *MsgLegacyGovUpdateParamsResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_cheqd_oracle_v2_tx_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgLegacyGovUpdateParamsResponse_messageType fastReflection_MsgLegacyGovUpdateParamsResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgLegacyGovUpdateParamsResponse_messageType{}

type fastReflection_MsgLegacyGovUpdateParamsResponse_messageType struct{}

func (x fastReflection_MsgLegacyGovUpdateParamsResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgLegacyGovUpdateParamsResponse)(nil)
}
func (x fastReflection_MsgLegacyGovUpdateParamsResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgLegacyGovUpdateParamsResponse)
}
func (x fastReflection_MsgLegacyGovUpdateParamsResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgLegacyGovUpdateParamsResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgLegacyGovUpdateParamsResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgLegacyGovUpdateParamsResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgLegacyGovUpdateParamsResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgLegacyGovUpdateParamsResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgLegacyGovUpdateParamsResponse) New() protoreflect.Message {
	return new(fastReflection_MsgLegacyGovUpdateParamsResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgLegacyGovUpdateParamsResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgLegacyGovUpdateParamsResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgLegacyGovUpdateParamsResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgLegacyGovUpdateParamsResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgLegacyGovUpdateParamsResponse"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgLegacyGovUpdateParamsResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgLegacyGovUpdateParamsResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgLegacyGovUpdateParamsResponse"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgLegacyGovUpdateParamsResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgLegacyGovUpdateParamsResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgLegacyGovUpdateParamsResponse"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgLegacyGovUpdateParamsResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgLegacyGovUpdateParamsResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgLegacyGovUpdateParamsResponse"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgLegacyGovUpdateParamsResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgLegacyGovUpdateParamsResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgLegacyGovUpdateParamsResponse"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgLegacyGovUpdateParamsResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgLegacyGovUpdateParamsResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgLegacyGovUpdateParamsResponse"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgLegacyGovUpdateParamsResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgLegacyGovUpdateParamsResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in cheqd.oracle.v2.MsgLegacyGovUpdateParamsResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgLegacyGovUpdateParamsResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgLegacyGovUpdateParamsResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgLegacyGovUpdateParamsResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgLegacyGovUpdateParamsResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgLegacyGovUpdateParamsResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgLegacyGovUpdateParamsResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgLegacyGovUpdateParamsResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgLegacyGovUpdateParamsResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgLegacyGovUpdateParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgGovUpdateParams             protoreflect.MessageDescriptor
	fd_MsgGovUpdateParams_authority   protoreflect.FieldDescriptor
	fd_MsgGovUpdateParams_title       protoreflect.FieldDescriptor
	fd_MsgGovUpdateParams_description protoreflect.FieldDescriptor
	fd_MsgGovUpdateParams_plan        protoreflect.FieldDescriptor
)

func init() {
	file_cheqd_oracle_v2_tx_proto_init()
	md_MsgGovUpdateParams = File_cheqd_oracle_v2_tx_proto.Messages().ByName("MsgGovUpdateParams")
	fd_MsgGovUpdateParams_authority = md_MsgGovUpdateParams.Fields().ByName("authority")
	fd_MsgGovUpdateParams_title = md_MsgGovUpdateParams.Fields().ByName("title")
	fd_MsgGovUpdateParams_description = md_MsgGovUpdateParams.Fields().ByName("description")
	fd_MsgGovUpdateParams_plan = md_MsgGovUpdateParams.Fields().ByName("plan")
}

var _ protoreflect.Message = (*fastReflection_MsgGovUpdateParams)(nil)

type fastReflection_MsgGovUpdateParams MsgGovUpdateParams

func (x *MsgGovUpdateParams) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgGovUpdateParams)(x)
}

func (x *MsgGovUpdateParams) slowProtoReflect() protoreflect.Message {
	mi := &file_cheqd_oracle_v2_tx_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgGovUpdateParams_messageType fastReflection_MsgGovUpdateParams_messageType
var _ protoreflect.MessageType = fastReflection_MsgGovUpdateParams_messageType{}

type fastReflection_MsgGovUpdateParams_messageType struct{}

func (x fastReflection_MsgGovUpdateParams_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgGovUpdateParams)(nil)
}
func (x fastReflection_MsgGovUpdateParams_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgGovUpdateParams)
}
func (x fastReflection_MsgGovUpdateParams_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgGovUpdateParams
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgGovUpdateParams) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgGovUpdateParams
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgGovUpdateParams) Type() protoreflect.MessageType {
	return _fastReflection_MsgGovUpdateParams_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgGovUpdateParams) New() protoreflect.Message {
	return new(fastReflection_MsgGovUpdateParams)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgGovUpdateParams) Interface() protoreflect.ProtoMessage {
	return (*MsgGovUpdateParams)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgGovUpdateParams) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Authority != "" {
		value := protoreflect.ValueOfString(x.Authority)
		if !f(fd_MsgGovUpdateParams_authority, value) {
			return
		}
	}
	if x.Title != "" {
		value := protoreflect.ValueOfString(x.Title)
		if !f(fd_MsgGovUpdateParams_title, value) {
			return
		}
	}
	if x.Description != "" {
		value := protoreflect.ValueOfString(x.Description)
		if !f(fd_MsgGovUpdateParams_description, value) {
			return
		}
	}
	if x.Plan != nil {
		value := protoreflect.ValueOfMessage(x.Plan.ProtoReflect())
		if !f(fd_MsgGovUpdateParams_plan, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgGovUpdateParams) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "cheqd.oracle.v2.MsgGovUpdateParams.authority":
		return x.Authority != ""
	case "cheqd.oracle.v2.MsgGovUpdateParams.title":
		return x.Title != ""
	case "cheqd.oracle.v2.MsgGovUpdateParams.description":
		return x.Description != ""
	case "cheqd.oracle.v2.MsgGovUpdateParams.plan":
		return x.Plan != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovUpdateParams"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovUpdateParams does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgGovUpdateParams) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "cheqd.oracle.v2.MsgGovUpdateParams.authority":
		x.Authority = ""
	case "cheqd.oracle.v2.MsgGovUpdateParams.title":
		x.Title = ""
	case "cheqd.oracle.v2.MsgGovUpdateParams.description":
		x.Description = ""
	case "cheqd.oracle.v2.MsgGovUpdateParams.plan":
		x.Plan = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovUpdateParams"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovUpdateParams does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgGovUpdateParams) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "cheqd.oracle.v2.MsgGovUpdateParams.authority":
		value := x.Authority
		return protoreflect.ValueOfString(value)
	case "cheqd.oracle.v2.MsgGovUpdateParams.title":
		value := x.Title
		return protoreflect.ValueOfString(value)
	case "cheqd.oracle.v2.MsgGovUpdateParams.description":
		value := x.Description
		return protoreflect.ValueOfString(value)
	case "cheqd.oracle.v2.MsgGovUpdateParams.plan":
		value := x.Plan
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovUpdateParams"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovUpdateParams does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgGovUpdateParams) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "cheqd.oracle.v2.MsgGovUpdateParams.authority":
		x.Authority = value.Interface().(string)
	case "cheqd.oracle.v2.MsgGovUpdateParams.title":
		x.Title = value.Interface().(string)
	case "cheqd.oracle.v2.MsgGovUpdateParams.description":
		x.Description = value.Interface().(string)
	case "cheqd.oracle.v2.MsgGovUpdateParams.plan":
		x.Plan = value.Message().Interface().(*ParamUpdatePlan)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovUpdateParams"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovUpdateParams does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgGovUpdateParams) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cheqd.oracle.v2.MsgGovUpdateParams.plan":
		if x.Plan == nil {
			x.Plan = new(ParamUpdatePlan)
		}
		return protoreflect.ValueOfMessage(x.Plan.ProtoReflect())
	case "cheqd.oracle.v2.MsgGovUpdateParams.authority":
		panic(fmt.Errorf("field authority of message cheqd.oracle.v2.MsgGovUpdateParams is not mutable"))
	case "cheqd.oracle.v2.MsgGovUpdateParams.title":
		panic(fmt.Errorf("field title of message cheqd.oracle.v2.MsgGovUpdateParams is not mutable"))
	case "cheqd.oracle.v2.MsgGovUpdateParams.description":
		panic(fmt.Errorf("field description of message cheqd.oracle.v2.MsgGovUpdateParams is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovUpdateParams"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovUpdateParams does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgGovUpdateParams) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cheqd.oracle.v2.MsgGovUpdateParams.authority":
		return protoreflect.ValueOfString("")
	case "cheqd.oracle.v2.MsgGovUpdateParams.title":
		return protoreflect.ValueOfString("")
	case "cheqd.oracle.v2.MsgGovUpdateParams.description":
		return protoreflect.ValueOfString("")
	case "cheqd.oracle.v2.MsgGovUpdateParams.plan":
		m := new(ParamUpdatePlan)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovUpdateParams"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovUpdateParams does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgGovUpdateParams) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in cheqd.oracle.v2.MsgGovUpdateParams", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgGovUpdateParams) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgGovUpdateParams) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgGovUpdateParams) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgGovUpdateParams) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgGovUpdateParams)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Authority)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Title)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Description)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Plan != nil {
			l = options.Size(x.Plan)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgGovUpdateParams)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Plan != nil {
			encoded, err := options.Marshal(x.Plan)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Description) > 0 {
			i -= len(x.Description)
			copy(dAtA[i:], x.Description)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Description)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Title) > 0 {
			i -= len(x.Title)
			copy(dAtA[i:], x.Title)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Title)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Authority) > 0 {
			i -= len(x.Authority)
			copy(dAtA[i:], x.Authority)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Authority)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgGovUpdateParams)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgGovUpdateParams: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgGovUpdateParams: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Authority = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Title = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Description = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Plan", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Plan == nil {
					x.Plan = &ParamUpdatePlan{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Plan); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgGovUpdateParamsResponse protoreflect.MessageDescriptor
)

func init() {
	file_cheqd_oracle_v2_tx_proto_init()
	md_MsgGovUpdateParamsResponse = File_cheqd_oracle_v2_tx_proto.Messages().ByName("MsgGovUpdateParamsResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgGovUpdateParamsResponse)(nil)

type fastReflection_MsgGovUpdateParamsResponse MsgGovUpdateParamsResponse

func (x *MsgGovUpdateParamsResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgGovUpdateParamsResponse)(x)
}

func (x *MsgGovUpdateParamsResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_cheqd_oracle_v2_tx_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgGovUpdateParamsResponse_messageType fastReflection_MsgGovUpdateParamsResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgGovUpdateParamsResponse_messageType{}

type fastReflection_MsgGovUpdateParamsResponse_messageType struct{}

func (x fastReflection_MsgGovUpdateParamsResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgGovUpdateParamsResponse)(nil)
}
func (x fastReflection_MsgGovUpdateParamsResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgGovUpdateParamsResponse)
}
func (x fastReflection_MsgGovUpdateParamsResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgGovUpdateParamsResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgGovUpdateParamsResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgGovUpdateParamsResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgGovUpdateParamsResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgGovUpdateParamsResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgGovUpdateParamsResponse) New() protoreflect.Message {
	return new(fastReflection_MsgGovUpdateParamsResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgGovUpdateParamsResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgGovUpdateParamsResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgGovUpdateParamsResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgGovUpdateParamsResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovUpdateParamsResponse"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovUpdateParamsResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgGovUpdateParamsResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovUpdateParamsResponse"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovUpdateParamsResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgGovUpdateParamsResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovUpdateParamsResponse"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovUpdateParamsResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgGovUpdateParamsResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovUpdateParamsResponse"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovUpdateParamsResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgGovUpdateParamsResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovUpdateParamsResponse"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovUpdateParamsResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgGovUpdateParamsResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovUpdateParamsResponse"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovUpdateParamsResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgGovUpdateParamsResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in cheqd.oracle.v2.MsgGovUpdateParamsResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgGovUpdateParamsResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgGovUpdateParamsResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgGovUpdateParamsResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgGovUpdateParamsResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgGovUpdateParamsResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgGovUpdateParamsResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgGovUpdateParamsResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgGovUpdateParamsResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgGovUpdateParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgGovAddDenoms_5_list)(nil)

type _MsgGovAddDenoms_5_list struct {
	list *[]*Denom
}

func (x *_MsgGovAddDenoms_5_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgGovAddDenoms_5_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgGovAddDenoms_5_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Denom)
	(*x.list)[i] = concreteValue
}

func (x *_MsgGovAddDenoms_5_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*Denom)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgGovAddDenoms_5_list) AppendMutable() protoreflect.Value {
	v := new(Denom)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgGovAddDenoms_5_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgGovAddDenoms_5_list) NewElement() protoreflect.Value {
	v := new(Denom)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgGovAddDenoms_5_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgGovAddDenoms_8_list)(nil)

type _MsgGovAddDenoms_8_list struct {
	list *[]*CurrencyPairProviders
}

func (x *_MsgGovAddDenoms_8_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgGovAddDenoms_8_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgGovAddDenoms_8_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CurrencyPairProviders)
	(*x.list)[i] = concreteValue
}

func (x *_MsgGovAddDenoms_8_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CurrencyPairProviders)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgGovAddDenoms_8_list) AppendMutable() protoreflect.Value {
	v := new(CurrencyPairProviders)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgGovAddDenoms_8_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgGovAddDenoms_8_list) NewElement() protoreflect.Value {
	v := new(CurrencyPairProviders)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgGovAddDenoms_8_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_MsgGovAddDenoms_9_list)(nil)

type _MsgGovAddDenoms_9_list struct {
	list *[]*CurrencyDeviationThreshold
}

func (x *_MsgGovAddDenoms_9_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgGovAddDenoms_9_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgGovAddDenoms_9_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CurrencyDeviationThreshold)
	(*x.list)[i] = concreteValue
}

func (x *_MsgGovAddDenoms_9_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CurrencyDeviationThreshold)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgGovAddDenoms_9_list) AppendMutable() protoreflect.Value {
	v := new(CurrencyDeviationThreshold)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgGovAddDenoms_9_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgGovAddDenoms_9_list) NewElement() protoreflect.Value {
	v := new(CurrencyDeviationThreshold)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgGovAddDenoms_9_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgGovAddDenoms                               protoreflect.MessageDescriptor
	fd_MsgGovAddDenoms_authority                     protoreflect.FieldDescriptor
	fd_MsgGovAddDenoms_title                         protoreflect.FieldDescriptor
	fd_MsgGovAddDenoms_description                   protoreflect.FieldDescriptor
	fd_MsgGovAddDenoms_height                        protoreflect.FieldDescriptor
	fd_MsgGovAddDenoms_denom_list                    protoreflect.FieldDescriptor
	fd_MsgGovAddDenoms_mandatory                     protoreflect.FieldDescriptor
	fd_MsgGovAddDenoms_reward_band                   protoreflect.FieldDescriptor
	fd_MsgGovAddDenoms_currency_pair_providers       protoreflect.FieldDescriptor
	fd_MsgGovAddDenoms_currency_deviation_thresholds protoreflect.FieldDescriptor
)

func init() {
	file_cheqd_oracle_v2_tx_proto_init()
	md_MsgGovAddDenoms = File_cheqd_oracle_v2_tx_proto.Messages().ByName("MsgGovAddDenoms")
	fd_MsgGovAddDenoms_authority = md_MsgGovAddDenoms.Fields().ByName("authority")
	fd_MsgGovAddDenoms_title = md_MsgGovAddDenoms.Fields().ByName("title")
	fd_MsgGovAddDenoms_description = md_MsgGovAddDenoms.Fields().ByName("description")
	fd_MsgGovAddDenoms_height = md_MsgGovAddDenoms.Fields().ByName("height")
	fd_MsgGovAddDenoms_denom_list = md_MsgGovAddDenoms.Fields().ByName("denom_list")
	fd_MsgGovAddDenoms_mandatory = md_MsgGovAddDenoms.Fields().ByName("mandatory")
	fd_MsgGovAddDenoms_reward_band = md_MsgGovAddDenoms.Fields().ByName("reward_band")
	fd_MsgGovAddDenoms_currency_pair_providers = md_MsgGovAddDenoms.Fields().ByName("currency_pair_providers")
	fd_MsgGovAddDenoms_currency_deviation_thresholds = md_MsgGovAddDenoms.Fields().ByName("currency_deviation_thresholds")
}

var _ protoreflect.Message = (*fastReflection_MsgGovAddDenoms)(nil)

type fastReflection_MsgGovAddDenoms MsgGovAddDenoms

func (x *MsgGovAddDenoms) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgGovAddDenoms)(x)
}

func (x *MsgGovAddDenoms) slowProtoReflect() protoreflect.Message {
	mi := &file_cheqd_oracle_v2_tx_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgGovAddDenoms_messageType fastReflection_MsgGovAddDenoms_messageType
var _ protoreflect.MessageType = fastReflection_MsgGovAddDenoms_messageType{}

type fastReflection_MsgGovAddDenoms_messageType struct{}

func (x fastReflection_MsgGovAddDenoms_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgGovAddDenoms)(nil)
}
func (x fastReflection_MsgGovAddDenoms_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgGovAddDenoms)
}
func (x fastReflection_MsgGovAddDenoms_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgGovAddDenoms
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgGovAddDenoms) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgGovAddDenoms
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgGovAddDenoms) Type() protoreflect.MessageType {
	return _fastReflection_MsgGovAddDenoms_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgGovAddDenoms) New() protoreflect.Message {
	return new(fastReflection_MsgGovAddDenoms)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgGovAddDenoms) Interface() protoreflect.ProtoMessage {
	return (*MsgGovAddDenoms)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgGovAddDenoms) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Authority != "" {
		value := protoreflect.ValueOfString(x.Authority)
		if !f(fd_MsgGovAddDenoms_authority, value) {
			return
		}
	}
	if x.Title != "" {
		value := protoreflect.ValueOfString(x.Title)
		if !f(fd_MsgGovAddDenoms_title, value) {
			return
		}
	}
	if x.Description != "" {
		value := protoreflect.ValueOfString(x.Description)
		if !f(fd_MsgGovAddDenoms_description, value) {
			return
		}
	}
	if x.Height != int64(0) {
		value := protoreflect.ValueOfInt64(x.Height)
		if !f(fd_MsgGovAddDenoms_height, value) {
			return
		}
	}
	if len(x.DenomList) != 0 {
		value := protoreflect.ValueOfList(&_MsgGovAddDenoms_5_list{list: &x.DenomList})
		if !f(fd_MsgGovAddDenoms_denom_list, value) {
			return
		}
	}
	if x.Mandatory != false {
		value := protoreflect.ValueOfBool(x.Mandatory)
		if !f(fd_MsgGovAddDenoms_mandatory, value) {
			return
		}
	}
	if x.RewardBand != "" {
		value := protoreflect.ValueOfString(x.RewardBand)
		if !f(fd_MsgGovAddDenoms_reward_band, value) {
			return
		}
	}
	if len(x.CurrencyPairProviders) != 0 {
		value := protoreflect.ValueOfList(&_MsgGovAddDenoms_8_list{list: &x.CurrencyPairProviders})
		if !f(fd_MsgGovAddDenoms_currency_pair_providers, value) {
			return
		}
	}
	if len(x.CurrencyDeviationThresholds) != 0 {
		value := protoreflect.ValueOfList(&_MsgGovAddDenoms_9_list{list: &x.CurrencyDeviationThresholds})
		if !f(fd_MsgGovAddDenoms_currency_deviation_thresholds, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgGovAddDenoms) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "cheqd.oracle.v2.MsgGovAddDenoms.authority":
		return x.Authority != ""
	case "cheqd.oracle.v2.MsgGovAddDenoms.title":
		return x.Title != ""
	case "cheqd.oracle.v2.MsgGovAddDenoms.description":
		return x.Description != ""
	case "cheqd.oracle.v2.MsgGovAddDenoms.height":
		return x.Height != int64(0)
	case "cheqd.oracle.v2.MsgGovAddDenoms.denom_list":
		return len(x.DenomList) != 0
	case "cheqd.oracle.v2.MsgGovAddDenoms.mandatory":
		return x.Mandatory != false
	case "cheqd.oracle.v2.MsgGovAddDenoms.reward_band":
		return x.RewardBand != ""
	case "cheqd.oracle.v2.MsgGovAddDenoms.currency_pair_providers":
		return len(x.CurrencyPairProviders) != 0
	case "cheqd.oracle.v2.MsgGovAddDenoms.currency_deviation_thresholds":
		return len(x.CurrencyDeviationThresholds) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovAddDenoms"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovAddDenoms does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgGovAddDenoms) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "cheqd.oracle.v2.MsgGovAddDenoms.authority":
		x.Authority = ""
	case "cheqd.oracle.v2.MsgGovAddDenoms.title":
		x.Title = ""
	case "cheqd.oracle.v2.MsgGovAddDenoms.description":
		x.Description = ""
	case "cheqd.oracle.v2.MsgGovAddDenoms.height":
		x.Height = int64(0)
	case "cheqd.oracle.v2.MsgGovAddDenoms.denom_list":
		x.DenomList = nil
	case "cheqd.oracle.v2.MsgGovAddDenoms.mandatory":
		x.Mandatory = false
	case "cheqd.oracle.v2.MsgGovAddDenoms.reward_band":
		x.RewardBand = ""
	case "cheqd.oracle.v2.MsgGovAddDenoms.currency_pair_providers":
		x.CurrencyPairProviders = nil
	case "cheqd.oracle.v2.MsgGovAddDenoms.currency_deviation_thresholds":
		x.CurrencyDeviationThresholds = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovAddDenoms"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovAddDenoms does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgGovAddDenoms) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "cheqd.oracle.v2.MsgGovAddDenoms.authority":
		value := x.Authority
		return protoreflect.ValueOfString(value)
	case "cheqd.oracle.v2.MsgGovAddDenoms.title":
		value := x.Title
		return protoreflect.ValueOfString(value)
	case "cheqd.oracle.v2.MsgGovAddDenoms.description":
		value := x.Description
		return protoreflect.ValueOfString(value)
	case "cheqd.oracle.v2.MsgGovAddDenoms.height":
		value := x.Height
		return protoreflect.ValueOfInt64(value)
	case "cheqd.oracle.v2.MsgGovAddDenoms.denom_list":
		if len(x.DenomList) == 0 {
			return protoreflect.ValueOfList(&_MsgGovAddDenoms_5_list{})
		}
		listValue := &_MsgGovAddDenoms_5_list{list: &x.DenomList}
		return protoreflect.ValueOfList(listValue)
	case "cheqd.oracle.v2.MsgGovAddDenoms.mandatory":
		value := x.Mandatory
		return protoreflect.ValueOfBool(value)
	case "cheqd.oracle.v2.MsgGovAddDenoms.reward_band":
		value := x.RewardBand
		return protoreflect.ValueOfString(value)
	case "cheqd.oracle.v2.MsgGovAddDenoms.currency_pair_providers":
		if len(x.CurrencyPairProviders) == 0 {
			return protoreflect.ValueOfList(&_MsgGovAddDenoms_8_list{})
		}
		listValue := &_MsgGovAddDenoms_8_list{list: &x.CurrencyPairProviders}
		return protoreflect.ValueOfList(listValue)
	case "cheqd.oracle.v2.MsgGovAddDenoms.currency_deviation_thresholds":
		if len(x.CurrencyDeviationThresholds) == 0 {
			return protoreflect.ValueOfList(&_MsgGovAddDenoms_9_list{})
		}
		listValue := &_MsgGovAddDenoms_9_list{list: &x.CurrencyDeviationThresholds}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovAddDenoms"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovAddDenoms does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgGovAddDenoms) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "cheqd.oracle.v2.MsgGovAddDenoms.authority":
		x.Authority = value.Interface().(string)
	case "cheqd.oracle.v2.MsgGovAddDenoms.title":
		x.Title = value.Interface().(string)
	case "cheqd.oracle.v2.MsgGovAddDenoms.description":
		x.Description = value.Interface().(string)
	case "cheqd.oracle.v2.MsgGovAddDenoms.height":
		x.Height = value.Int()
	case "cheqd.oracle.v2.MsgGovAddDenoms.denom_list":
		lv := value.List()
		clv := lv.(*_MsgGovAddDenoms_5_list)
		x.DenomList = *clv.list
	case "cheqd.oracle.v2.MsgGovAddDenoms.mandatory":
		x.Mandatory = value.Bool()
	case "cheqd.oracle.v2.MsgGovAddDenoms.reward_band":
		x.RewardBand = value.Interface().(string)
	case "cheqd.oracle.v2.MsgGovAddDenoms.currency_pair_providers":
		lv := value.List()
		clv := lv.(*_MsgGovAddDenoms_8_list)
		x.CurrencyPairProviders = *clv.list
	case "cheqd.oracle.v2.MsgGovAddDenoms.currency_deviation_thresholds":
		lv := value.List()
		clv := lv.(*_MsgGovAddDenoms_9_list)
		x.CurrencyDeviationThresholds = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovAddDenoms"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovAddDenoms does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgGovAddDenoms) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cheqd.oracle.v2.MsgGovAddDenoms.denom_list":
		if x.DenomList == nil {
			x.DenomList = []*Denom{}
		}
		value := &_MsgGovAddDenoms_5_list{list: &x.DenomList}
		return protoreflect.ValueOfList(value)
	case "cheqd.oracle.v2.MsgGovAddDenoms.currency_pair_providers":
		if x.CurrencyPairProviders == nil {
			x.CurrencyPairProviders = []*CurrencyPairProviders{}
		}
		value := &_MsgGovAddDenoms_8_list{list: &x.CurrencyPairProviders}
		return protoreflect.ValueOfList(value)
	case "cheqd.oracle.v2.MsgGovAddDenoms.currency_deviation_thresholds":
		if x.CurrencyDeviationThresholds == nil {
			x.CurrencyDeviationThresholds = []*CurrencyDeviationThreshold{}
		}
		value := &_MsgGovAddDenoms_9_list{list: &x.CurrencyDeviationThresholds}
		return protoreflect.ValueOfList(value)
	case "cheqd.oracle.v2.MsgGovAddDenoms.authority":
		panic(fmt.Errorf("field authority of message cheqd.oracle.v2.MsgGovAddDenoms is not mutable"))
	case "cheqd.oracle.v2.MsgGovAddDenoms.title":
		panic(fmt.Errorf("field title of message cheqd.oracle.v2.MsgGovAddDenoms is not mutable"))
	case "cheqd.oracle.v2.MsgGovAddDenoms.description":
		panic(fmt.Errorf("field description of message cheqd.oracle.v2.MsgGovAddDenoms is not mutable"))
	case "cheqd.oracle.v2.MsgGovAddDenoms.height":
		panic(fmt.Errorf("field height of message cheqd.oracle.v2.MsgGovAddDenoms is not mutable"))
	case "cheqd.oracle.v2.MsgGovAddDenoms.mandatory":
		panic(fmt.Errorf("field mandatory of message cheqd.oracle.v2.MsgGovAddDenoms is not mutable"))
	case "cheqd.oracle.v2.MsgGovAddDenoms.reward_band":
		panic(fmt.Errorf("field reward_band of message cheqd.oracle.v2.MsgGovAddDenoms is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovAddDenoms"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovAddDenoms does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgGovAddDenoms) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cheqd.oracle.v2.MsgGovAddDenoms.authority":
		return protoreflect.ValueOfString("")
	case "cheqd.oracle.v2.MsgGovAddDenoms.title":
		return protoreflect.ValueOfString("")
	case "cheqd.oracle.v2.MsgGovAddDenoms.description":
		return protoreflect.ValueOfString("")
	case "cheqd.oracle.v2.MsgGovAddDenoms.height":
		return protoreflect.ValueOfInt64(int64(0))
	case "cheqd.oracle.v2.MsgGovAddDenoms.denom_list":
		list := []*Denom{}
		return protoreflect.ValueOfList(&_MsgGovAddDenoms_5_list{list: &list})
	case "cheqd.oracle.v2.MsgGovAddDenoms.mandatory":
		return protoreflect.ValueOfBool(false)
	case "cheqd.oracle.v2.MsgGovAddDenoms.reward_band":
		return protoreflect.ValueOfString("")
	case "cheqd.oracle.v2.MsgGovAddDenoms.currency_pair_providers":
		list := []*CurrencyPairProviders{}
		return protoreflect.ValueOfList(&_MsgGovAddDenoms_8_list{list: &list})
	case "cheqd.oracle.v2.MsgGovAddDenoms.currency_deviation_thresholds":
		list := []*CurrencyDeviationThreshold{}
		return protoreflect.ValueOfList(&_MsgGovAddDenoms_9_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovAddDenoms"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovAddDenoms does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgGovAddDenoms) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in cheqd.oracle.v2.MsgGovAddDenoms", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgGovAddDenoms) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgGovAddDenoms) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgGovAddDenoms) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgGovAddDenoms) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgGovAddDenoms)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Authority)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Title)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Description)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Height != 0 {
			n += 1 + runtime.Sov(uint64(x.Height))
		}
		if len(x.DenomList) > 0 {
			for _, e := range x.DenomList {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.Mandatory {
			n += 2
		}
		l = len(x.RewardBand)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.CurrencyPairProviders) > 0 {
			for _, e := range x.CurrencyPairProviders {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.CurrencyDeviationThresholds) > 0 {
			for _, e := range x.CurrencyDeviationThresholds {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgGovAddDenoms)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.CurrencyDeviationThresholds) > 0 {
			for iNdEx := len(x.CurrencyDeviationThresholds) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.CurrencyDeviationThresholds[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x4a
			}
		}
		if len(x.CurrencyPairProviders) > 0 {
			for iNdEx := len(x.CurrencyPairProviders) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.CurrencyPairProviders[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x42
			}
		}
		if len(x.RewardBand) > 0 {
			i -= len(x.RewardBand)
			copy(dAtA[i:], x.RewardBand)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.RewardBand)))
			i--
			dAtA[i] = 0x3a
		}
		if x.Mandatory {
			i--
			if x.Mandatory {
				dAtA[i] = 1
			} else {
				dAtA[i] = 0
			}
			i--
			dAtA[i] = 0x30
		}
		if len(x.DenomList) > 0 {
			for iNdEx := len(x.DenomList) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.DenomList[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x2a
			}
		}
		if x.Height != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Height))
			i--
			dAtA[i] = 0x20
		}
		if len(x.Description) > 0 {
			i -= len(x.Description)
			copy(dAtA[i:], x.Description)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Description)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Title) > 0 {
			i -= len(x.Title)
			copy(dAtA[i:], x.Title)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Title)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Authority) > 0 {
			i -= len(x.Authority)
			copy(dAtA[i:], x.Authority)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Authority)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgGovAddDenoms)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgGovAddDenoms: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgGovAddDenoms: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Authority = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Title = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Description = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
				}
				x.Height = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Height |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DenomList", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DenomList = append(x.DenomList, &Denom{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.DenomList[len(x.DenomList)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 6:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Mandatory", wireType)
				}
				var v int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				x.Mandatory = bool(v != 0)
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RewardBand", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.RewardBand = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CurrencyPairProviders", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CurrencyPairProviders = append(x.CurrencyPairProviders, &CurrencyPairProviders{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CurrencyPairProviders[len(x.CurrencyPairProviders)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 9:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CurrencyDeviationThresholds", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CurrencyDeviationThresholds = append(x.CurrencyDeviationThresholds, &CurrencyDeviationThreshold{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CurrencyDeviationThresholds[len(x.CurrencyDeviationThresholds)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgGovAddDenomsResponse protoreflect.MessageDescriptor
)

func init() {
	file_cheqd_oracle_v2_tx_proto_init()
	md_MsgGovAddDenomsResponse = File_cheqd_oracle_v2_tx_proto.Messages().ByName("MsgGovAddDenomsResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgGovAddDenomsResponse)(nil)

type fastReflection_MsgGovAddDenomsResponse MsgGovAddDenomsResponse

func (x *MsgGovAddDenomsResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgGovAddDenomsResponse)(x)
}

func (x *MsgGovAddDenomsResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_cheqd_oracle_v2_tx_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgGovAddDenomsResponse_messageType fastReflection_MsgGovAddDenomsResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgGovAddDenomsResponse_messageType{}

type fastReflection_MsgGovAddDenomsResponse_messageType struct{}

func (x fastReflection_MsgGovAddDenomsResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgGovAddDenomsResponse)(nil)
}
func (x fastReflection_MsgGovAddDenomsResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgGovAddDenomsResponse)
}
func (x fastReflection_MsgGovAddDenomsResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgGovAddDenomsResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgGovAddDenomsResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgGovAddDenomsResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgGovAddDenomsResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgGovAddDenomsResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgGovAddDenomsResponse) New() protoreflect.Message {
	return new(fastReflection_MsgGovAddDenomsResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgGovAddDenomsResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgGovAddDenomsResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgGovAddDenomsResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgGovAddDenomsResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovAddDenomsResponse"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovAddDenomsResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgGovAddDenomsResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovAddDenomsResponse"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovAddDenomsResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgGovAddDenomsResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovAddDenomsResponse"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovAddDenomsResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgGovAddDenomsResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovAddDenomsResponse"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovAddDenomsResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgGovAddDenomsResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovAddDenomsResponse"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovAddDenomsResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgGovAddDenomsResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovAddDenomsResponse"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovAddDenomsResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgGovAddDenomsResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in cheqd.oracle.v2.MsgGovAddDenomsResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgGovAddDenomsResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgGovAddDenomsResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgGovAddDenomsResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgGovAddDenomsResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgGovAddDenomsResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgGovAddDenomsResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgGovAddDenomsResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgGovAddDenomsResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgGovAddDenomsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgGovRemoveCurrencyPairProviders_5_list)(nil)

type _MsgGovRemoveCurrencyPairProviders_5_list struct {
	list *[]*CurrencyPairProviders
}

func (x *_MsgGovRemoveCurrencyPairProviders_5_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgGovRemoveCurrencyPairProviders_5_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MsgGovRemoveCurrencyPairProviders_5_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CurrencyPairProviders)
	(*x.list)[i] = concreteValue
}

func (x *_MsgGovRemoveCurrencyPairProviders_5_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*CurrencyPairProviders)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgGovRemoveCurrencyPairProviders_5_list) AppendMutable() protoreflect.Value {
	v := new(CurrencyPairProviders)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgGovRemoveCurrencyPairProviders_5_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MsgGovRemoveCurrencyPairProviders_5_list) NewElement() protoreflect.Value {
	v := new(CurrencyPairProviders)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MsgGovRemoveCurrencyPairProviders_5_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgGovRemoveCurrencyPairProviders                         protoreflect.MessageDescriptor
	fd_MsgGovRemoveCurrencyPairProviders_authority               protoreflect.FieldDescriptor
	fd_MsgGovRemoveCurrencyPairProviders_title                   protoreflect.FieldDescriptor
	fd_MsgGovRemoveCurrencyPairProviders_description             protoreflect.FieldDescriptor
	fd_MsgGovRemoveCurrencyPairProviders_height                  protoreflect.FieldDescriptor
	fd_MsgGovRemoveCurrencyPairProviders_currency_pair_providers protoreflect.FieldDescriptor
)

func init() {
	file_cheqd_oracle_v2_tx_proto_init()
	md_MsgGovRemoveCurrencyPairProviders = File_cheqd_oracle_v2_tx_proto.Messages().ByName("MsgGovRemoveCurrencyPairProviders")
	fd_MsgGovRemoveCurrencyPairProviders_authority = md_MsgGovRemoveCurrencyPairProviders.Fields().ByName("authority")
	fd_MsgGovRemoveCurrencyPairProviders_title = md_MsgGovRemoveCurrencyPairProviders.Fields().ByName("title")
	fd_MsgGovRemoveCurrencyPairProviders_description = md_MsgGovRemoveCurrencyPairProviders.Fields().ByName("description")
	fd_MsgGovRemoveCurrencyPairProviders_height = md_MsgGovRemoveCurrencyPairProviders.Fields().ByName("height")
	fd_MsgGovRemoveCurrencyPairProviders_currency_pair_providers = md_MsgGovRemoveCurrencyPairProviders.Fields().ByName("currency_pair_providers")
}

var _ protoreflect.Message = (*fastReflection_MsgGovRemoveCurrencyPairProviders)(nil)

type fastReflection_MsgGovRemoveCurrencyPairProviders MsgGovRemoveCurrencyPairProviders

func (x *MsgGovRemoveCurrencyPairProviders) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgGovRemoveCurrencyPairProviders)(x)
}

func (x *MsgGovRemoveCurrencyPairProviders) slowProtoReflect() protoreflect.Message {
	mi := &file_cheqd_oracle_v2_tx_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgGovRemoveCurrencyPairProviders_messageType fastReflection_MsgGovRemoveCurrencyPairProviders_messageType
var _ protoreflect.MessageType = fastReflection_MsgGovRemoveCurrencyPairProviders_messageType{}

type fastReflection_MsgGovRemoveCurrencyPairProviders_messageType struct{}

func (x fastReflection_MsgGovRemoveCurrencyPairProviders_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgGovRemoveCurrencyPairProviders)(nil)
}
func (x fastReflection_MsgGovRemoveCurrencyPairProviders_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgGovRemoveCurrencyPairProviders)
}
func (x fastReflection_MsgGovRemoveCurrencyPairProviders_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgGovRemoveCurrencyPairProviders
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgGovRemoveCurrencyPairProviders) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgGovRemoveCurrencyPairProviders
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgGovRemoveCurrencyPairProviders) Type() protoreflect.MessageType {
	return _fastReflection_MsgGovRemoveCurrencyPairProviders_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgGovRemoveCurrencyPairProviders) New() protoreflect.Message {
	return new(fastReflection_MsgGovRemoveCurrencyPairProviders)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgGovRemoveCurrencyPairProviders) Interface() protoreflect.ProtoMessage {
	return (*MsgGovRemoveCurrencyPairProviders)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgGovRemoveCurrencyPairProviders) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Authority != "" {
		value := protoreflect.ValueOfString(x.Authority)
		if !f(fd_MsgGovRemoveCurrencyPairProviders_authority, value) {
			return
		}
	}
	if x.Title != "" {
		value := protoreflect.ValueOfString(x.Title)
		if !f(fd_MsgGovRemoveCurrencyPairProviders_title, value) {
			return
		}
	}
	if x.Description != "" {
		value := protoreflect.ValueOfString(x.Description)
		if !f(fd_MsgGovRemoveCurrencyPairProviders_description, value) {
			return
		}
	}
	if x.Height != int64(0) {
		value := protoreflect.ValueOfInt64(x.Height)
		if !f(fd_MsgGovRemoveCurrencyPairProviders_height, value) {
			return
		}
	}
	if len(x.CurrencyPairProviders) != 0 {
		value := protoreflect.ValueOfList(&_MsgGovRemoveCurrencyPairProviders_5_list{list: &x.CurrencyPairProviders})
		if !f(fd_MsgGovRemoveCurrencyPairProviders_currency_pair_providers, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgGovRemoveCurrencyPairProviders) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyPairProviders.authority":
		return x.Authority != ""
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyPairProviders.title":
		return x.Title != ""
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyPairProviders.description":
		return x.Description != ""
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyPairProviders.height":
		return x.Height != int64(0)
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyPairProviders.currency_pair_providers":
		return len(x.CurrencyPairProviders) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovRemoveCurrencyPairProviders"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovRemoveCurrencyPairProviders does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgGovRemoveCurrencyPairProviders) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyPairProviders.authority":
		x.Authority = ""
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyPairProviders.title":
		x.Title = ""
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyPairProviders.description":
		x.Description = ""
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyPairProviders.height":
		x.Height = int64(0)
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyPairProviders.currency_pair_providers":
		x.CurrencyPairProviders = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovRemoveCurrencyPairProviders"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovRemoveCurrencyPairProviders does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgGovRemoveCurrencyPairProviders) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyPairProviders.authority":
		value := x.Authority
		return protoreflect.ValueOfString(value)
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyPairProviders.title":
		value := x.Title
		return protoreflect.ValueOfString(value)
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyPairProviders.description":
		value := x.Description
		return protoreflect.ValueOfString(value)
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyPairProviders.height":
		value := x.Height
		return protoreflect.ValueOfInt64(value)
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyPairProviders.currency_pair_providers":
		if len(x.CurrencyPairProviders) == 0 {
			return protoreflect.ValueOfList(&_MsgGovRemoveCurrencyPairProviders_5_list{})
		}
		listValue := &_MsgGovRemoveCurrencyPairProviders_5_list{list: &x.CurrencyPairProviders}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovRemoveCurrencyPairProviders"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovRemoveCurrencyPairProviders does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgGovRemoveCurrencyPairProviders) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyPairProviders.authority":
		x.Authority = value.Interface().(string)
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyPairProviders.title":
		x.Title = value.Interface().(string)
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyPairProviders.description":
		x.Description = value.Interface().(string)
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyPairProviders.height":
		x.Height = value.Int()
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyPairProviders.currency_pair_providers":
		lv := value.List()
		clv := lv.(*_MsgGovRemoveCurrencyPairProviders_5_list)
		x.CurrencyPairProviders = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovRemoveCurrencyPairProviders"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovRemoveCurrencyPairProviders does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgGovRemoveCurrencyPairProviders) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyPairProviders.currency_pair_providers":
		if x.CurrencyPairProviders == nil {
			x.CurrencyPairProviders = []*CurrencyPairProviders{}
		}
		value := &_MsgGovRemoveCurrencyPairProviders_5_list{list: &x.CurrencyPairProviders}
		return protoreflect.ValueOfList(value)
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyPairProviders.authority":
		panic(fmt.Errorf("field authority of message cheqd.oracle.v2.MsgGovRemoveCurrencyPairProviders is not mutable"))
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyPairProviders.title":
		panic(fmt.Errorf("field title of message cheqd.oracle.v2.MsgGovRemoveCurrencyPairProviders is not mutable"))
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyPairProviders.description":
		panic(fmt.Errorf("field description of message cheqd.oracle.v2.MsgGovRemoveCurrencyPairProviders is not mutable"))
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyPairProviders.height":
		panic(fmt.Errorf("field height of message cheqd.oracle.v2.MsgGovRemoveCurrencyPairProviders is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovRemoveCurrencyPairProviders"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovRemoveCurrencyPairProviders does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgGovRemoveCurrencyPairProviders) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyPairProviders.authority":
		return protoreflect.ValueOfString("")
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyPairProviders.title":
		return protoreflect.ValueOfString("")
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyPairProviders.description":
		return protoreflect.ValueOfString("")
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyPairProviders.height":
		return protoreflect.ValueOfInt64(int64(0))
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyPairProviders.currency_pair_providers":
		list := []*CurrencyPairProviders{}
		return protoreflect.ValueOfList(&_MsgGovRemoveCurrencyPairProviders_5_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovRemoveCurrencyPairProviders"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovRemoveCurrencyPairProviders does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgGovRemoveCurrencyPairProviders) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in cheqd.oracle.v2.MsgGovRemoveCurrencyPairProviders", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgGovRemoveCurrencyPairProviders) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgGovRemoveCurrencyPairProviders) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgGovRemoveCurrencyPairProviders) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgGovRemoveCurrencyPairProviders) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgGovRemoveCurrencyPairProviders)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Authority)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Title)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Description)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Height != 0 {
			n += 1 + runtime.Sov(uint64(x.Height))
		}
		if len(x.CurrencyPairProviders) > 0 {
			for _, e := range x.CurrencyPairProviders {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgGovRemoveCurrencyPairProviders)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.CurrencyPairProviders) > 0 {
			for iNdEx := len(x.CurrencyPairProviders) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.CurrencyPairProviders[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x2a
			}
		}
		if x.Height != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Height))
			i--
			dAtA[i] = 0x20
		}
		if len(x.Description) > 0 {
			i -= len(x.Description)
			copy(dAtA[i:], x.Description)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Description)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Title) > 0 {
			i -= len(x.Title)
			copy(dAtA[i:], x.Title)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Title)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Authority) > 0 {
			i -= len(x.Authority)
			copy(dAtA[i:], x.Authority)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Authority)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgGovRemoveCurrencyPairProviders)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgGovRemoveCurrencyPairProviders: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgGovRemoveCurrencyPairProviders: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Authority = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Title = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Description = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
				}
				x.Height = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Height |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CurrencyPairProviders", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CurrencyPairProviders = append(x.CurrencyPairProviders, &CurrencyPairProviders{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.CurrencyPairProviders[len(x.CurrencyPairProviders)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgGovRemoveCurrencyPairProvidersResponse protoreflect.MessageDescriptor
)

func init() {
	file_cheqd_oracle_v2_tx_proto_init()
	md_MsgGovRemoveCurrencyPairProvidersResponse = File_cheqd_oracle_v2_tx_proto.Messages().ByName("MsgGovRemoveCurrencyPairProvidersResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgGovRemoveCurrencyPairProvidersResponse)(nil)

type fastReflection_MsgGovRemoveCurrencyPairProvidersResponse MsgGovRemoveCurrencyPairProvidersResponse

func (x *MsgGovRemoveCurrencyPairProvidersResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgGovRemoveCurrencyPairProvidersResponse)(x)
}

func (x *MsgGovRemoveCurrencyPairProvidersResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_cheqd_oracle_v2_tx_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgGovRemoveCurrencyPairProvidersResponse_messageType fastReflection_MsgGovRemoveCurrencyPairProvidersResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgGovRemoveCurrencyPairProvidersResponse_messageType{}

type fastReflection_MsgGovRemoveCurrencyPairProvidersResponse_messageType struct{}

func (x fastReflection_MsgGovRemoveCurrencyPairProvidersResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgGovRemoveCurrencyPairProvidersResponse)(nil)
}
func (x fastReflection_MsgGovRemoveCurrencyPairProvidersResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgGovRemoveCurrencyPairProvidersResponse)
}
func (x fastReflection_MsgGovRemoveCurrencyPairProvidersResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgGovRemoveCurrencyPairProvidersResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgGovRemoveCurrencyPairProvidersResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgGovRemoveCurrencyPairProvidersResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgGovRemoveCurrencyPairProvidersResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgGovRemoveCurrencyPairProvidersResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgGovRemoveCurrencyPairProvidersResponse) New() protoreflect.Message {
	return new(fastReflection_MsgGovRemoveCurrencyPairProvidersResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgGovRemoveCurrencyPairProvidersResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgGovRemoveCurrencyPairProvidersResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgGovRemoveCurrencyPairProvidersResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgGovRemoveCurrencyPairProvidersResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovRemoveCurrencyPairProvidersResponse"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovRemoveCurrencyPairProvidersResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgGovRemoveCurrencyPairProvidersResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovRemoveCurrencyPairProvidersResponse"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovRemoveCurrencyPairProvidersResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgGovRemoveCurrencyPairProvidersResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovRemoveCurrencyPairProvidersResponse"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovRemoveCurrencyPairProvidersResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgGovRemoveCurrencyPairProvidersResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovRemoveCurrencyPairProvidersResponse"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovRemoveCurrencyPairProvidersResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgGovRemoveCurrencyPairProvidersResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovRemoveCurrencyPairProvidersResponse"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovRemoveCurrencyPairProvidersResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgGovRemoveCurrencyPairProvidersResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovRemoveCurrencyPairProvidersResponse"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovRemoveCurrencyPairProvidersResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgGovRemoveCurrencyPairProvidersResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in cheqd.oracle.v2.MsgGovRemoveCurrencyPairProvidersResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgGovRemoveCurrencyPairProvidersResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgGovRemoveCurrencyPairProvidersResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgGovRemoveCurrencyPairProvidersResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgGovRemoveCurrencyPairProvidersResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgGovRemoveCurrencyPairProvidersResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgGovRemoveCurrencyPairProvidersResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgGovRemoveCurrencyPairProvidersResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgGovRemoveCurrencyPairProvidersResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgGovRemoveCurrencyPairProvidersResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgGovRemoveCurrencyDeviationThresholds_5_list)(nil)

type _MsgGovRemoveCurrencyDeviationThresholds_5_list struct {
	list *[]string
}

func (x *_MsgGovRemoveCurrencyDeviationThresholds_5_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgGovRemoveCurrencyDeviationThresholds_5_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_MsgGovRemoveCurrencyDeviationThresholds_5_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_MsgGovRemoveCurrencyDeviationThresholds_5_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgGovRemoveCurrencyDeviationThresholds_5_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message MsgGovRemoveCurrencyDeviationThresholds at list field Currencies as it is not of Message kind"))
}

func (x *_MsgGovRemoveCurrencyDeviationThresholds_5_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_MsgGovRemoveCurrencyDeviationThresholds_5_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_MsgGovRemoveCurrencyDeviationThresholds_5_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgGovRemoveCurrencyDeviationThresholds             protoreflect.MessageDescriptor
	fd_MsgGovRemoveCurrencyDeviationThresholds_authority   protoreflect.FieldDescriptor
	fd_MsgGovRemoveCurrencyDeviationThresholds_title       protoreflect.FieldDescriptor
	fd_MsgGovRemoveCurrencyDeviationThresholds_description protoreflect.FieldDescriptor
	fd_MsgGovRemoveCurrencyDeviationThresholds_height      protoreflect.FieldDescriptor
	fd_MsgGovRemoveCurrencyDeviationThresholds_currencies  protoreflect.FieldDescriptor
)

func init() {
	file_cheqd_oracle_v2_tx_proto_init()
	md_MsgGovRemoveCurrencyDeviationThresholds = File_cheqd_oracle_v2_tx_proto.Messages().ByName("MsgGovRemoveCurrencyDeviationThresholds")
	fd_MsgGovRemoveCurrencyDeviationThresholds_authority = md_MsgGovRemoveCurrencyDeviationThresholds.Fields().ByName("authority")
	fd_MsgGovRemoveCurrencyDeviationThresholds_title = md_MsgGovRemoveCurrencyDeviationThresholds.Fields().ByName("title")
	fd_MsgGovRemoveCurrencyDeviationThresholds_description = md_MsgGovRemoveCurrencyDeviationThresholds.Fields().ByName("description")
	fd_MsgGovRemoveCurrencyDeviationThresholds_height = md_MsgGovRemoveCurrencyDeviationThresholds.Fields().ByName("height")
	fd_MsgGovRemoveCurrencyDeviationThresholds_currencies = md_MsgGovRemoveCurrencyDeviationThresholds.Fields().ByName("currencies")
}

var _ protoreflect.Message = (*fastReflection_MsgGovRemoveCurrencyDeviationThresholds)(nil)

type fastReflection_MsgGovRemoveCurrencyDeviationThresholds MsgGovRemoveCurrencyDeviationThresholds

func (x *MsgGovRemoveCurrencyDeviationThresholds) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgGovRemoveCurrencyDeviationThresholds)(x)
}

func (x *MsgGovRemoveCurrencyDeviationThresholds) slowProtoReflect() protoreflect.Message {
	mi := &file_cheqd_oracle_v2_tx_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgGovRemoveCurrencyDeviationThresholds_messageType fastReflection_MsgGovRemoveCurrencyDeviationThresholds_messageType
var _ protoreflect.MessageType = fastReflection_MsgGovRemoveCurrencyDeviationThresholds_messageType{}

type fastReflection_MsgGovRemoveCurrencyDeviationThresholds_messageType struct{}

func (x fastReflection_MsgGovRemoveCurrencyDeviationThresholds_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgGovRemoveCurrencyDeviationThresholds)(nil)
}
func (x fastReflection_MsgGovRemoveCurrencyDeviationThresholds_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgGovRemoveCurrencyDeviationThresholds)
}
func (x fastReflection_MsgGovRemoveCurrencyDeviationThresholds_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgGovRemoveCurrencyDeviationThresholds
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgGovRemoveCurrencyDeviationThresholds) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgGovRemoveCurrencyDeviationThresholds
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgGovRemoveCurrencyDeviationThresholds) Type() protoreflect.MessageType {
	return _fastReflection_MsgGovRemoveCurrencyDeviationThresholds_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgGovRemoveCurrencyDeviationThresholds) New() protoreflect.Message {
	return new(fastReflection_MsgGovRemoveCurrencyDeviationThresholds)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgGovRemoveCurrencyDeviationThresholds) Interface() protoreflect.ProtoMessage {
	return (*MsgGovRemoveCurrencyDeviationThresholds)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgGovRemoveCurrencyDeviationThresholds) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Authority != "" {
		value := protoreflect.ValueOfString(x.Authority)
		if !f(fd_MsgGovRemoveCurrencyDeviationThresholds_authority, value) {
			return
		}
	}
	if x.Title != "" {
		value := protoreflect.ValueOfString(x.Title)
		if !f(fd_MsgGovRemoveCurrencyDeviationThresholds_title, value) {
			return
		}
	}
	if x.Description != "" {
		value := protoreflect.ValueOfString(x.Description)
		if !f(fd_MsgGovRemoveCurrencyDeviationThresholds_description, value) {
			return
		}
	}
	if x.Height != int64(0) {
		value := protoreflect.ValueOfInt64(x.Height)
		if !f(fd_MsgGovRemoveCurrencyDeviationThresholds_height, value) {
			return
		}
	}
	if len(x.Currencies) != 0 {
		value := protoreflect.ValueOfList(&_MsgGovRemoveCurrencyDeviationThresholds_5_list{list: &x.Currencies})
		if !f(fd_MsgGovRemoveCurrencyDeviationThresholds_currencies, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgGovRemoveCurrencyDeviationThresholds) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholds.authority":
		return x.Authority != ""
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholds.title":
		return x.Title != ""
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholds.description":
		return x.Description != ""
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholds.height":
		return x.Height != int64(0)
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholds.currencies":
		return len(x.Currencies) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholds"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholds does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgGovRemoveCurrencyDeviationThresholds) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholds.authority":
		x.Authority = ""
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholds.title":
		x.Title = ""
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholds.description":
		x.Description = ""
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholds.height":
		x.Height = int64(0)
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholds.currencies":
		x.Currencies = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholds"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholds does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgGovRemoveCurrencyDeviationThresholds) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholds.authority":
		value := x.Authority
		return protoreflect.ValueOfString(value)
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholds.title":
		value := x.Title
		return protoreflect.ValueOfString(value)
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholds.description":
		value := x.Description
		return protoreflect.ValueOfString(value)
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholds.height":
		value := x.Height
		return protoreflect.ValueOfInt64(value)
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholds.currencies":
		if len(x.Currencies) == 0 {
			return protoreflect.ValueOfList(&_MsgGovRemoveCurrencyDeviationThresholds_5_list{})
		}
		listValue := &_MsgGovRemoveCurrencyDeviationThresholds_5_list{list: &x.Currencies}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholds"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholds does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgGovRemoveCurrencyDeviationThresholds) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholds.authority":
		x.Authority = value.Interface().(string)
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholds.title":
		x.Title = value.Interface().(string)
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholds.description":
		x.Description = value.Interface().(string)
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholds.height":
		x.Height = value.Int()
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholds.currencies":
		lv := value.List()
		clv := lv.(*_MsgGovRemoveCurrencyDeviationThresholds_5_list)
		x.Currencies = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholds"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholds does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgGovRemoveCurrencyDeviationThresholds) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholds.currencies":
		if x.Currencies == nil {
			x.Currencies = []string{}
		}
		value := &_MsgGovRemoveCurrencyDeviationThresholds_5_list{list: &x.Currencies}
		return protoreflect.ValueOfList(value)
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholds.authority":
		panic(fmt.Errorf("field authority of message cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholds is not mutable"))
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholds.title":
		panic(fmt.Errorf("field title of message cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholds is not mutable"))
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholds.description":
		panic(fmt.Errorf("field description of message cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholds is not mutable"))
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholds.height":
		panic(fmt.Errorf("field height of message cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholds is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholds"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholds does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgGovRemoveCurrencyDeviationThresholds) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholds.authority":
		return protoreflect.ValueOfString("")
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholds.title":
		return protoreflect.ValueOfString("")
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholds.description":
		return protoreflect.ValueOfString("")
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholds.height":
		return protoreflect.ValueOfInt64(int64(0))
	case "cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholds.currencies":
		list := []string{}
		return protoreflect.ValueOfList(&_MsgGovRemoveCurrencyDeviationThresholds_5_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholds"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholds does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgGovRemoveCurrencyDeviationThresholds) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholds", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgGovRemoveCurrencyDeviationThresholds) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgGovRemoveCurrencyDeviationThresholds) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgGovRemoveCurrencyDeviationThresholds) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgGovRemoveCurrencyDeviationThresholds) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgGovRemoveCurrencyDeviationThresholds)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Authority)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Title)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Description)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Height != 0 {
			n += 1 + runtime.Sov(uint64(x.Height))
		}
		if len(x.Currencies) > 0 {
			for _, s := range x.Currencies {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgGovRemoveCurrencyDeviationThresholds)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Currencies) > 0 {
			for iNdEx := len(x.Currencies) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.Currencies[iNdEx])
				copy(dAtA[i:], x.Currencies[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Currencies[iNdEx])))
				i--
				dAtA[i] = 0x2a
			}
		}
		if x.Height != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Height))
			i--
			dAtA[i] = 0x20
		}
		if len(x.Description) > 0 {
			i -= len(x.Description)
			copy(dAtA[i:], x.Description)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Description)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Title) > 0 {
			i -= len(x.Title)
			copy(dAtA[i:], x.Title)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Title)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Authority) > 0 {
			i -= len(x.Authority)
			copy(dAtA[i:], x.Authority)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Authority)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgGovRemoveCurrencyDeviationThresholds)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgGovRemoveCurrencyDeviationThresholds: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgGovRemoveCurrencyDeviationThresholds: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Authority = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Title = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Description = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
				}
				x.Height = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Height |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Currencies", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Currencies = append(x.Currencies, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgGovRemoveCurrencyDeviationThresholdsResponse protoreflect.MessageDescriptor
)

func init() {
	file_cheqd_oracle_v2_tx_proto_init()
	md_MsgGovRemoveCurrencyDeviationThresholdsResponse = File_cheqd_oracle_v2_tx_proto.Messages().ByName("MsgGovRemoveCurrencyDeviationThresholdsResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgGovRemoveCurrencyDeviationThresholdsResponse)(nil)

type fastReflection_MsgGovRemoveCurrencyDeviationThresholdsResponse MsgGovRemoveCurrencyDeviationThresholdsResponse

func (x *MsgGovRemoveCurrencyDeviationThresholdsResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgGovRemoveCurrencyDeviationThresholdsResponse)(x)
}

func (x *MsgGovRemoveCurrencyDeviationThresholdsResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_cheqd_oracle_v2_tx_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgGovRemoveCurrencyDeviationThresholdsResponse_messageType fastReflection_MsgGovRemoveCurrencyDeviationThresholdsResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgGovRemoveCurrencyDeviationThresholdsResponse_messageType{}

type fastReflection_MsgGovRemoveCurrencyDeviationThresholdsResponse_messageType struct{}

func (x fastReflection_MsgGovRemoveCurrencyDeviationThresholdsResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgGovRemoveCurrencyDeviationThresholdsResponse)(nil)
}
func (x fastReflection_MsgGovRemoveCurrencyDeviationThresholdsResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgGovRemoveCurrencyDeviationThresholdsResponse)
}
func (x fastReflection_MsgGovRemoveCurrencyDeviationThresholdsResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgGovRemoveCurrencyDeviationThresholdsResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgGovRemoveCurrencyDeviationThresholdsResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgGovRemoveCurrencyDeviationThresholdsResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgGovRemoveCurrencyDeviationThresholdsResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgGovRemoveCurrencyDeviationThresholdsResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgGovRemoveCurrencyDeviationThresholdsResponse) New() protoreflect.Message {
	return new(fastReflection_MsgGovRemoveCurrencyDeviationThresholdsResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgGovRemoveCurrencyDeviationThresholdsResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgGovRemoveCurrencyDeviationThresholdsResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgGovRemoveCurrencyDeviationThresholdsResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgGovRemoveCurrencyDeviationThresholdsResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholdsResponse"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholdsResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgGovRemoveCurrencyDeviationThresholdsResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholdsResponse"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholdsResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgGovRemoveCurrencyDeviationThresholdsResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholdsResponse"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholdsResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgGovRemoveCurrencyDeviationThresholdsResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholdsResponse"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholdsResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgGovRemoveCurrencyDeviationThresholdsResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholdsResponse"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholdsResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgGovRemoveCurrencyDeviationThresholdsResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholdsResponse"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholdsResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgGovRemoveCurrencyDeviationThresholdsResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholdsResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgGovRemoveCurrencyDeviationThresholdsResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgGovRemoveCurrencyDeviationThresholdsResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgGovRemoveCurrencyDeviationThresholdsResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgGovRemoveCurrencyDeviationThresholdsResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgGovRemoveCurrencyDeviationThresholdsResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgGovRemoveCurrencyDeviationThresholdsResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgGovRemoveCurrencyDeviationThresholdsResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgGovRemoveCurrencyDeviationThresholdsResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgGovRemoveCurrencyDeviationThresholdsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgGovCancelUpdateParamPlan             protoreflect.MessageDescriptor
	fd_MsgGovCancelUpdateParamPlan_authority   protoreflect.FieldDescriptor
	fd_MsgGovCancelUpdateParamPlan_title       protoreflect.FieldDescriptor
	fd_MsgGovCancelUpdateParamPlan_description protoreflect.FieldDescriptor
	fd_MsgGovCancelUpdateParamPlan_height      protoreflect.FieldDescriptor
)

func init() {
	file_cheqd_oracle_v2_tx_proto_init()
	md_MsgGovCancelUpdateParamPlan = File_cheqd_oracle_v2_tx_proto.Messages().ByName("MsgGovCancelUpdateParamPlan")
	fd_MsgGovCancelUpdateParamPlan_authority = md_MsgGovCancelUpdateParamPlan.Fields().ByName("authority")
	fd_MsgGovCancelUpdateParamPlan_title = md_MsgGovCancelUpdateParamPlan.Fields().ByName("title")
	fd_MsgGovCancelUpdateParamPlan_description = md_MsgGovCancelUpdateParamPlan.Fields().ByName("description")
	fd_MsgGovCancelUpdateParamPlan_height = md_MsgGovCancelUpdateParamPlan.Fields().ByName("height")
}

var _ protoreflect.Message = (*fastReflection_MsgGovCancelUpdateParamPlan)(nil)

type fastReflection_MsgGovCancelUpdateParamPlan MsgGovCancelUpdateParamPlan

func (x *MsgGovCancelUpdateParamPlan) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgGovCancelUpdateParamPlan)(x)
}

func (x *MsgGovCancelUpdateParamPlan) slowProtoReflect() protoreflect.Message {
	mi := &file_cheqd_oracle_v2_tx_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgGovCancelUpdateParamPlan_messageType fastReflection_MsgGovCancelUpdateParamPlan_messageType
var _ protoreflect.MessageType = fastReflection_MsgGovCancelUpdateParamPlan_messageType{}

type fastReflection_MsgGovCancelUpdateParamPlan_messageType struct{}

func (x fastReflection_MsgGovCancelUpdateParamPlan_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgGovCancelUpdateParamPlan)(nil)
}
func (x fastReflection_MsgGovCancelUpdateParamPlan_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgGovCancelUpdateParamPlan)
}
func (x fastReflection_MsgGovCancelUpdateParamPlan_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgGovCancelUpdateParamPlan
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgGovCancelUpdateParamPlan) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgGovCancelUpdateParamPlan
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgGovCancelUpdateParamPlan) Type() protoreflect.MessageType {
	return _fastReflection_MsgGovCancelUpdateParamPlan_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgGovCancelUpdateParamPlan) New() protoreflect.Message {
	return new(fastReflection_MsgGovCancelUpdateParamPlan)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgGovCancelUpdateParamPlan) Interface() protoreflect.ProtoMessage {
	return (*MsgGovCancelUpdateParamPlan)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgGovCancelUpdateParamPlan) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Authority != "" {
		value := protoreflect.ValueOfString(x.Authority)
		if !f(fd_MsgGovCancelUpdateParamPlan_authority, value) {
			return
		}
	}
	if x.Title != "" {
		value := protoreflect.ValueOfString(x.Title)
		if !f(fd_MsgGovCancelUpdateParamPlan_title, value) {
			return
		}
	}
	if x.Description != "" {
		value := protoreflect.ValueOfString(x.Description)
		if !f(fd_MsgGovCancelUpdateParamPlan_description, value) {
			return
		}
	}
	if x.Height != int64(0) {
		value := protoreflect.ValueOfInt64(x.Height)
		if !f(fd_MsgGovCancelUpdateParamPlan_height, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgGovCancelUpdateParamPlan) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "cheqd.oracle.v2.MsgGovCancelUpdateParamPlan.authority":
		return x.Authority != ""
	case "cheqd.oracle.v2.MsgGovCancelUpdateParamPlan.title":
		return x.Title != ""
	case "cheqd.oracle.v2.MsgGovCancelUpdateParamPlan.description":
		return x.Description != ""
	case "cheqd.oracle.v2.MsgGovCancelUpdateParamPlan.height":
		return x.Height != int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovCancelUpdateParamPlan"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovCancelUpdateParamPlan does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgGovCancelUpdateParamPlan) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "cheqd.oracle.v2.MsgGovCancelUpdateParamPlan.authority":
		x.Authority = ""
	case "cheqd.oracle.v2.MsgGovCancelUpdateParamPlan.title":
		x.Title = ""
	case "cheqd.oracle.v2.MsgGovCancelUpdateParamPlan.description":
		x.Description = ""
	case "cheqd.oracle.v2.MsgGovCancelUpdateParamPlan.height":
		x.Height = int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovCancelUpdateParamPlan"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovCancelUpdateParamPlan does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgGovCancelUpdateParamPlan) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "cheqd.oracle.v2.MsgGovCancelUpdateParamPlan.authority":
		value := x.Authority
		return protoreflect.ValueOfString(value)
	case "cheqd.oracle.v2.MsgGovCancelUpdateParamPlan.title":
		value := x.Title
		return protoreflect.ValueOfString(value)
	case "cheqd.oracle.v2.MsgGovCancelUpdateParamPlan.description":
		value := x.Description
		return protoreflect.ValueOfString(value)
	case "cheqd.oracle.v2.MsgGovCancelUpdateParamPlan.height":
		value := x.Height
		return protoreflect.ValueOfInt64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovCancelUpdateParamPlan"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovCancelUpdateParamPlan does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgGovCancelUpdateParamPlan) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "cheqd.oracle.v2.MsgGovCancelUpdateParamPlan.authority":
		x.Authority = value.Interface().(string)
	case "cheqd.oracle.v2.MsgGovCancelUpdateParamPlan.title":
		x.Title = value.Interface().(string)
	case "cheqd.oracle.v2.MsgGovCancelUpdateParamPlan.description":
		x.Description = value.Interface().(string)
	case "cheqd.oracle.v2.MsgGovCancelUpdateParamPlan.height":
		x.Height = value.Int()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovCancelUpdateParamPlan"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovCancelUpdateParamPlan does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgGovCancelUpdateParamPlan) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cheqd.oracle.v2.MsgGovCancelUpdateParamPlan.authority":
		panic(fmt.Errorf("field authority of message cheqd.oracle.v2.MsgGovCancelUpdateParamPlan is not mutable"))
	case "cheqd.oracle.v2.MsgGovCancelUpdateParamPlan.title":
		panic(fmt.Errorf("field title of message cheqd.oracle.v2.MsgGovCancelUpdateParamPlan is not mutable"))
	case "cheqd.oracle.v2.MsgGovCancelUpdateParamPlan.description":
		panic(fmt.Errorf("field description of message cheqd.oracle.v2.MsgGovCancelUpdateParamPlan is not mutable"))
	case "cheqd.oracle.v2.MsgGovCancelUpdateParamPlan.height":
		panic(fmt.Errorf("field height of message cheqd.oracle.v2.MsgGovCancelUpdateParamPlan is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovCancelUpdateParamPlan"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovCancelUpdateParamPlan does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgGovCancelUpdateParamPlan) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "cheqd.oracle.v2.MsgGovCancelUpdateParamPlan.authority":
		return protoreflect.ValueOfString("")
	case "cheqd.oracle.v2.MsgGovCancelUpdateParamPlan.title":
		return protoreflect.ValueOfString("")
	case "cheqd.oracle.v2.MsgGovCancelUpdateParamPlan.description":
		return protoreflect.ValueOfString("")
	case "cheqd.oracle.v2.MsgGovCancelUpdateParamPlan.height":
		return protoreflect.ValueOfInt64(int64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovCancelUpdateParamPlan"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovCancelUpdateParamPlan does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgGovCancelUpdateParamPlan) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in cheqd.oracle.v2.MsgGovCancelUpdateParamPlan", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgGovCancelUpdateParamPlan) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgGovCancelUpdateParamPlan) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgGovCancelUpdateParamPlan) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgGovCancelUpdateParamPlan) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgGovCancelUpdateParamPlan)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Authority)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Title)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Description)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Height != 0 {
			n += 1 + runtime.Sov(uint64(x.Height))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgGovCancelUpdateParamPlan)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Height != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Height))
			i--
			dAtA[i] = 0x20
		}
		if len(x.Description) > 0 {
			i -= len(x.Description)
			copy(dAtA[i:], x.Description)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Description)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Title) > 0 {
			i -= len(x.Title)
			copy(dAtA[i:], x.Title)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Title)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Authority) > 0 {
			i -= len(x.Authority)
			copy(dAtA[i:], x.Authority)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Authority)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgGovCancelUpdateParamPlan)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgGovCancelUpdateParamPlan: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgGovCancelUpdateParamPlan: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Authority = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Title = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Description = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
				}
				x.Height = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Height |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgGovCancelUpdateParamPlanResponse protoreflect.MessageDescriptor
)

func init() {
	file_cheqd_oracle_v2_tx_proto_init()
	md_MsgGovCancelUpdateParamPlanResponse = File_cheqd_oracle_v2_tx_proto.Messages().ByName("MsgGovCancelUpdateParamPlanResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgGovCancelUpdateParamPlanResponse)(nil)

type fastReflection_MsgGovCancelUpdateParamPlanResponse MsgGovCancelUpdateParamPlanResponse

func (x *MsgGovCancelUpdateParamPlanResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgGovCancelUpdateParamPlanResponse)(x)
}

func (x *MsgGovCancelUpdateParamPlanResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_cheqd_oracle_v2_tx_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgGovCancelUpdateParamPlanResponse_messageType fastReflection_MsgGovCancelUpdateParamPlanResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgGovCancelUpdateParamPlanResponse_messageType{}

type fastReflection_MsgGovCancelUpdateParamPlanResponse_messageType struct{}

func (x fastReflection_MsgGovCancelUpdateParamPlanResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgGovCancelUpdateParamPlanResponse)(nil)
}
func (x fastReflection_MsgGovCancelUpdateParamPlanResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgGovCancelUpdateParamPlanResponse)
}
func (x fastReflection_MsgGovCancelUpdateParamPlanResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgGovCancelUpdateParamPlanResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgGovCancelUpdateParamPlanResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgGovCancelUpdateParamPlanResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgGovCancelUpdateParamPlanResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgGovCancelUpdateParamPlanResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgGovCancelUpdateParamPlanResponse) New() protoreflect.Message {
	return new(fastReflection_MsgGovCancelUpdateParamPlanResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgGovCancelUpdateParamPlanResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgGovCancelUpdateParamPlanResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgGovCancelUpdateParamPlanResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgGovCancelUpdateParamPlanResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovCancelUpdateParamPlanResponse"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovCancelUpdateParamPlanResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgGovCancelUpdateParamPlanResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovCancelUpdateParamPlanResponse"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovCancelUpdateParamPlanResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgGovCancelUpdateParamPlanResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovCancelUpdateParamPlanResponse"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovCancelUpdateParamPlanResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgGovCancelUpdateParamPlanResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovCancelUpdateParamPlanResponse"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovCancelUpdateParamPlanResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgGovCancelUpdateParamPlanResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovCancelUpdateParamPlanResponse"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovCancelUpdateParamPlanResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgGovCancelUpdateParamPlanResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: cheqd.oracle.v2.MsgGovCancelUpdateParamPlanResponse"))
		}
		panic(fmt.Errorf("message cheqd.oracle.v2.MsgGovCancelUpdateParamPlanResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgGovCancelUpdateParamPlanResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in cheqd.oracle.v2.MsgGovCancelUpdateParamPlanResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgGovCancelUpdateParamPlanResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgGovCancelUpdateParamPlanResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgGovCancelUpdateParamPlanResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgGovCancelUpdateParamPlanResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgGovCancelUpdateParamPlanResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgGovCancelUpdateParamPlanResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgGovCancelUpdateParamPlanResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgGovCancelUpdateParamPlanResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgGovCancelUpdateParamPlanResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: cheqd/oracle/v2/tx.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MsgAggregateExchangeRatePrevote represents a message to submit an aggregate
// exchange rate prevote.
type MsgAggregateExchangeRatePrevote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	// Feeder is the author and the signer of the message.
	Feeder    string `protobuf:"bytes,2,opt,name=feeder,proto3" json:"feeder,omitempty"`
	Validator string `protobuf:"bytes,3,opt,name=validator,proto3" json:"validator,omitempty"`
}

func (x *MsgAggregateExchangeRatePrevote) Reset() {
	*x = MsgAggregateExchangeRatePrevote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cheqd_oracle_v2_tx_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAggregateExchangeRatePrevote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAggregateExchangeRatePrevote) ProtoMessage() {}

// Deprecated: Use MsgAggregateExchangeRatePrevote.ProtoReflect.Descriptor instead.
func (*MsgAggregateExchangeRatePrevote) Descriptor() ([]byte, []int) {
	return file_cheqd_oracle_v2_tx_proto_rawDescGZIP(), []int{0}
}

func (x *MsgAggregateExchangeRatePrevote) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *MsgAggregateExchangeRatePrevote) GetFeeder() string {
	if x != nil {
		return x.Feeder
	}
	return ""
}

func (x *MsgAggregateExchangeRatePrevote) GetValidator() string {
	if x != nil {
		return x.Validator
	}
	return ""
}

// MsgAggregateExchangeRatePrevoteResponse defines the
// Msg/AggregateExchangeRatePrevote response type.
type MsgAggregateExchangeRatePrevoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgAggregateExchangeRatePrevoteResponse) Reset() {
	*x = MsgAggregateExchangeRatePrevoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cheqd_oracle_v2_tx_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAggregateExchangeRatePrevoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAggregateExchangeRatePrevoteResponse) ProtoMessage() {}

// Deprecated: Use MsgAggregateExchangeRatePrevoteResponse.ProtoReflect.Descriptor instead.
func (*MsgAggregateExchangeRatePrevoteResponse) Descriptor() ([]byte, []int) {
	return file_cheqd_oracle_v2_tx_proto_rawDescGZIP(), []int{1}
}

// MsgAggregateExchangeRateVote represents a message to submit anaggregate
// exchange rate vote.
type MsgAggregateExchangeRateVote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Salt          string `protobuf:"bytes,1,opt,name=salt,proto3" json:"salt,omitempty"`
	ExchangeRates string `protobuf:"bytes,2,opt,name=exchange_rates,json=exchangeRates,proto3" json:"exchange_rates,omitempty"`
	// Feeder is the author and the signer of the message.
	Feeder    string `protobuf:"bytes,3,opt,name=feeder,proto3" json:"feeder,omitempty"`
	Validator string `protobuf:"bytes,4,opt,name=validator,proto3" json:"validator,omitempty"`
}

func (x *MsgAggregateExchangeRateVote) Reset() {
	*x = MsgAggregateExchangeRateVote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cheqd_oracle_v2_tx_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAggregateExchangeRateVote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAggregateExchangeRateVote) ProtoMessage() {}

// Deprecated: Use MsgAggregateExchangeRateVote.ProtoReflect.Descriptor instead.
func (*MsgAggregateExchangeRateVote) Descriptor() ([]byte, []int) {
	return file_cheqd_oracle_v2_tx_proto_rawDescGZIP(), []int{2}
}

func (x *MsgAggregateExchangeRateVote) GetSalt() string {
	if x != nil {
		return x.Salt
	}
	return ""
}

func (x *MsgAggregateExchangeRateVote) GetExchangeRates() string {
	if x != nil {
		return x.ExchangeRates
	}
	return ""
}

func (x *MsgAggregateExchangeRateVote) GetFeeder() string {
	if x != nil {
		return x.Feeder
	}
	return ""
}

func (x *MsgAggregateExchangeRateVote) GetValidator() string {
	if x != nil {
		return x.Validator
	}
	return ""
}

// MsgAggregateExchangeRateVoteResponse defines the
// Msg/AggregateExchangeRateVote response type.
type MsgAggregateExchangeRateVoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgAggregateExchangeRateVoteResponse) Reset() {
	*x = MsgAggregateExchangeRateVoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cheqd_oracle_v2_tx_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAggregateExchangeRateVoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAggregateExchangeRateVoteResponse) ProtoMessage() {}

// Deprecated: Use MsgAggregateExchangeRateVoteResponse.ProtoReflect.Descriptor instead.
func (*MsgAggregateExchangeRateVoteResponse) Descriptor() ([]byte, []int) {
	return file_cheqd_oracle_v2_tx_proto_rawDescGZIP(), []int{3}
}

// MsgDelegateFeedConsent represents a message to delegate oracle voting rights
// to another address.
type MsgDelegateFeedConsent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Operator is the author and the signer of the message.
	Operator string `protobuf:"bytes,1,opt,name=operator,proto3" json:"operator,omitempty"`
	Delegate string `protobuf:"bytes,2,opt,name=delegate,proto3" json:"delegate,omitempty"`
}

func (x *MsgDelegateFeedConsent) Reset() {
	*x = MsgDelegateFeedConsent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cheqd_oracle_v2_tx_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDelegateFeedConsent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDelegateFeedConsent) ProtoMessage() {}

// Deprecated: Use MsgDelegateFeedConsent.ProtoReflect.Descriptor instead.
func (*MsgDelegateFeedConsent) Descriptor() ([]byte, []int) {
	return file_cheqd_oracle_v2_tx_proto_rawDescGZIP(), []int{4}
}

func (x *MsgDelegateFeedConsent) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *MsgDelegateFeedConsent) GetDelegate() string {
	if x != nil {
		return x.Delegate
	}
	return ""
}

// MsgDelegateFeedConsentResponse defines the Msg/DelegateFeedConsent response
// type.
type MsgDelegateFeedConsentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgDelegateFeedConsentResponse) Reset() {
	*x = MsgDelegateFeedConsentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cheqd_oracle_v2_tx_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDelegateFeedConsentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDelegateFeedConsentResponse) ProtoMessage() {}

// Deprecated: Use MsgDelegateFeedConsentResponse.ProtoReflect.Descriptor instead.
func (*MsgDelegateFeedConsentResponse) Descriptor() ([]byte, []int) {
	return file_cheqd_oracle_v2_tx_proto_rawDescGZIP(), []int{5}
}

// MsgLegacyGovUpdateParams defines the Msg/MsgLegacyGovUpdateParams request type.
type MsgLegacyGovUpdateParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// authority is the address of the governance account.
	Authority   string   `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	Title       string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Keys        []string `protobuf:"bytes,4,rep,name=keys,proto3" json:"keys,omitempty"`
	Changes     *Params  `protobuf:"bytes,5,opt,name=changes,proto3" json:"changes,omitempty"`
}

func (x *MsgLegacyGovUpdateParams) Reset() {
	*x = MsgLegacyGovUpdateParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cheqd_oracle_v2_tx_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgLegacyGovUpdateParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgLegacyGovUpdateParams) ProtoMessage() {}

// Deprecated: Use MsgLegacyGovUpdateParams.ProtoReflect.Descriptor instead.
func (*MsgLegacyGovUpdateParams) Descriptor() ([]byte, []int) {
	return file_cheqd_oracle_v2_tx_proto_rawDescGZIP(), []int{6}
}

func (x *MsgLegacyGovUpdateParams) GetAuthority() string {
	if x != nil {
		return x.Authority
	}
	return ""
}

func (x *MsgLegacyGovUpdateParams) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MsgLegacyGovUpdateParams) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MsgLegacyGovUpdateParams) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *MsgLegacyGovUpdateParams) GetChanges() *Params {
	if x != nil {
		return x.Changes
	}
	return nil
}

// MsgLegacyGovUpdateParams defines the Msg/MsgLegacyGovUpdateParams response type.
type MsgLegacyGovUpdateParamsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgLegacyGovUpdateParamsResponse) Reset() {
	*x = MsgLegacyGovUpdateParamsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cheqd_oracle_v2_tx_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgLegacyGovUpdateParamsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgLegacyGovUpdateParamsResponse) ProtoMessage() {}

// Deprecated: Use MsgLegacyGovUpdateParamsResponse.ProtoReflect.Descriptor instead.
func (*MsgLegacyGovUpdateParamsResponse) Descriptor() ([]byte, []int) {
	return file_cheqd_oracle_v2_tx_proto_rawDescGZIP(), []int{7}
}

// MsgGovUpdateParams defines the Msg/GovUpdateParams request type.
type MsgGovUpdateParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// authority is the address of the governance account.
	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	// title of the proposal
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// description of the proposal
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// plan is the param update plan
	Plan *ParamUpdatePlan `protobuf:"bytes,4,opt,name=plan,proto3" json:"plan,omitempty"`
}

func (x *MsgGovUpdateParams) Reset() {
	*x = MsgGovUpdateParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cheqd_oracle_v2_tx_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgGovUpdateParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgGovUpdateParams) ProtoMessage() {}

// Deprecated: Use MsgGovUpdateParams.ProtoReflect.Descriptor instead.
func (*MsgGovUpdateParams) Descriptor() ([]byte, []int) {
	return file_cheqd_oracle_v2_tx_proto_rawDescGZIP(), []int{8}
}

func (x *MsgGovUpdateParams) GetAuthority() string {
	if x != nil {
		return x.Authority
	}
	return ""
}

func (x *MsgGovUpdateParams) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MsgGovUpdateParams) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MsgGovUpdateParams) GetPlan() *ParamUpdatePlan {
	if x != nil {
		return x.Plan
	}
	return nil
}

// MsgGovUpdateParamsResponse defines the Msg/GovUpdateParams response type.
type MsgGovUpdateParamsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgGovUpdateParamsResponse) Reset() {
	*x = MsgGovUpdateParamsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cheqd_oracle_v2_tx_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgGovUpdateParamsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgGovUpdateParamsResponse) ProtoMessage() {}

// Deprecated: Use MsgGovUpdateParamsResponse.ProtoReflect.Descriptor instead.
func (*MsgGovUpdateParamsResponse) Descriptor() ([]byte, []int) {
	return file_cheqd_oracle_v2_tx_proto_rawDescGZIP(), []int{9}
}

// MsgGovAddDenoms defines the Msg/GovAddDenoms request type.
type MsgGovAddDenoms struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// authority is the address of the governance account.
	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	// title of the proposal
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// description of the proposal
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// height at which the param update must be performed
	Height int64 `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	// denom_list is the list of denoms to add to the oracle registry
	DenomList []*Denom `protobuf:"bytes,5,rep,name=denom_list,json=denomList,proto3" json:"denom_list,omitempty"`
	// whether or not the assets should be mandatory
	Mandatory bool `protobuf:"varint,6,opt,name=mandatory,proto3" json:"mandatory,omitempty"`
	// reward_band determines what the reward_band will be for every
	// asset in the proposal. If not provided, it will default.
	RewardBand string `protobuf:"bytes,7,opt,name=reward_band,json=rewardBand,proto3" json:"reward_band,omitempty"`
	// currency_pair_providers defines the currency provider pairs for
	// each denom being added.
	CurrencyPairProviders []*CurrencyPairProviders `protobuf:"bytes,8,rep,name=currency_pair_providers,json=currencyPairProviders,proto3" json:"currency_pair_providers,omitempty"`
	// currency_deviation_thresholds defines the deviation thresholds
	// for each denom being added.
	CurrencyDeviationThresholds []*CurrencyDeviationThreshold `protobuf:"bytes,9,rep,name=currency_deviation_thresholds,json=currencyDeviationThresholds,proto3" json:"currency_deviation_thresholds,omitempty"`
}

func (x *MsgGovAddDenoms) Reset() {
	*x = MsgGovAddDenoms{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cheqd_oracle_v2_tx_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgGovAddDenoms) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgGovAddDenoms) ProtoMessage() {}

// Deprecated: Use MsgGovAddDenoms.ProtoReflect.Descriptor instead.
func (*MsgGovAddDenoms) Descriptor() ([]byte, []int) {
	return file_cheqd_oracle_v2_tx_proto_rawDescGZIP(), []int{10}
}

func (x *MsgGovAddDenoms) GetAuthority() string {
	if x != nil {
		return x.Authority
	}
	return ""
}

func (x *MsgGovAddDenoms) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MsgGovAddDenoms) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MsgGovAddDenoms) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *MsgGovAddDenoms) GetDenomList() []*Denom {
	if x != nil {
		return x.DenomList
	}
	return nil
}

func (x *MsgGovAddDenoms) GetMandatory() bool {
	if x != nil {
		return x.Mandatory
	}
	return false
}

func (x *MsgGovAddDenoms) GetRewardBand() string {
	if x != nil {
		return x.RewardBand
	}
	return ""
}

func (x *MsgGovAddDenoms) GetCurrencyPairProviders() []*CurrencyPairProviders {
	if x != nil {
		return x.CurrencyPairProviders
	}
	return nil
}

func (x *MsgGovAddDenoms) GetCurrencyDeviationThresholds() []*CurrencyDeviationThreshold {
	if x != nil {
		return x.CurrencyDeviationThresholds
	}
	return nil
}

// MsgGovAddDenomResponse defines the Msg/GovAddDenomResponse response type.
type MsgGovAddDenomsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgGovAddDenomsResponse) Reset() {
	*x = MsgGovAddDenomsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cheqd_oracle_v2_tx_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgGovAddDenomsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgGovAddDenomsResponse) ProtoMessage() {}

// Deprecated: Use MsgGovAddDenomsResponse.ProtoReflect.Descriptor instead.
func (*MsgGovAddDenomsResponse) Descriptor() ([]byte, []int) {
	return file_cheqd_oracle_v2_tx_proto_rawDescGZIP(), []int{11}
}

// MsgGovRemoveCurrencyPairProviders defines the Msg/GovRemoveCurrencyPairProviders request type.
type MsgGovRemoveCurrencyPairProviders struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// authority is the address of the governance account.
	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	// title of the proposal
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// description of the proposal
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// height at which the param update must be performed
	Height int64 `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	// currency_pair_providers to remove from the current CurrencyPairProvidersList
	CurrencyPairProviders []*CurrencyPairProviders `protobuf:"bytes,5,rep,name=currency_pair_providers,json=currencyPairProviders,proto3" json:"currency_pair_providers,omitempty"`
}

func (x *MsgGovRemoveCurrencyPairProviders) Reset() {
	*x = MsgGovRemoveCurrencyPairProviders{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cheqd_oracle_v2_tx_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgGovRemoveCurrencyPairProviders) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgGovRemoveCurrencyPairProviders) ProtoMessage() {}

// Deprecated: Use MsgGovRemoveCurrencyPairProviders.ProtoReflect.Descriptor instead.
func (*MsgGovRemoveCurrencyPairProviders) Descriptor() ([]byte, []int) {
	return file_cheqd_oracle_v2_tx_proto_rawDescGZIP(), []int{12}
}

func (x *MsgGovRemoveCurrencyPairProviders) GetAuthority() string {
	if x != nil {
		return x.Authority
	}
	return ""
}

func (x *MsgGovRemoveCurrencyPairProviders) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MsgGovRemoveCurrencyPairProviders) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MsgGovRemoveCurrencyPairProviders) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *MsgGovRemoveCurrencyPairProviders) GetCurrencyPairProviders() []*CurrencyPairProviders {
	if x != nil {
		return x.CurrencyPairProviders
	}
	return nil
}

// MsgGovRemoveCurrencyPairProvidersResponse defines the Msg/GovRemoveCurrencyPairProvidersResponse response type.
type MsgGovRemoveCurrencyPairProvidersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgGovRemoveCurrencyPairProvidersResponse) Reset() {
	*x = MsgGovRemoveCurrencyPairProvidersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cheqd_oracle_v2_tx_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgGovRemoveCurrencyPairProvidersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgGovRemoveCurrencyPairProvidersResponse) ProtoMessage() {}

// Deprecated: Use MsgGovRemoveCurrencyPairProvidersResponse.ProtoReflect.Descriptor instead.
func (*MsgGovRemoveCurrencyPairProvidersResponse) Descriptor() ([]byte, []int) {
	return file_cheqd_oracle_v2_tx_proto_rawDescGZIP(), []int{13}
}

// MsgGovRemoveCurrencyDeviationThresholds defines the Msg/GovRemoveCurrencyDeviationThresholds request type.
type MsgGovRemoveCurrencyDeviationThresholds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// authority is the address of the governance account.
	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	// title of the proposal
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// description of the proposal
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// height at which the param update must be performed
	Height int64 `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	// currencies to remove from the current CurrencyDeviationThresholdsList
	Currencies []string `protobuf:"bytes,5,rep,name=currencies,proto3" json:"currencies,omitempty"`
}

func (x *MsgGovRemoveCurrencyDeviationThresholds) Reset() {
	*x = MsgGovRemoveCurrencyDeviationThresholds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cheqd_oracle_v2_tx_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgGovRemoveCurrencyDeviationThresholds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgGovRemoveCurrencyDeviationThresholds) ProtoMessage() {}

// Deprecated: Use MsgGovRemoveCurrencyDeviationThresholds.ProtoReflect.Descriptor instead.
func (*MsgGovRemoveCurrencyDeviationThresholds) Descriptor() ([]byte, []int) {
	return file_cheqd_oracle_v2_tx_proto_rawDescGZIP(), []int{14}
}

func (x *MsgGovRemoveCurrencyDeviationThresholds) GetAuthority() string {
	if x != nil {
		return x.Authority
	}
	return ""
}

func (x *MsgGovRemoveCurrencyDeviationThresholds) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MsgGovRemoveCurrencyDeviationThresholds) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MsgGovRemoveCurrencyDeviationThresholds) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *MsgGovRemoveCurrencyDeviationThresholds) GetCurrencies() []string {
	if x != nil {
		return x.Currencies
	}
	return nil
}

// MsgGovRemoveCurrencyDeviationThresholdsResponse defines the Msg/GovRemoveCurrencyDeviationThresholdsResponse response type.
type MsgGovRemoveCurrencyDeviationThresholdsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgGovRemoveCurrencyDeviationThresholdsResponse) Reset() {
	*x = MsgGovRemoveCurrencyDeviationThresholdsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cheqd_oracle_v2_tx_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgGovRemoveCurrencyDeviationThresholdsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgGovRemoveCurrencyDeviationThresholdsResponse) ProtoMessage() {}

// Deprecated: Use MsgGovRemoveCurrencyDeviationThresholdsResponse.ProtoReflect.Descriptor instead.
func (*MsgGovRemoveCurrencyDeviationThresholdsResponse) Descriptor() ([]byte, []int) {
	return file_cheqd_oracle_v2_tx_proto_rawDescGZIP(), []int{15}
}

// MsgGovCancelUpdateParamPlan defines the Msg/GovCancelUpdateParamPlan request type.
type MsgGovCancelUpdateParamPlan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// authority is the address of the governance account.
	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	// title of the proposal
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// description of the proposal
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// height of param update plan to cancel
	Height int64 `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *MsgGovCancelUpdateParamPlan) Reset() {
	*x = MsgGovCancelUpdateParamPlan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cheqd_oracle_v2_tx_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgGovCancelUpdateParamPlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgGovCancelUpdateParamPlan) ProtoMessage() {}

// Deprecated: Use MsgGovCancelUpdateParamPlan.ProtoReflect.Descriptor instead.
func (*MsgGovCancelUpdateParamPlan) Descriptor() ([]byte, []int) {
	return file_cheqd_oracle_v2_tx_proto_rawDescGZIP(), []int{16}
}

func (x *MsgGovCancelUpdateParamPlan) GetAuthority() string {
	if x != nil {
		return x.Authority
	}
	return ""
}

func (x *MsgGovCancelUpdateParamPlan) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MsgGovCancelUpdateParamPlan) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MsgGovCancelUpdateParamPlan) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

// MsgGovCancelUpdateParamPlanResponse defines the Msg/GovCancelUpdateParamPlanResponse response type.
type MsgGovCancelUpdateParamPlanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgGovCancelUpdateParamPlanResponse) Reset() {
	*x = MsgGovCancelUpdateParamPlanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cheqd_oracle_v2_tx_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgGovCancelUpdateParamPlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgGovCancelUpdateParamPlanResponse) ProtoMessage() {}

// Deprecated: Use MsgGovCancelUpdateParamPlanResponse.ProtoReflect.Descriptor instead.
func (*MsgGovCancelUpdateParamPlanResponse) Descriptor() ([]byte, []int) {
	return file_cheqd_oracle_v2_tx_proto_rawDescGZIP(), []int{17}
}

var File_cheqd_oracle_v2_tx_proto protoreflect.FileDescriptor

var file_cheqd_oracle_v2_tx_proto_rawDesc = []byte{
	0x0a, 0x18, 0x63, 0x68, 0x65, 0x71, 0x64, 0x2f, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2f, 0x76,
	0x32, 0x2f, 0x74, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x63, 0x68, 0x65, 0x71,
	0x64, 0x2e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x76, 0x32, 0x1a, 0x1c, 0x63, 0x68, 0x65,
	0x71, 0x64, 0x2f, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2f, 0x76, 0x32, 0x2f, 0x6f, 0x72, 0x61,
	0x63, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2f, 0x6d, 0x73, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x73, 0x67, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x19, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x67,
	0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xce, 0x01, 0x0a, 0x1f, 0x4d, 0x73, 0x67, 0x41, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x65, 0x76, 0x6f, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0xf2, 0xde, 0x1f, 0x0b, 0x79, 0x61, 0x6d, 0x6c, 0x3a,
	0x22, 0x68, 0x61, 0x73, 0x68, 0x22, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x30, 0x0a, 0x06,
	0x66, 0x65, 0x65, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xd2, 0xb4,
	0x2d, 0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x66, 0x65, 0x65, 0x64, 0x65, 0x72, 0x12, 0x3f,
	0x0a, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x21, 0xd2, 0xb4, 0x2d, 0x1d, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x3a,
	0x13, 0x88, 0xa0, 0x1f, 0x00, 0xe8, 0xa0, 0x1f, 0x00, 0x82, 0xe7, 0xb0, 0x2a, 0x06, 0x66, 0x65,
	0x65, 0x64, 0x65, 0x72, 0x22, 0x29, 0x0a, 0x27, 0x4d, 0x73, 0x67, 0x41, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x65, 0x76, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x8d, 0x02, 0x0a, 0x1c, 0x4d, 0x73, 0x67, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x74, 0x65,
	0x12, 0x23, 0x0a, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f,
	0xf2, 0xde, 0x1f, 0x0b, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x73, 0x61, 0x6c, 0x74, 0x22, 0x52,
	0x04, 0x73, 0x61, 0x6c, 0x74, 0x12, 0x40, 0x0a, 0x0e, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x19, 0xf2,
	0xde, 0x1f, 0x15, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x73, 0x22, 0x52, 0x0d, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x06, 0x66, 0x65, 0x65, 0x64, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x52, 0x06, 0x66, 0x65, 0x65, 0x64, 0x65, 0x72, 0x12, 0x3f, 0x0a, 0x09, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x21, 0xd2, 0xb4,
	0x2d, 0x1d, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52,
	0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x3a, 0x13, 0x88, 0xa0, 0x1f, 0x00,
	0xe8, 0xa0, 0x1f, 0x00, 0x82, 0xe7, 0xb0, 0x2a, 0x06, 0x66, 0x65, 0x65, 0x64, 0x65, 0x72, 0x22,
	0x26, 0x0a, 0x24, 0x4d, 0x73, 0x67, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x45,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xad, 0x01, 0x0a, 0x16, 0x4d, 0x73, 0x67, 0x44,
	0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x73, 0x65,
	0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x21, 0xd2, 0xb4, 0x2d, 0x1d, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x2e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x3d, 0x0a, 0x08, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x21, 0xd2, 0xb4, 0x2d, 0x1d, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x3a, 0x15, 0x88, 0xa0, 0x1f, 0x00, 0xe8, 0xa0, 0x1f, 0x00, 0x82, 0xe7, 0xb0, 0x2a, 0x08, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x20, 0x0a, 0x1e, 0x4d, 0x73, 0x67, 0x44, 0x65,
	0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xf3, 0x01, 0x0a, 0x18, 0x4d, 0x73,
	0x67, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x47, 0x6f, 0x76, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x36, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xd2, 0xb4, 0x2d, 0x14, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x37, 0x0a, 0x07, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x68,
	0x65, 0x71, 0x64, 0x2e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x3a, 0x1a, 0x88, 0xa0, 0x1f, 0x00, 0x98, 0xa0, 0x1f, 0x00, 0xe8, 0xa0, 0x1f,
	0x01, 0x82, 0xe7, 0xb0, 0x2a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x22,
	0x22, 0x0a, 0x20, 0x4d, 0x73, 0x67, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x47, 0x6f, 0x76, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0xdc, 0x01, 0x0a, 0x12, 0x4d, 0x73, 0x67, 0x47, 0x6f, 0x76, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x36, 0x0a, 0x09, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xd2,
	0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x04, 0x70, 0x6c,
	0x61, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x68, 0x65, 0x71, 0x64,
	0x2e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00,
	0x52, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x3a, 0x1a, 0x88, 0xa0, 0x1f, 0x00, 0x98, 0xa0, 0x1f, 0x00,
	0xe8, 0xa0, 0x1f, 0x01, 0x82, 0xe7, 0xb0, 0x2a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x22, 0x1c, 0x0a, 0x1a, 0x4d, 0x73, 0x67, 0x47, 0x6f, 0x76, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0xe4, 0x05, 0x0a, 0x0f, 0x4d, 0x73, 0x67, 0x47, 0x6f, 0x76, 0x41, 0x64, 0x64, 0x44, 0x65,
	0x6e, 0x6f, 0x6d, 0x73, 0x12, 0x36, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x48, 0x0a, 0x0a,
	0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x63, 0x68, 0x65, 0x71, 0x64, 0x2e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e,
	0x76, 0x32, 0x2e, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x42, 0x11, 0xc8, 0xde, 0x1f, 0x00, 0xaa, 0xdf,
	0x1f, 0x09, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x09, 0x64, 0x65, 0x6e,
	0x6f, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x6e, 0x64, 0x61, 0x74,
	0x6f, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6d, 0x61, 0x6e, 0x64, 0x61,
	0x74, 0x6f, 0x72, 0x79, 0x12, 0x5d, 0x0a, 0x0b, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x62,
	0x61, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x3c, 0xc8, 0xde, 0x1f, 0x01, 0xda,
	0xde, 0x1f, 0x1b, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f,
	0x6d, 0x61, 0x74, 0x68, 0x2e, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x44, 0x65, 0x63, 0xf2, 0xde,
	0x1f, 0x15, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x74, 0x68, 0x72,
	0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x22, 0x52, 0x0a, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x42,
	0x61, 0x6e, 0x64, 0x12, 0xa3, 0x01, 0x0a, 0x17, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x5f, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x68, 0x65, 0x71, 0x64, 0x2e, 0x6f, 0x72,
	0x61, 0x63, 0x6c, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x50, 0x61, 0x69, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x42, 0x43, 0xc8,
	0xde, 0x1f, 0x00, 0xf2, 0xde, 0x1f, 0x1e, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x22, 0xaa, 0xdf, 0x1f, 0x19, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x50, 0x61, 0x69, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x15, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x50, 0x61, 0x69, 0x72,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x12, 0xbf, 0x01, 0x0a, 0x1d, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x68, 0x65, 0x71, 0x64, 0x2e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65,
	0x2e, 0x76, 0x32, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x44, 0x65, 0x76, 0x69,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x42, 0x4e,
	0xc8, 0xde, 0x1f, 0x00, 0xf2, 0xde, 0x1f, 0x24, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x73, 0x22, 0xaa, 0xdf, 0x1f, 0x1e,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x44, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x1b,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x44, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x73, 0x3a, 0x1a, 0x88, 0xa0, 0x1f,
	0x00, 0x98, 0xa0, 0x1f, 0x00, 0xe8, 0xa0, 0x1f, 0x01, 0x82, 0xe7, 0xb0, 0x2a, 0x09, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x22, 0x19, 0x0a, 0x17, 0x4d, 0x73, 0x67, 0x47, 0x6f,
	0x76, 0x41, 0x64, 0x64, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0xed, 0x02, 0x0a, 0x21, 0x4d, 0x73, 0x67, 0x47, 0x6f, 0x76, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x50, 0x61, 0x69, 0x72, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x12, 0x36, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xd2, 0xb4, 0x2d,
	0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0xa3, 0x01, 0x0a, 0x17, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x70, 0x61,
	0x69, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x68, 0x65, 0x71, 0x64, 0x2e, 0x6f, 0x72, 0x61, 0x63, 0x6c,
	0x65, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x50, 0x61, 0x69,
	0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x42, 0x43, 0xc8, 0xde, 0x1f, 0x00,
	0xf2, 0xde, 0x1f, 0x1e, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x5f, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x73, 0x22, 0xaa, 0xdf, 0x1f, 0x19, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x50, 0x61,
	0x69, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x15, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x50, 0x61, 0x69, 0x72, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x3a, 0x1a, 0x88, 0xa0, 0x1f, 0x00, 0x98, 0xa0, 0x1f, 0x00,
	0xe8, 0xa0, 0x1f, 0x01, 0x82, 0xe7, 0xb0, 0x2a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x22, 0x2b, 0x0a, 0x29, 0x4d, 0x73, 0x67, 0x47, 0x6f, 0x76, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x50, 0x61, 0x69, 0x72, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0xed, 0x01, 0x0a, 0x27, 0x4d, 0x73, 0x67, 0x47, 0x6f, 0x76, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x44, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x73, 0x12, 0x36, 0x0a, 0x09, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18,
	0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x65,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x69, 0x65, 0x73, 0x3a, 0x1a, 0x88, 0xa0, 0x1f, 0x00, 0x98, 0xa0, 0x1f, 0x00, 0xe8, 0xa0, 0x1f,
	0x01, 0x82, 0xe7, 0xb0, 0x2a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x22,
	0x31, 0x0a, 0x2f, 0x4d, 0x73, 0x67, 0x47, 0x6f, 0x76, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x44, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0xc1, 0x01, 0x0a, 0x1b, 0x4d, 0x73, 0x67, 0x47, 0x6f, 0x76, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x50, 0x6c,
	0x61, 0x6e, 0x12, 0x36, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52,
	0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x3a, 0x1a, 0x88, 0xa0, 0x1f, 0x00,
	0x98, 0xa0, 0x1f, 0x00, 0xe8, 0xa0, 0x1f, 0x01, 0x82, 0xe7, 0xb0, 0x2a, 0x09, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x22, 0x25, 0x0a, 0x23, 0x4d, 0x73, 0x67, 0x47, 0x6f, 0x76,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xfe, 0x08,
	0x0a, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x8a, 0x01, 0x0a, 0x1c, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67,
	0x61, 0x74, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x65, 0x76, 0x6f, 0x74, 0x65, 0x12, 0x30, 0x2e, 0x63, 0x68, 0x65, 0x71, 0x64, 0x2e, 0x6f,
	0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x41, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x65, 0x76, 0x6f, 0x74, 0x65, 0x1a, 0x38, 0x2e, 0x63, 0x68, 0x65, 0x71, 0x64,
	0x2e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x41, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x76, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x81, 0x01, 0x0a, 0x19, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x74, 0x65,
	0x12, 0x2d, 0x2e, 0x63, 0x68, 0x65, 0x71, 0x64, 0x2e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e,
	0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x45,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x1a,
	0x35, 0x2e, 0x63, 0x68, 0x65, 0x71, 0x64, 0x2e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x76,
	0x32, 0x2e, 0x4d, 0x73, 0x67, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x45, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6f, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x12, 0x27, 0x2e,
	0x63, 0x68, 0x65, 0x71, 0x64, 0x2e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x76, 0x32, 0x2e,
	0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x43,
	0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x1a, 0x2f, 0x2e, 0x63, 0x68, 0x65, 0x71, 0x64, 0x2e, 0x6f,
	0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x75, 0x0a, 0x15, 0x4c, 0x65, 0x67, 0x61, 0x63,
	0x79, 0x47, 0x6f, 0x76, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x29, 0x2e, 0x63, 0x68, 0x65, 0x71, 0x64, 0x2e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e,
	0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x47, 0x6f, 0x76, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x31, 0x2e, 0x63, 0x68,
	0x65, 0x71, 0x64, 0x2e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73,
	0x67, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x47, 0x6f, 0x76, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63,
	0x0a, 0x0f, 0x47, 0x6f, 0x76, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x23, 0x2e, 0x63, 0x68, 0x65, 0x71, 0x64, 0x2e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65,
	0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x47, 0x6f, 0x76, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x2b, 0x2e, 0x63, 0x68, 0x65, 0x71, 0x64, 0x2e, 0x6f,
	0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x47, 0x6f, 0x76, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x0c, 0x47, 0x6f, 0x76, 0x41, 0x64, 0x64, 0x44, 0x65, 0x6e,
	0x6f, 0x6d, 0x73, 0x12, 0x20, 0x2e, 0x63, 0x68, 0x65, 0x71, 0x64, 0x2e, 0x6f, 0x72, 0x61, 0x63,
	0x6c, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x47, 0x6f, 0x76, 0x41, 0x64, 0x64, 0x44,
	0x65, 0x6e, 0x6f, 0x6d, 0x73, 0x1a, 0x28, 0x2e, 0x63, 0x68, 0x65, 0x71, 0x64, 0x2e, 0x6f, 0x72,
	0x61, 0x63, 0x6c, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x47, 0x6f, 0x76, 0x41, 0x64,
	0x64, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x90, 0x01, 0x0a, 0x1e, 0x47, 0x6f, 0x76, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x50, 0x61, 0x69, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x73, 0x12, 0x32, 0x2e, 0x63, 0x68, 0x65, 0x71, 0x64, 0x2e, 0x6f, 0x72, 0x61, 0x63, 0x6c,
	0x65, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x47, 0x6f, 0x76, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x50, 0x61, 0x69, 0x72, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x1a, 0x3a, 0x2e, 0x63, 0x68, 0x65, 0x71, 0x64, 0x2e, 0x6f,
	0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x47, 0x6f, 0x76, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x50, 0x61, 0x69,
	0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0xa2, 0x01, 0x0a, 0x24, 0x47, 0x6f, 0x76, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x44, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x73, 0x12, 0x38, 0x2e, 0x63, 0x68,
	0x65, 0x71, 0x64, 0x2e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73,
	0x67, 0x47, 0x6f, 0x76, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x44, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x68, 0x72, 0x65, 0x73,
	0x68, 0x6f, 0x6c, 0x64, 0x73, 0x1a, 0x40, 0x2e, 0x63, 0x68, 0x65, 0x71, 0x64, 0x2e, 0x6f, 0x72,
	0x61, 0x63, 0x6c, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x47, 0x6f, 0x76, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x44, 0x65, 0x76, 0x69,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7e, 0x0a, 0x18, 0x47, 0x6f, 0x76, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x50,
	0x6c, 0x61, 0x6e, 0x12, 0x2c, 0x2e, 0x63, 0x68, 0x65, 0x71, 0x64, 0x2e, 0x6f, 0x72, 0x61, 0x63,
	0x6c, 0x65, 0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x47, 0x6f, 0x76, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x50, 0x6c, 0x61,
	0x6e, 0x1a, 0x34, 0x2e, 0x63, 0x68, 0x65, 0x71, 0x64, 0x2e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65,
	0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x47, 0x6f, 0x76, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x50, 0x6c, 0x61, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x05, 0x80, 0xe7, 0xb0, 0x2a, 0x01, 0x42, 0xbd,
	0x01, 0xc8, 0xe1, 0x1e, 0x00, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x68, 0x65, 0x71, 0x64,
	0x2e, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x76, 0x32, 0x42, 0x07, 0x54, 0x78, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x63, 0x68, 0x65, 0x71, 0x64, 0x2f, 0x63, 0x68, 0x65, 0x71, 0x64, 0x2d, 0x6e, 0x6f,
	0x64, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x63, 0x68, 0x65, 0x71, 0x64, 0x2f,
	0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2f, 0x76, 0x32, 0x3b, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65,
	0x76, 0x32, 0xa2, 0x02, 0x03, 0x43, 0x4f, 0x58, 0xaa, 0x02, 0x0f, 0x43, 0x68, 0x65, 0x71, 0x64,
	0x2e, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x2e, 0x56, 0x32, 0xca, 0x02, 0x0f, 0x43, 0x68, 0x65,
	0x71, 0x64, 0x5c, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x5c, 0x56, 0x32, 0xe2, 0x02, 0x1b, 0x43,
	0x68, 0x65, 0x71, 0x64, 0x5c, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x5c, 0x56, 0x32, 0x5c, 0x47,
	0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x11, 0x43, 0x68, 0x65,
	0x71, 0x64, 0x3a, 0x3a, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x3a, 0x3a, 0x56, 0x32, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cheqd_oracle_v2_tx_proto_rawDescOnce sync.Once
	file_cheqd_oracle_v2_tx_proto_rawDescData = file_cheqd_oracle_v2_tx_proto_rawDesc
)

func file_cheqd_oracle_v2_tx_proto_rawDescGZIP() []byte {
	file_cheqd_oracle_v2_tx_proto_rawDescOnce.Do(func() {
		file_cheqd_oracle_v2_tx_proto_rawDescData = protoimpl.X.CompressGZIP(file_cheqd_oracle_v2_tx_proto_rawDescData)
	})
	return file_cheqd_oracle_v2_tx_proto_rawDescData
}

var file_cheqd_oracle_v2_tx_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_cheqd_oracle_v2_tx_proto_goTypes = []interface{}{
	(*MsgAggregateExchangeRatePrevote)(nil),                 // 0: cheqd.oracle.v2.MsgAggregateExchangeRatePrevote
	(*MsgAggregateExchangeRatePrevoteResponse)(nil),         // 1: cheqd.oracle.v2.MsgAggregateExchangeRatePrevoteResponse
	(*MsgAggregateExchangeRateVote)(nil),                    // 2: cheqd.oracle.v2.MsgAggregateExchangeRateVote
	(*MsgAggregateExchangeRateVoteResponse)(nil),            // 3: cheqd.oracle.v2.MsgAggregateExchangeRateVoteResponse
	(*MsgDelegateFeedConsent)(nil),                          // 4: cheqd.oracle.v2.MsgDelegateFeedConsent
	(*MsgDelegateFeedConsentResponse)(nil),                  // 5: cheqd.oracle.v2.MsgDelegateFeedConsentResponse
	(*MsgLegacyGovUpdateParams)(nil),                        // 6: cheqd.oracle.v2.MsgLegacyGovUpdateParams
	(*MsgLegacyGovUpdateParamsResponse)(nil),                // 7: cheqd.oracle.v2.MsgLegacyGovUpdateParamsResponse
	(*MsgGovUpdateParams)(nil),                              // 8: cheqd.oracle.v2.MsgGovUpdateParams
	(*MsgGovUpdateParamsResponse)(nil),                      // 9: cheqd.oracle.v2.MsgGovUpdateParamsResponse
	(*MsgGovAddDenoms)(nil),                                 // 10: cheqd.oracle.v2.MsgGovAddDenoms
	(*MsgGovAddDenomsResponse)(nil),                         // 11: cheqd.oracle.v2.MsgGovAddDenomsResponse
	(*MsgGovRemoveCurrencyPairProviders)(nil),               // 12: cheqd.oracle.v2.MsgGovRemoveCurrencyPairProviders
	(*MsgGovRemoveCurrencyPairProvidersResponse)(nil),       // 13: cheqd.oracle.v2.MsgGovRemoveCurrencyPairProvidersResponse
	(*MsgGovRemoveCurrencyDeviationThresholds)(nil),         // 14: cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholds
	(*MsgGovRemoveCurrencyDeviationThresholdsResponse)(nil), // 15: cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholdsResponse
	(*MsgGovCancelUpdateParamPlan)(nil),                     // 16: cheqd.oracle.v2.MsgGovCancelUpdateParamPlan
	(*MsgGovCancelUpdateParamPlanResponse)(nil),             // 17: cheqd.oracle.v2.MsgGovCancelUpdateParamPlanResponse
	(*Params)(nil),                     // 18: cheqd.oracle.v2.Params
	(*ParamUpdatePlan)(nil),            // 19: cheqd.oracle.v2.ParamUpdatePlan
	(*Denom)(nil),                      // 20: cheqd.oracle.v2.Denom
	(*CurrencyPairProviders)(nil),      // 21: cheqd.oracle.v2.CurrencyPairProviders
	(*CurrencyDeviationThreshold)(nil), // 22: cheqd.oracle.v2.CurrencyDeviationThreshold
}
var file_cheqd_oracle_v2_tx_proto_depIdxs = []int32{
	18, // 0: cheqd.oracle.v2.MsgLegacyGovUpdateParams.changes:type_name -> cheqd.oracle.v2.Params
	19, // 1: cheqd.oracle.v2.MsgGovUpdateParams.plan:type_name -> cheqd.oracle.v2.ParamUpdatePlan
	20, // 2: cheqd.oracle.v2.MsgGovAddDenoms.denom_list:type_name -> cheqd.oracle.v2.Denom
	21, // 3: cheqd.oracle.v2.MsgGovAddDenoms.currency_pair_providers:type_name -> cheqd.oracle.v2.CurrencyPairProviders
	22, // 4: cheqd.oracle.v2.MsgGovAddDenoms.currency_deviation_thresholds:type_name -> cheqd.oracle.v2.CurrencyDeviationThreshold
	21, // 5: cheqd.oracle.v2.MsgGovRemoveCurrencyPairProviders.currency_pair_providers:type_name -> cheqd.oracle.v2.CurrencyPairProviders
	0,  // 6: cheqd.oracle.v2.Msg.AggregateExchangeRatePrevote:input_type -> cheqd.oracle.v2.MsgAggregateExchangeRatePrevote
	2,  // 7: cheqd.oracle.v2.Msg.AggregateExchangeRateVote:input_type -> cheqd.oracle.v2.MsgAggregateExchangeRateVote
	4,  // 8: cheqd.oracle.v2.Msg.DelegateFeedConsent:input_type -> cheqd.oracle.v2.MsgDelegateFeedConsent
	6,  // 9: cheqd.oracle.v2.Msg.LegacyGovUpdateParams:input_type -> cheqd.oracle.v2.MsgLegacyGovUpdateParams
	8,  // 10: cheqd.oracle.v2.Msg.GovUpdateParams:input_type -> cheqd.oracle.v2.MsgGovUpdateParams
	10, // 11: cheqd.oracle.v2.Msg.GovAddDenoms:input_type -> cheqd.oracle.v2.MsgGovAddDenoms
	12, // 12: cheqd.oracle.v2.Msg.GovRemoveCurrencyPairProviders:input_type -> cheqd.oracle.v2.MsgGovRemoveCurrencyPairProviders
	14, // 13: cheqd.oracle.v2.Msg.GovRemoveCurrencyDeviationThresholds:input_type -> cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholds
	16, // 14: cheqd.oracle.v2.Msg.GovCancelUpdateParamPlan:input_type -> cheqd.oracle.v2.MsgGovCancelUpdateParamPlan
	1,  // 15: cheqd.oracle.v2.Msg.AggregateExchangeRatePrevote:output_type -> cheqd.oracle.v2.MsgAggregateExchangeRatePrevoteResponse
	3,  // 16: cheqd.oracle.v2.Msg.AggregateExchangeRateVote:output_type -> cheqd.oracle.v2.MsgAggregateExchangeRateVoteResponse
	5,  // 17: cheqd.oracle.v2.Msg.DelegateFeedConsent:output_type -> cheqd.oracle.v2.MsgDelegateFeedConsentResponse
	7,  // 18: cheqd.oracle.v2.Msg.LegacyGovUpdateParams:output_type -> cheqd.oracle.v2.MsgLegacyGovUpdateParamsResponse
	9,  // 19: cheqd.oracle.v2.Msg.GovUpdateParams:output_type -> cheqd.oracle.v2.MsgGovUpdateParamsResponse
	11, // 20: cheqd.oracle.v2.Msg.GovAddDenoms:output_type -> cheqd.oracle.v2.MsgGovAddDenomsResponse
	13, // 21: cheqd.oracle.v2.Msg.GovRemoveCurrencyPairProviders:output_type -> cheqd.oracle.v2.MsgGovRemoveCurrencyPairProvidersResponse
	15, // 22: cheqd.oracle.v2.Msg.GovRemoveCurrencyDeviationThresholds:output_type -> cheqd.oracle.v2.MsgGovRemoveCurrencyDeviationThresholdsResponse
	17, // 23: cheqd.oracle.v2.Msg.GovCancelUpdateParamPlan:output_type -> cheqd.oracle.v2.MsgGovCancelUpdateParamPlanResponse
	15, // [15:24] is the sub-list for method output_type
	6,  // [6:15] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_cheqd_oracle_v2_tx_proto_init() }
func file_cheqd_oracle_v2_tx_proto_init() {
	if File_cheqd_oracle_v2_tx_proto != nil {
		return
	}
	file_cheqd_oracle_v2_oracle_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_cheqd_oracle_v2_tx_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAggregateExchangeRatePrevote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cheqd_oracle_v2_tx_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAggregateExchangeRatePrevoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cheqd_oracle_v2_tx_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAggregateExchangeRateVote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cheqd_oracle_v2_tx_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAggregateExchangeRateVoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cheqd_oracle_v2_tx_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDelegateFeedConsent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cheqd_oracle_v2_tx_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDelegateFeedConsentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cheqd_oracle_v2_tx_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgLegacyGovUpdateParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cheqd_oracle_v2_tx_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgLegacyGovUpdateParamsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cheqd_oracle_v2_tx_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgGovUpdateParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cheqd_oracle_v2_tx_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgGovUpdateParamsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cheqd_oracle_v2_tx_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgGovAddDenoms); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cheqd_oracle_v2_tx_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgGovAddDenomsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cheqd_oracle_v2_tx_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgGovRemoveCurrencyPairProviders); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cheqd_oracle_v2_tx_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgGovRemoveCurrencyPairProvidersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cheqd_oracle_v2_tx_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgGovRemoveCurrencyDeviationThresholds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cheqd_oracle_v2_tx_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgGovRemoveCurrencyDeviationThresholdsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cheqd_oracle_v2_tx_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgGovCancelUpdateParamPlan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cheqd_oracle_v2_tx_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgGovCancelUpdateParamPlanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cheqd_oracle_v2_tx_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cheqd_oracle_v2_tx_proto_goTypes,
		DependencyIndexes: file_cheqd_oracle_v2_tx_proto_depIdxs,
		MessageInfos:      file_cheqd_oracle_v2_tx_proto_msgTypes,
	}.Build()
	File_cheqd_oracle_v2_tx_proto = out.File
	file_cheqd_oracle_v2_tx_proto_rawDesc = nil
	file_cheqd_oracle_v2_tx_proto_goTypes = nil
	file_cheqd_oracle_v2_tx_proto_depIdxs = nil
}

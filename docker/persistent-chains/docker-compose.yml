version: '3.8'

# CAUTION: Please ensure you edit necessary values in container.env and docker-compose.env before using this Docker Compose file.

# SYNTAX: docker compose -f docker/persistent-chains/docker-compose.yml --env-file docker/persistent-chains/docker-compose.env up --detach --no-build

services:
  cheqd_node:
    # OPTIONAL: Rebuild cheq-node Docker image, if you want build your own
    # Default is to pull in the pre-published image on GitHub Container Registry
    # SYNTAX: docker-compose -f docker/persistent-chains/docker-compose.yml --env-file docker/persistent-chains/docker-compose.env build --no-cache
    # build:
    #   context: .
    #   dockerfile: docker/Dockerfile
    #   target: runner
    #   args:
    #     HOME_DIR: ${CHEQD_HOME_DIR}
    #     USER: cheqd
    # CAUTION: Change DOCKER_IMAGE_VERSION to local in docker-compose.env if building your own image in section below
    # image: cheqd-node-custom-build:${DOCKER_IMAGE_VERSION}
    image: ghcr.io/cheqd/cheqd-node:${DOCKER_IMAGE_VERSION}
    user: cheqd
    configs:
      - source: genesis
        target: /genesis
      - source: seeds
        target: /seeds
    ports:
      # REQUIRED: Tendermint peer-to-peer (P2P) port
      # Please do not change this unless you've also changed this in the external-address parameter in Tendermint config
      - target: 26656
        published: ${TM_P2P_PORT}
        protocol: tcp
        mode: host
      # RECOMMENDED: Tendermint RPC port
      # Required if you want to use chqed-noded CLI directly from the host
      - target: 26657
        published: ${TM_RPC_API_PORT}
        protocol: tcp
        mode: host
      # OPTIONAL: Cosmos REST API port
      # Only required if you plan on targetting REST API requests at your own node
      - target: 1317
        published: ${COSMOS_REST_API_PORT}
        protocol: tcp
        mode: host
      # RECOMMENDED: gRPC port
      # Tendermint RPC requests (define above) are relayed to the gRPC port inside the container
      # The Cosmos gRPC API has endpoints not otherwise available in Tendermint RPC and Cosmos REST API
      - target: 9090
        published: ${COSMOS_GRPC_API_PORT}
        protocol: tcp
        mode: host
      # OPTIONAL: gRPC-Gateway port
      # gRPC-Gateway provides a RESTful interface to relay requests to gRPC API
      - target: 9091
        published: ${COSMOS_GRPC_GATEWAY_API_PORT}
        protocol: tcp
        mode: host
      # OPTIONAL: Prometheus metrics port
      # Allows collection of Tendermint and Cosmos metrics using Prometheus
      - target: 26660
        published: ${TM_PROMETHEUS_PORT}
        protocol: tcp
        mode: host
    # Defines cheqd-noded configuration variables INSIDE the container 
    env_file:
      - container.env
    entrypoint: [ "node-start" ]
    ulimits:
      nproc: 65535
      nofile:
        soft: 20000
        hard: 40000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:26657/status"]
      interval: 5m
      timeout: 10s
      retries: 3
      start_period: 1m
    restart: unless-stopped
    volumes:
      - type: volume
        source: ${CHEQD_DOCKER_VOLUME_SOURCE} # Defaults to cheqd_volume, defined below
        target: ${CHEQD_HOME_DIR} # Do NOT change mount point inside the container unless rebuilding the image

configs:
  genesis:
    file: ../../networks/${CHEQD_NETWORK}/genesis.json
  seeds:
    file: ../../networks/${CHEQD_NETWORK}/seeds.txt

volumes:
  cheqd_volume:
    name: cheqd_volume_${CHEQD_NETWORK}
    driver: ${CHEQD_DOCKER_VOLUME_DRIVER}
    external: ${CHEQD_DOCKER_VOLUME_IS_EXTERNAL}

# secrets:
#  node-key:
#    file:
#  validator-key:
#    file:

#!/bin/sh

CHEQD_USER_NAME=cheqd

# Home directory location can be passed when running dpkg -i
if [ -z ${CHEQD_HOME_DIR+x} ]; then
  CHEQD_HOME_DIR=/home/${CHEQD_USER_NAME}
fi

# Node config and data directory locations based on home directory
CHEQD_ROOT_DIR=${CHEQD_HOME_DIR}/.cheqdnode
CHEQD_CONFIG_DIR=${CHEQD_ROOT_DIR}/config
CHEQD_DATA_DIR=${CHEQD_ROOT_DIR}/data

# Log directory can be overwritten while running dpkg
if [ -z ${CHEQD_LOG_DIR+x} ]; then
  CHEQD_LOG_DIR=${CHEQD_ROOT_DIR}/log
fi

# If there is an argument then assume using as binary + script instead of apt
if [ -n "$1" ] && [ -f "$1" ] ; then
  cp "$1" /usr/bin/
fi

# Create cheqd user
if ! /usr/bin/getent passwd ${CHEQD_USER_NAME} > /dev/null 2>&1 ; then

  # Create group and user named "cheqd"
  addgroup ${CHEQD_USER_NAME} --quiet

  echo "Home directory for user ${CHEQD_USER_NAME} will be set up as ${CHEQD_HOME_DIR}"

  adduser --system ${CHEQD_USER_NAME} --home ${CHEQD_HOME_DIR} --shell /bin/bash --ingroup ${CHEQD_USER_NAME} --quiet

fi

# Set permissions and ownership for cheqd root directory
chown -R ${CHEQD_USER_NAME}:${CHEQD_USER_NAME} ${CHEQD_ROOT_DIR}

# Create node configuration directory
if [ ! -d "${CHEQD_CONFIG_DIR}" ]
then
    echo "Node configuration directory not found. Initializing."
    mkdir -p ${CHEQD_CONFIG_DIR}
    chmod -R 0755 ${CHEQD_CONFIG_DIR}
else
    echo "Node configuration exists. Skipping."
fi

# Create node data directory
if [ ! -d "${CHEQD_DATA_DIR}" ]
then
    echo "Node configuration data not found. Initializing."
    mkdir -p ${CHEQD_DATA_DIR}
    chmod -R 0755 ${CHEQD_DATA_DIR}
else
    echo "Node data exists. Skipping."
fi

# Create node log directory
if [ ! -d "${CHEQD_LOG_DIR}" ]
then
    echo "Node log directory not found. Initializing."
    mkdir -p ${CHEQD_LOG_DIR}
    chown -R syslog:${CHEQD_USER_NAME} ${CHEQD_LOG_DIR}
else
    echo "Node log directory exists. Skipping."
fi

# Symbolic link to log directory
if [ ! -L /var/log/cheqd-node ] ; then
    ln -s ${CHEQD_LOG_DIR} /var/log/cheqd-node
fi

# Add rsyslogd configuration
if [ -d /etc/rsyslog.d/ ] ; then
  if [ ! -f /etc/rsyslog.d/cheqd-node.conf ] ; then
    cat <<EOF > /etc/rsyslog.d/cheqd-node.conf
if \$programname == 'cheqd-noded' then ${CHEQD_LOG_DIR}/stdout.log
& stop
EOF
    # Restart syslog
    systemctl restart rsyslog
    fi
fi

# Add config for logrotation
if [ ! -f /etc/logrotate.d/cheqd-node ] ; then
  cat <<EOF > /etc/logrotate.d/cheqd-node
${CHEQD_LOG_DIR}/stdout.log {
  rotate 30
  maxsize 100M
  notifempty
  copytruncate
  compress
  maxage 30
}
EOF
fi

# Add crontab job for daily rotation
if [ ! -f /etc/cron.daily/cheqd-node ] ; then
  cat <<EOF > /etc/cron.daily/cheqd-node
#!/bin/bash
logrotate /etc/logrotate.d/cheqd-node
EOF

  # Make this script executable
  chmod +x /etc/cron.daily/cheqd-node

fi

# Add systemd script
if [ ! -f /lib/systemd/system/cheqd-noded.service ] ; then
  cat <<EOF > /lib/systemd/system/cheqd-noded.service
[Unit]
Description=Service for running cheqd-node daemon
After=network.target

[Service]
Type=simple
User=cheqd
ExecStart=/usr/bin/cheqd-noded start
Restart=on-failure
RestartSec=10
StartLimitBurst=10
StartLimitInterval=200
TimeoutSec=300
StandardOutput=syslog
StandardError=syslog
SyslogFacility=syslog
SyslogIdentifier=cheqd-noded
LimitNOFILE=65535

[Install]
WantedBy=multi-user.target
EOF
  # Reload daemons for systemctl
  systemctl daemon-reload

fi

syntax = "proto3";
package cheqdid.cheqdnode.cheqd.v1;

option go_package = "github.com/cheqd/cheqd-node/x/cheqd/types";

import "google/protobuf/any.proto";
import "cheqd/v1/did.proto";

// Msg defines the Msg service.
service Msg {
  rpc CreateDid(MsgCreateDid) returns (MsgCreateDidResponse);
  rpc UpdateDid(MsgUpdateDid) returns (MsgUpdateDidResponse);
}

// this line is used by starport scaffolding # proto/tx/message
message MsgCreateDid {
  MsgCreateDidPayload payload = 1;
  repeated SignInfo signatures = 2;
}

message MsgUpdateDid {
  MsgUpdateDidPayload payload = 1;
  repeated SignInfo signatures = 2;
}

message SignInfo {
  string verification_method_id = 1;
  string signature = 2;
}

message MsgCreateDidPayload {
  repeated string context = 1;
  string id = 2;
  repeated string controller = 3;
  repeated VerificationMethod verification_method = 4;
  repeated string authentication = 5;
  repeated string assertion_method = 6;
  repeated string capability_invocation = 7;
  repeated string capability_delegation = 8;
  repeated string key_agreement = 9;
  repeated string also_known_as = 10;
  repeated Service service = 11;
}

message MsgCreateDidResponse {
  string id = 1; // Not necessary
}

message MsgUpdateDidPayload {
  repeated string context = 1;
  string id = 2;
  repeated string controller = 3;
  repeated VerificationMethod verification_method = 4;
  repeated string authentication = 5;
  repeated string assertion_method = 6;
  repeated string capability_invocation = 7;
  repeated string capability_delegation = 8;
  repeated string key_agreement = 9;
  repeated string also_known_as = 10;
  repeated Service service = 11;
  string version_id = 12;
}

message MsgUpdateDidResponse {
  string id = 1; // Not necessary
}

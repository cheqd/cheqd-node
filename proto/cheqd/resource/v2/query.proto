syntax = "proto3";

package cheqd.resource.v2;

import "cheqd/resource/v2/resource.proto";
import "google/api/annotations.proto";

option go_package = "github.com/cheqd/cheqd-node/x/resource/types";

// Query defines the gRPC querier service for the resource module
service Query {
  // Fetch a resource from a collection with a given collection_id and id
  rpc Resource(QueryResourceRequest) returns (QueryResourceResponse) {
    option (google.api.http).get = "/cheqd/resource/v2/{collection_id}/resources/{id}";
  }

  // Fetch a resource's metadata from a collection with a given collection_id and id
  rpc ResourceMetadata(QueryResourceMetadataRequest) returns (QueryResourceMetadataResponse) {
    option (google.api.http).get = "/cheqd/resource/v2/{collection_id}/resources/{id}/metadata";
  }

  // Fetch all resource metadata from a collection with a given collection_id
  rpc CollectionResources(QueryCollectionResourcesRequest) returns (QueryCollectionResourcesResponse) {
    option (google.api.http).get = "/cheqd/resource/v2/{collection_id}/metadata";
  }
}

// QueryResourceRequest is the request type for the Query/Resource RPC method
message QueryResourceRequest {
  // collection_id is an identifier of the DidDocument the resource belongs to.
  // Format: <unique-identifier>
  //
  // Examples:
  // - c82f2b02-bdab-4dd7-b833-3e143745d612
  // - wGHEXrZvJxR8vw5P3UWH1j
  string collection_id = 1;

  // id is a unique id of the resource.
  // Format: <uuid>
  string id = 2;
}

// QueryResourceResponse is the response type for the Query/Resource RPC method
message QueryResourceResponse {
  // Successful resolution of the resource returns the following:
  // - resource is the requested resource
  // - metadata is the resource metadata associated with the requested resource
  ResourceWithMetadata resource = 1;
}

// QueryResourceMetadataRequest is the request type for the Query/ResourceMetadata RPC method
message QueryResourceMetadataRequest {
  // collection_id is an identifier of the DidDocument the resource belongs to.
  // Format: <unique-identifier>
  //
  // Examples:
  // - c82f2b02-bdab-4dd7-b833-3e143745d612
  // - wGHEXrZvJxR8vw5P3UWH1j
  string collection_id = 1;

  // id is a unique id of the resource.
  // Format: <uuid>
  string id = 2;
}

// QueryResourceMetadataResponse is the response type for the Query/ResourceMetadata RPC method
message QueryResourceMetadataResponse {
  // resource is the requested resource metadata
  Metadata resource = 1;
}

// QueryCollectionResourcesRequest is the request type for the Query/CollectionResources RPC method
message QueryCollectionResourcesRequest {
  // collection_id is an identifier of the DidDocument the resource belongs to.
  // Format: <unique-identifier>
  //
  // Examples:
  // - c82f2b02-bdab-4dd7-b833-3e143745d612
  // - wGHEXrZvJxR8vw5P3UWH1j
  string collection_id = 1;
}

// QueryCollectionResourcesResponse is the response type for the Query/CollectionResources RPC method
message QueryCollectionResourcesResponse {
  // resources is the requested collection of resource metadata
  repeated Metadata resources = 1;
}

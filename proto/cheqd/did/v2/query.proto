syntax = "proto3";

package cheqd.did.v2;

import "cheqd/did/v2/diddoc.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";

option go_package = "github.com/cheqd/cheqd-node/x/did/types";

// Query defines the gRPC querier service for the DID module
service Query {
  // DidDoc fetches the latest version of the DID Document for a given DID unique identifier
  rpc DidDoc(QueryDidDocRequest) returns (QueryDidDocResponse) {
    option (google.api.http) = {get: "/cheqd/did/v2/{id}"};
  }

  // DidDocVersion fetches the specific version of the DID Document for a given DID unique identifier
  rpc DidDocVersion(QueryDidDocVersionRequest) returns (QueryDidDocVersionResponse) {
    option (google.api.http) = {get: "/cheqd/did/v2/{id}/version/{version}"};
  }

  // AllDidDocVersionsMetadata fetches metadata for all versions of the DID Document for a given DID unique identifier
  rpc AllDidDocVersionsMetadata(QueryAllDidDocVersionsMetadataRequest) returns (QueryAllDidDocVersionsMetadataResponse) {
    option (google.api.http) = {get: "/cheqd/did/v2/{id}/metadata"};
  }
}

// QueryDidDocRequest is the request type for the Query/DidDoc method
message QueryDidDocRequest {
  // DID unique identifier of the DID Document to fetch.
  // UUID-style DIDs as well as Indy-style DID are supported.
  //
  // Format: did:cheqd:<namespace>:<unique-identifier>
  //
  // Examples:
  // - did:cheqd:mainnet:c82f2b02-bdab-4dd7-b833-3e143745d612
  // - did:cheqd:testnet:wGHEXrZvJxR8vw5P3UWH1j
  string id = 1;
}

// QueryDidDocResponse is the response type for the Query/DidDoc method
message QueryDidDocResponse {
  // didDocument is the latest version of the requested DID Document
  DidDoc did_doc = 1 [(gogoproto.jsontag) = "didDocument"];

  // didDocumentMetadata is metadata associated with the latest version of the requested DID Document
  Metadata metadata = 2 [(gogoproto.jsontag) = "didDocumentMetadata"];
}

// QueryDidDocVersionRequest is the request type for the Query/DidDocVersion method
message QueryDidDocVersionRequest {
  // DID unique identifier of the DID Document to fetch.
  // UUID-style DIDs as well as Indy-style DID are supported.
  //
  // Format: did:cheqd:<namespace>:<unique-identifier>
  //
  // Examples:
  // - did:cheqd:mainnet:c82f2b02-bdab-4dd7-b833-3e143745d612
  // - did:cheqd:testnet:wGHEXrZvJxR8vw5P3UWH1j
  string id = 1;

  // Unique version identifier of the DID Document to fetch.
  // Returns the specified version of the DID Document.
  //
  // Format: <uuid>
  //
  // Example: 93f2573c-eca9-4098-96cb-a1ec676a29ed
  string version = 2;
}

// QueryDidDocVersionResponse is the response type for the Query/DidDocVersion method
message QueryDidDocVersionResponse {
  // didDocument is the specific version of the requested DID Document
  DidDoc did_doc = 1 [(gogoproto.jsontag) = "didDocument"];

  // didDocumentMetadata is metadata associated with the specific version of the requested DID Document
  Metadata metadata = 2 [(gogoproto.jsontag) = "didDocumentMetadata"];
}

// QueryAllDidDocVersionsMetadataRequest is the request type for the Query/AllDidDocVersionsMetadata method
message QueryAllDidDocVersionsMetadataRequest {
  // DID unique identifier of the DID Document to fetch version metadata.
  // UUID-style DIDs as well as Indy-style DID are supported.
  //
  // Format: did:cheqd:<namespace>:<unique-identifier>
  //
  // Examples:
  // - did:cheqd:mainnet:c82f2b02-bdab-4dd7-b833-3e143745d612
  // - did:cheqd:testnet:wGHEXrZvJxR8vw5P3UWH1j
  string id = 1;
}

// QueryAllDidDocVersionsMetadataResponse is the response type for the Query/AllDidDocVersionsMetadata method
message QueryAllDidDocVersionsMetadataResponse {
  // versions is the list of all versions of the requested DID Document
  repeated Metadata versions = 1;
}

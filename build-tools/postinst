#!/bin/bash

CHEQD_USER_NAME=cheqd

# Home directory location can be passed when running dpkg -i
if [ -z ${CHEQD_HOME_DIR+x} ]; then
  CHEQD_HOME_DIR=/home/${CHEQD_USER_NAME}
fi

CHEQD_ROOT_DIR=${CHEQD_HOME_DIR}/.cheqdnode

# package can be installed with the supporting cosmovisor inside
if [ -z ${WITH_COSMOVISOR+x} ]; then
  WITH_COSMOVISOR="false"
else
  SERVICE_NAME="cheqd-noded.service"

  systemctl stop $SERVICE_NAME
  systemctl disable $SERVICE_NAME
  rm /etc/systemd/system/$SERVICE_NAME
  rm /etc/systemd/system/$SERVICE_NAME # and symlinks that might be related
  rm /usr/lib/systemd/system/$SERVICE_NAME 
  rm /usr/lib/systemd/system/$SERVICE_NAME # and symlinks that might be related
  systemctl daemon-reload
  systemctl reset-failed

  # Create service with cosmovisor

  cat <<EOF > /usr/lib/systemd/system/$SERVICE_NAME
[Unit]
Description=Service for running cosmovisor and cheqd-noded inside
After=network.target
Documentation=https://docs.cheqd.io/node

[Service]
Environment="DAEMON_HOME=${CHEQD_ROOT_DIR}"
Environment="DAEMON_NAME=cheqd-noded"
Environment="DAEMON_ALLOW_DOWNLOAD_BINARIES=true"
Environment="DAEMON_RESTART_AFTER_UPGRADE=true"
Type=simple
User=cheqd
ExecStart=/usr/bin/cosmovisor run start
Restart=on-failure
RestartSec=30
StartLimitBurst=5
StartLimitInterval=60
TimeoutSec=120
StandardOutput=syslog
StandardError=syslog
SyslogFacility=syslog
SyslogIdentifier=cheqd-noded
LimitNOFILE=65535

[Install]
WantedBy=multi-user.target
EOF

  systemctl daemon-reload
  systemctl reset-failed

  systemctl enable $SERVICE_NAME

  # Create cosmovisor environment

  COSMOVISOR_ROOT_DIR=${CHEQD_ROOT_DIR}/cosmovisor

  mkdir ${COSMOVISOR_ROOT_DIR}
  mkdir ${COSMOVISOR_ROOT_DIR}/genesis
  mkdir ${COSMOVISOR_ROOT_DIR}/genesis/bin/
  mkdir ${COSMOVISOR_ROOT_DIR}/upgrades
  mv /usr/bin/cheqd-noded ${COSMOVISOR_ROOT_DIR}/genesis/bin/
  ln -s ${COSMOVISOR_ROOT_DIR}/current /usr/bin/cheqd-noded
fi

# If there is an argument then assume using as binary + script instead of apt
if [ -n "$1" ] && [ -f "$1" ] ; then
  cp "$1" /usr/bin/
fi

# Create cheqd user
if ! /usr/bin/getent passwd ${CHEQD_USER_NAME} > /dev/null 2>&1 ; then
  # Create group and user named "cheqd"
  addgroup ${CHEQD_USER_NAME} --quiet
  echo "Home directory for user ${CHEQD_USER_NAME} will be set up as ${CHEQD_HOME_DIR}"
  adduser --system ${CHEQD_USER_NAME} --home ${CHEQD_HOME_DIR} --shell /bin/bash --ingroup ${CHEQD_USER_NAME} --quiet
  mkdir -p ${CHEQD_ROOT_DIR}
  chown -R ${CHEQD_USER_NAME}:${CHEQD_USER_NAME} ${CHEQD_ROOT_DIR}
else
  echo "User home directory already exists. Skipping user initialisation."
fi

# Log directory can be overwritten while running dpkg
if [ -z ${CHEQD_LOG_DIR+x} ]; then
  CHEQD_LOG_DIR=${CHEQD_ROOT_DIR}/log
fi

# Create node log directory
if [ ! -d "${CHEQD_LOG_DIR}" ]
then
    echo "Node log directory not found. Initializing."
    mkdir -p ${CHEQD_LOG_DIR}
    touch ${CHEQD_LOG_DIR}/stdout.log
    chown -R syslog:${CHEQD_USER_NAME} ${CHEQD_LOG_DIR}
else
    echo "Node log directory exists. Skipping."
fi

# Symbolic link to log directory
if [ ! -L /var/log/cheqd-node ] ; then
    ln -s ${CHEQD_LOG_DIR} /var/log/cheqd-node
fi

# Add rsyslogd configuration
if [ -d /etc/rsyslog.d/ ] ; then
  if [ ! -f /etc/rsyslog.d/cheqd-node.conf ] ; then
    cat <<EOF > /etc/rsyslog.d/cheqd-node.conf
if \$programname == 'cheqd-noded' then ${CHEQD_LOG_DIR}/stdout.log
& stop
EOF
    # Restart syslog
    systemctl restart rsyslog
    fi
fi

# Add config for logrotation
if [ ! -f /etc/logrotate.d/cheqd-node ] ; then
  cat <<EOF > /etc/logrotate.d/cheqd-node
${CHEQD_LOG_DIR}/stdout.log {
  rotate 7
  daily
  maxsize 100M
  notifempty
  copytruncate
  compress
  maxage 7
}
EOF
# Restart logrotate
systemctl restart logrotate.service
systemctl restart logrotate.timer
fi